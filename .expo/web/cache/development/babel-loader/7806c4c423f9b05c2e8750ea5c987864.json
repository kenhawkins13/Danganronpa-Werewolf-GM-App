{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\src\\\\components\\\\modals\\\\NightTimeAbilitiesItem.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { modalStyles } from \"../../styles/styles\";\nimport { Picker } from '@react-native-picker/picker';\nimport { GameContext } from \"../../../App\";\nexport default function NightTimeAbilitiesItemsModal(_ref) {\n  var visible = _ref.visible,\n      setVisible = _ref.setVisible;\n  var gameContext = useContext(GameContext);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemCard = _useState2[0],\n      setItemCard = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playerAbility = _useState4[0],\n      setPlayerAbility = _useState4[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: modalStyles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: modalStyles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker, {\n    style: {\n      width: 250\n    },\n    selectedValue: playerAbility || gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility,\n    onValueChange: function onValueChange(value) {\n      setPlayerAbility(value.toString());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    key: \"\",\n    label: \"Select an ability\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Kyoko Kirigiri\",\n    label: \"Kyoko Kirigiri\",\n    value: \"Kyoko Kirigiri\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Yasuhiro Hagakure\",\n    label: \"Yasuhiro Hagakure\",\n    value: \"Yasuhiro Hagakure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })), React.createElement(Picker, {\n    style: {\n      width: 250\n    },\n    selectedValue: itemCard || gameContext.playersInfo[gameContext.currentPlayerIndex].useItem,\n    onValueChange: function onValueChange(value) {\n      setItemCard(value.toString());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    key: \"\",\n    label: \"Select an item\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Glasses\",\n    label: \"Glasses\",\n    value: \"Glasses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Someone's Graduation Album\",\n    label: \"Someone's Graduation Album\",\n    value: \"Someone's Graduation Album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Silent Receiver\",\n    label: \"Silent Receiver\",\n    value: \"Silent Receiver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      if (playerAbility !== '' || itemCard !== '') {\n        gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility = playerAbility;\n        gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = itemCard;\n        gameContext.playersInfo[gameContext.currentPlayerIndex].colorScheme = 'green';\n      }\n\n      setPlayerAbility('');\n      setItemCard('');\n      setVisible(!visible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"OK\")), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility = '';\n      gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = '';\n      gameContext.playersInfo[gameContext.currentPlayerIndex].colorScheme = 'white';\n      setPlayerAbility('');\n      setItemCard('');\n      setVisible(!visible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Clear\")))))));\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/src/components/modals/NightTimeAbilitiesItem.tsx"],"names":["React","useContext","useState","modalStyles","Picker","GameContext","NightTimeAbilitiesItemsModal","visible","setVisible","gameContext","itemCard","setItemCard","playerAbility","setPlayerAbility","centeredView","modalView","width","playersInfo","currentPlayerIndex","useAbility","value","toString","useItem","flexDirection","button","backgroundColor","colorScheme","textStyle"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport { Modal, View, Text, TouchableHighlight } from \"react-native\"\r\nimport { modalStyles } from \"../../styles/styles\"\r\nimport { Picker } from '@react-native-picker/picker'\r\nimport { GameContext } from \"../../../App\"\r\n\r\nexport default function NightTimeAbilitiesItemsModal({visible, setVisible}:Props) {\r\n  const gameContext = useContext(GameContext)\r\n  const [itemCard, setItemCard] = useState('')\r\n  const [playerAbility, setPlayerAbility] = useState('')\r\n  return (\r\n    <View>\r\n      <Modal animationType=\"slide\" transparent={true} visible={visible} >\r\n        <View style={modalStyles.centeredView}>\r\n          <View style={modalStyles.modalView}>\r\n            <Picker style={{width: 250}} selectedValue={playerAbility || gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility}\r\n              onValueChange={(value) => {setPlayerAbility(value.toString())}}>\r\n              <Picker.Item key=\"\" label=\"Select an ability\" value=\"\"/>\r\n              <Picker.Item key=\"Kyoko Kirigiri\" label=\"Kyoko Kirigiri\" value=\"Kyoko Kirigiri\"/>\r\n              <Picker.Item key=\"Yasuhiro Hagakure\" label=\"Yasuhiro Hagakure\" value=\"Yasuhiro Hagakure\"/>\r\n            </Picker>\r\n            <Picker style={{width: 250}} selectedValue={itemCard || gameContext.playersInfo[gameContext.currentPlayerIndex].useItem}\r\n              onValueChange={(value) => {setItemCard(value.toString())}}>\r\n              <Picker.Item key=\"\" label=\"Select an item\" value=\"\"/>\r\n              <Picker.Item key=\"Glasses\" label=\"Glasses\" value=\"Glasses\"/>\r\n              <Picker.Item key=\"Someone's Graduation Album\" label=\"Someone's Graduation Album\" value=\"Someone's Graduation Album\"/>\r\n              <Picker.Item key=\"Silent Receiver\" label=\"Silent Receiver\" value=\"Silent Receiver\"/>\r\n            </Picker>\r\n            <View style={{flexDirection: 'row'}}>\r\n              <TouchableHighlight\r\n                style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }}\r\n                onPress={() => {\r\n                  if (playerAbility !== '' || itemCard !== '') {\r\n                    gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility = playerAbility   \r\n                    gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = itemCard   \r\n                    gameContext.playersInfo[gameContext.currentPlayerIndex].colorScheme = 'green'                  \r\n                  }\r\n                  setPlayerAbility('')\r\n                  setItemCard('')\r\n                  setVisible(!visible)\r\n                }}>\r\n                <Text style={modalStyles.textStyle}>OK</Text>\r\n              </TouchableHighlight>\r\n              <TouchableHighlight\r\n                style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }}\r\n                onPress={() => { \r\n                  gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility = ''\r\n                  gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = ''\r\n                  gameContext.playersInfo[gameContext.currentPlayerIndex].colorScheme = 'white'\r\n                  setPlayerAbility('')\r\n                  setItemCard('')\r\n                  setVisible(!visible) \r\n                }}>\r\n                <Text style={modalStyles.textStyle}>Clear</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\n\r\ntype Props = {visible:boolean, setVisible:React.Dispatch<any>}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\components\\\\PlayersComponent.tsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nexport default function PlayersComponent(_ref) {\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerIndex = _useState2[0],\n      setPlayerIndex = _useState2[1];\n\n  var _useState3 = useState(appContext.playersInfo[playerIndex].role),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playerRole = _useState4[0],\n      setPlayerRole = _useState4[1];\n\n  var heightPercent = (1 / Math.ceil(appContext.playerCount / 2) * 100).toString() + '%';\n  return _toConsumableArray(Array(appContext.playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      key: 'player' + index,\n      style: frameStyle(heightPercent).frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableHighlight, {\n      key: 'player' + index + 1,\n      style: buttonStyle(appContext.playersInfo[index].backgroundColor).button,\n      onPress: function onPress() {\n        setModalVisible(true);\n        setPlayerIndex(index);\n        setPlayerRole(appContext.playersInfo[index].role);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, appContext.playersInfo[index].name)), React.createElement(PlayerInfoModal, {\n      playerIndex: playerIndex,\n      playerRole: playerRole,\n      setPlayerRole: setPlayerRole,\n      visible: playerInfoModalVisible,\n      setVisible: setPlayerInfoModalVisible,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }));\n  });\n}\n\nfunction frameStyle(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n}\n\nfunction buttonStyle(backgroundColor) {\n  return StyleSheet.create({\n    button: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: backgroundColor\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/components/PlayersComponent.tsx"],"names":["React","useContext","useState","AppContext","PlayersComponent","appContext","playerIndex","setPlayerIndex","playersInfo","role","playerRole","setPlayerRole","heightPercent","Math","ceil","playerCount","toString","Array","map","elementInArray","index","frameStyle","frame","buttonStyle","backgroundColor","button","setModalVisible","name","playerInfoModalVisible","setPlayerInfoModalVisible","StyleSheet","create","width","height","borderColor","borderWidth","alignItems","justifyContent"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;AAEA,SAASC,UAAT;AAEA,eAAe,SAASC,gBAAT,OAAoC;AAAA;;AAAA;;AACjD,MAAMC,UAAU,GAAGJ,UAAU,CAACE,UAAD,CAA7B;;AADiD,kBAEXD,QAAQ,CAAC,CAAD,CAFG;AAAA;AAAA,MAE1CI,WAF0C;AAAA,MAE7BC,cAF6B;;AAAA,mBAGbL,QAAQ,CAACG,UAAU,CAACG,WAAX,CAAuBF,WAAvB,EAAoCG,IAArC,CAHK;AAAA;AAAA,MAG1CC,UAH0C;AAAA,MAG9BC,aAH8B;;AAIjD,MAAMC,aAAa,GAAG,CAAE,IAAIC,IAAI,CAACC,IAAL,CAAUT,UAAU,CAACU,WAAX,GAAyB,CAAnC,CAAL,GAA8C,GAA/C,EAAoDC,QAApD,KAAiE,GAAvF;AACA,SACE,mBAAIC,KAAK,CAACZ,UAAU,CAACU,WAAZ,CAAT,EAAmCG,GAAnC,CAAuC,UAACC,cAAD,EAAiBC,KAAjB;AAAA,WACrC,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,WAAWA,KAAtB;AAA6B,MAAA,KAAK,EAAEC,UAAU,CAACT,aAAD,CAAV,CAA0BU,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAE,WAAWF,KAAX,GAAiB,CAA1C;AAA6C,MAAA,KAAK,EAAEG,WAAW,CAAClB,UAAU,CAACG,WAAX,CAAuBY,KAAvB,EAA8BI,eAA/B,CAAX,CAA2DC,MAA/G;AAAuH,MAAA,OAAO,EAAE,mBAAM;AAClIC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAnB,QAAAA,cAAc,CAACa,KAAD,CAAd;AACAT,QAAAA,aAAa,CAACN,UAAU,CAACG,WAAX,CAAuBY,KAAvB,EAA8BX,IAA/B,CAAb;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOJ,UAAU,CAACG,WAAX,CAAuBY,KAAvB,EAA8BO,IAArC,CALF,CADF,EAQE,oBAAC,eAAD;AAAiB,MAAA,WAAW,EAAErB,WAA9B;AAA2C,MAAA,UAAU,EAAEI,UAAvD;AAAmE,MAAA,aAAa,EAAEC,aAAlF;AAAiG,MAAA,OAAO,EAAEiB,sBAA1G;AAAkI,MAAA,UAAU,EAAEC,yBAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADqC;AAAA,GAAvC,CADF;AAcD;;AAID,SAASR,UAAT,CAAoBT,aAApB,EAA2C;AACzC,SAAOkB,UAAU,CAACC,MAAX,CAAkB;AACvBT,IAAAA,KAAK,EAAE;AACLU,MAAAA,KAAK,EAAE,KADF;AAELC,MAAAA,MAAM,EAAErB,aAFH;AAGLsB,MAAAA,WAAW,EAAE,OAHR;AAILC,MAAAA,WAAW,EAAE,CAJR;AAKLC,MAAAA,UAAU,EAAE,QALP;AAMLC,MAAAA,cAAc,EAAE;AANX;AADgB,GAAlB,CAAP;AAUD;;AAED,SAASd,WAAT,CAAqBC,eAArB,EAA8C;AAC5C,SAAOM,UAAU,CAACC,MAAX,CAAkB;AACvBN,IAAAA,MAAM,EAAE;AACNO,MAAAA,KAAK,EAAE,MADD;AAENC,MAAAA,MAAM,EAAE,MAFF;AAGNG,MAAAA,UAAU,EAAE,QAHN;AAINC,MAAAA,cAAc,EAAE,QAJV;AAKNb,MAAAA,eAAe,EAAEA;AALX;AADe,GAAlB,CAAP;AASD","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableHighlight } from 'react-native'\r\nimport { AppContext } from '../../App'\r\n\r\nexport default function PlayersComponent({}:Props) {\r\n  const appContext = useContext(AppContext);\r\n  const [playerIndex, setPlayerIndex] = useState(0)\r\n  const [playerRole, setPlayerRole] = useState(appContext.playersInfo[playerIndex].role)\r\n  const heightPercent = ((1 / Math.ceil(appContext.playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    [...Array(appContext.playerCount)].map((elementInArray, index) => (\r\n      <View key={'player' + index} style={frameStyle(heightPercent).frame}>\r\n        <TouchableHighlight key={'player' + index+1} style={buttonStyle(appContext.playersInfo[index].backgroundColor).button} onPress={() => {\r\n            setModalVisible(true)\r\n            setPlayerIndex(index)\r\n            setPlayerRole(appContext.playersInfo[index].role)\r\n          }}>\r\n          <Text>{appContext.playersInfo[index].name}</Text>\r\n        </TouchableHighlight>\r\n        <PlayerInfoModal playerIndex={playerIndex} playerRole={playerRole} setPlayerRole={setPlayerRole} visible={playerInfoModalVisible} setVisible={setPlayerInfoModalVisible}/>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\ntype Props = {}\r\n\r\nfunction frameStyle(heightPercent: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    }\r\n  })\r\n}\r\n\r\nfunction buttonStyle(backgroundColor: string) {\r\n  return StyleSheet.create({\r\n    button: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: backgroundColor\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\components\\\\NightTimeItemAbilitiesModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { modalStyles } from \"../styles/styles\";\nimport { Picker } from '@react-native-picker/picker';\nimport { AppContext } from \"../../App\";\nexport default function NightTimeItemsAbilitiesModal(_ref) {\n  var playerIndex = _ref.playerIndex,\n      visible = _ref.visible,\n      setVisible = _ref.setVisible;\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(-1),\n      _useState2 = _slicedToArray(_useState, 2),\n      previousPlayerIndex = _useState2[0],\n      setPreviousPlayerIndex = _useState2[1];\n\n  var _useState3 = useState(appContext.playersInfo[playerIndex].item),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemCard = _useState4[0],\n      setItemCard = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playerAbility = _useState6[0],\n      setPlayerAbility = _useState6[1];\n\n  reRender(previousPlayerIndex, playerIndex, setItemCard, appContext);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: modalStyles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: modalStyles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker, {\n    style: {\n      width: 250\n    },\n    selectedValue: itemCard,\n    onValueChange: function onValueChange(value) {\n      setItemCard(value.toString());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    key: \"\",\n    label: \"Select an ability or item\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Glasses\",\n    label: \"Glasses\",\n    value: \"Glasses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Someone's Graduation Album\",\n    label: \"Someone's Graduation Album\",\n    value: \"Someone's Graduation Album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Silent Receiver\",\n    label: \"Silent Receiver\",\n    value: \"Silent Receiver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  })), React.createElement(Picker, {\n    style: {\n      width: 250\n    },\n    selectedValue: playerAbility,\n    onValueChange: function onValueChange(value) {\n      setPlayerAbility(value.toString());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    key: \"\",\n    label: \"Select an ability or item\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Yasuhiro Hagakure's ability\",\n    label: \"Yasuhiro Hagakure's ability\",\n    value: \"Yasuhiro Hagakure's ability\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      if (itemCard !== '') {\n        appContext.playersInfo[playerIndex].item = itemCard;\n      }\n\n      setPreviousPlayerIndex(playerIndex);\n      setVisible(!visible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"OK\")), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      appContext.playersInfo[playerIndex].colorScheme = 'white';\n      appContext.playersInfo[playerIndex].item = '';\n      setPreviousPlayerIndex(playerIndex);\n      setVisible(!visible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Clear\")))))));\n}\n;\n\nfunction reRender(previousPlayerIndex, playerIndex, setItemCard, appContext) {\n  if (playerIndex != previousPlayerIndex) {}\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/components/NightTimeItemAbilitiesModal.tsx"],"names":["React","useContext","useState","modalStyles","Picker","AppContext","NightTimeItemsAbilitiesModal","playerIndex","visible","setVisible","appContext","previousPlayerIndex","setPreviousPlayerIndex","playersInfo","item","itemCard","setItemCard","playerAbility","setPlayerAbility","reRender","centeredView","modalView","width","value","toString","flexDirection","button","backgroundColor","textStyle","colorScheme"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Modal, View, Text, TouchableHighlight } from \"react-native\";\r\nimport { modalStyles } from \"../styles/styles\";\r\nimport { Picker } from '@react-native-picker/picker'\r\nimport { AppContext } from \"../../App\";\r\nimport { AppContextType } from \"../types/types\";\r\n\r\nexport default function NightTimeItemsAbilitiesModal({playerIndex, visible, setVisible}:Props) {\r\n  const appContext = useContext(AppContext)\r\n  const [previousPlayerIndex, setPreviousPlayerIndex] = useState(-1)\r\n  const [itemCard, setItemCard] = useState(appContext.playersInfo[playerIndex].item)\r\n  const [playerAbility, setPlayerAbility] = useState('')\r\n  reRender(previousPlayerIndex, playerIndex, setItemCard, appContext)\r\n  return (\r\n    <View>\r\n      <Modal animationType=\"slide\" transparent={true} visible={visible} >\r\n        <View style={modalStyles.centeredView}>\r\n          <View style={modalStyles.modalView}>\r\n            <Picker style={{width: 250}} selectedValue={itemCard}\r\n              onValueChange={(value) => {setItemCard(value.toString())}}>\r\n              <Picker.Item key=\"\" label=\"Select an ability or item\" value=\"\"/>\r\n              <Picker.Item key=\"Glasses\" label=\"Glasses\" value=\"Glasses\"/>\r\n              <Picker.Item key=\"Someone's Graduation Album\" label=\"Someone's Graduation Album\" value=\"Someone's Graduation Album\"/>\r\n              <Picker.Item key=\"Silent Receiver\" label=\"Silent Receiver\" value=\"Silent Receiver\"/>\r\n            </Picker>\r\n            <Picker style={{width: 250}} selectedValue={playerAbility}\r\n              onValueChange={(value) => {setPlayerAbility(value.toString())}}>\r\n              <Picker.Item key=\"\" label=\"Select an ability or item\" value=\"\"/>\r\n              <Picker.Item key=\"Yasuhiro Hagakure's ability\" label=\"Yasuhiro Hagakure's ability\" value=\"Yasuhiro Hagakure's ability\"/>\r\n            </Picker>\r\n            <View style={{flexDirection: 'row'}}>\r\n              <TouchableHighlight\r\n                style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }}\r\n                onPress={() => {\r\n                  if (itemCard !== '') {\r\n                    appContext.playersInfo[playerIndex].item = itemCard                    \r\n                  }\r\n                  setPreviousPlayerIndex(playerIndex)\r\n                  setVisible(!visible)\r\n                }}>\r\n                <Text style={modalStyles.textStyle}>OK</Text>\r\n              </TouchableHighlight>\r\n              <TouchableHighlight\r\n                style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }}\r\n                onPress={() => { \r\n                  appContext.playersInfo[playerIndex].colorScheme = 'white'\r\n                  appContext.playersInfo[playerIndex].item = ''\r\n                  setPreviousPlayerIndex(playerIndex)\r\n                  setVisible(!visible) \r\n                }}>\r\n                <Text style={modalStyles.textStyle}>Clear</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nfunction reRender(previousPlayerIndex:number, playerIndex:number, setItemCard:React.Dispatch<any>, appContext:AppContextType) {\r\n  if (playerIndex != previousPlayerIndex) {\r\n    // setItemCard(appContext.playersInfo[playerIndex].item)\r\n  }\r\n}\r\n\r\ntype Props = {playerIndex: number, visible:boolean, setVisible:React.Dispatch<any>}\r\n"]},"metadata":{},"sourceType":"module"}
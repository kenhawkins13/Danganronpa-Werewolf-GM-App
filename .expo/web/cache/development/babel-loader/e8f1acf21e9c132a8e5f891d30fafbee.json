{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\src\\\\components\\\\modals\\\\Confirmation.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { modalStyles } from \"../../styles/styles\";\nexport default function Confirmation(_ref) {\n  var visible = _ref.visible,\n      setVisible = _ref.setVisible,\n      text = _ref.text,\n      onYes = _ref.onYes,\n      onNo = _ref.onNo;\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: modalStyles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: modalStyles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, text), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setVisible(false);\n      onYes();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }\n  }, \"Yes\")), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setVisible(false);\n      onNo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 15\n    }\n  }, \"No\"))))));\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/src/components/modals/Confirmation.tsx"],"names":["React","modalStyles","Confirmation","visible","setVisible","text","onYes","onNo","centeredView","modalView","modalText","flexDirection","button","backgroundColor","textStyle"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT;AAEA,eAAe,SAASC,YAAT,OAAsE;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAbC,IAAa,QAAbA,IAAa;AACnF,SACE,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAC,OAArB;AAA6B,IAAA,WAAW,EAAE,IAA1C;AAAgD,IAAA,OAAO,EAAEJ,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAO,IAAA,KAAK,EAAEF,WAAW,CAACO,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,WAAW,CAACQ,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,WAAW,CAACS,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCL,IAArC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACM,MAAAA,aAAa,EAAE;AAAhB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,KAAK,kCAAOV,WAAW,CAACW,MAAnB;AAA2BC,MAAAA,eAAe,EAAE;AAA5C,MAAzB;AAAkF,IAAA,OAAO,EAAE,mBAAM;AAC7FT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,KAAK;AACN,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,WAAW,CAACa,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CADF,EAOE,oBAAC,kBAAD;AAAoB,IAAA,KAAK,kCAAOb,WAAW,CAACW,MAAnB;AAA2BC,MAAAA,eAAe,EAAE;AAA5C,MAAzB;AAAkF,IAAA,OAAO,EAAE,mBAAM;AAC7FT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,IAAI;AACL,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,WAAW,CAACa,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAPF,CAFF,CADF,CADF,CADF;AAuBD","sourcesContent":["import React from \"react\"\r\nimport { View, Text, TouchableHighlight, Modal } from \"react-native\"\r\nimport { modalStyles } from \"../../styles/styles\"\r\n\r\nexport default function Confirmation({visible, setVisible, text, onYes, onNo}:Props) {\r\n  return (\r\n    <Modal animationType=\"slide\" transparent={true} visible={visible}>\r\n      <View  style={modalStyles.centeredView}>\r\n        <View style={modalStyles.modalView}>\r\n          <Text style={modalStyles.modalText}>{text}</Text>\r\n          <View style={{flexDirection: 'row'}}>\r\n            <TouchableHighlight style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }} onPress={() => {\r\n                setVisible(false)\r\n                onYes() \r\n              }}>\r\n              <Text style={modalStyles.textStyle}>Yes</Text>\r\n            </TouchableHighlight>\r\n            <TouchableHighlight style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }} onPress={() => { \r\n                setVisible(false)\r\n                onNo()\r\n              }}>\r\n              <Text style={modalStyles.textStyle}>No</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\ntype Props = {visible:boolean, setVisible:React.Dispatch<any>, text:string, onYes:() => void, onNo:() => void}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\src\\\\screens\\\\NightTime.tsx\";\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { GameContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayersModal from \"../components/modals/Players\";\nimport { roleInPlay } from \"../data/Table\";\nimport { speechSchoolAnnouncement1, speechSchoolAnnouncement2, speechToAlterEgoAwake, speechToAlterEgoSleep, speechToBlackenedAwake1, speechToBlackenedAwake2, speechToBlackenedSleep, speechToMonomiAwake, speechToMonomiSleep, speechToTraitorsAwake, speechToTraitorsSleep } from \"../data/NightTimeDialogue\";\nimport * as Speech from 'expo-speech';\nimport NightTimeAbilitiesItemsModal from \"../components/modals/NightTimeAbilitiesItem\";\nimport RevealRoleModal from \"../components/modals/RevealRole\";\nvar stage = 'schoolAnnouncement';\nvar abilityOrItem = '';\nvar modalType = '';\nvar previousPlayerIndex = -1;\n\nvar sleep = function sleep(milliseconds) {\n  return new Promise(function (res) {\n    return setTimeout(res, milliseconds);\n  });\n};\n\nexport default function NightTimeScreen() {\n  var gameContext = useContext(GameContext);\n\n  var _useNavigation = useNavigation(),\n      push = _useNavigation.push;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      PlayersModalVisible = _useState2[0],\n      setPlayersModalVisible = _useState2[1];\n\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    setPlayersModalVisible(false);\n  }, [isFocused]);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Night Time of Day \", gameContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Some text\")), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      nightTimeLogic(gameContext, push, setPlayersModalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Button\")))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"ItemsScreen\",\n    nextPage: \"MorningTimeScreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), PlayersModalCustomized(modalType, PlayersModalVisible, setPlayersModalVisible));\n}\n\nfunction PlayersModalCustomized(modalType, PlayersModalVisible, setPlayersModalVisible) {\n  var gameContext = useContext(GameContext);\n\n  var _useNavigation2 = useNavigation(),\n      push = _useNavigation2.push;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subModalVisible = _useState4[0],\n      setSubModalVisible = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      disableContinueButton = _useState6[0],\n      setDisableContinueButton = _useState6[1];\n\n  var continueButtonVisible = false;\n\n  var onPlayerTouch = function onPlayerTouch(playerIndex) {};\n\n  var subModal = React.createElement(React.Fragment, null);\n\n  if (modalType === 'nightTimeAbilitiesItems') {\n    continueButtonVisible = true;\n\n    if (disableContinueButton === true) {\n      setDisableContinueButton(false);\n    }\n\n    onPlayerTouch = function onPlayerTouch(playerIndex) {\n      setSubModalVisible(true);\n    };\n\n    subModal = React.createElement(NightTimeAbilitiesItemsModal, {\n      visible: subModalVisible,\n      setVisible: setSubModalVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }\n    });\n  } else if (modalType === 'revealRole') {\n    continueButtonVisible = false;\n\n    if (disableContinueButton === false) {\n      setDisableContinueButton(true);\n    }\n\n    onPlayerTouch = function onPlayerTouch(playerIndex) {\n      setSubModalVisible(true);\n    };\n\n    subModal = React.createElement(RevealRoleModal, {\n      visible: subModalVisible,\n      setVisible: setSubModalVisible,\n      abilityOrItem: abilityOrItem,\n      callback: function callback() {\n        setPlayersModalVisible(false);\n        nightTimeLogic(gameContext, push, setPlayersModalVisible);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }\n    });\n  } else if (modalType === 'monomi') {\n    continueButtonVisible = false;\n\n    if (disableContinueButton === false) {\n      setDisableContinueButton(true);\n    }\n\n    onPlayerTouch = function onPlayerTouch(playerIndex) {\n      gameContext.playersInfo.forEach(function (playerInfo) {\n        playerInfo.colorScheme = 'white';\n      });\n\n      if (playerIndex !== gameContext.monomiProtect) {\n        gameContext.playersInfo[playerIndex].colorScheme = 'lightblue';\n        gameContext.monomiProtect = playerIndex;\n      } else {\n        gameContext.monomiProtect = -1;\n      }\n    };\n  } else if (modalType === 'blackened') {\n    continueButtonVisible = true;\n\n    onPlayerTouch = function onPlayerTouch(playerIndex) {\n      gameContext.playersInfo.forEach(function (playerInfo) {\n        playerInfo.colorScheme = 'white';\n      });\n      gameContext.playersInfo[playerIndex].colorScheme = '#cc0066';\n      gameContext.blackenedAttack = playerIndex;\n      setDisableContinueButton(false);\n    };\n  }\n\n  return React.createElement(PlayersModal, {\n    visible: PlayersModalVisible,\n    setVisible: setPlayersModalVisible,\n    modal: subModal,\n    continueVisible: continueButtonVisible,\n    disableContinue: disableContinueButton,\n    onPlayerTouch: onPlayerTouch,\n    onContinue: function onContinue() {\n      return nightTimeLogic(gameContext, push, setPlayersModalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction nightTimeLogic(gameContext, push, setPlayersModalVisible) {\n  return _regeneratorRuntime.async(function nightTimeLogic$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = stage;\n          _context.next = _context.t0 === 'schoolAnnouncement' ? 3 : _context.t0 === 'useItems' ? 14 : _context.t0 === 'traitor' ? 17 : _context.t0 === 'monomi' ? 23 : _context.t0 === 'alterEgo' ? 29 : _context.t0 === 'alterEgoSleep' ? 38 : _context.t0 === 'blackened' ? 43 : _context.t0 === 'blackenedSleep' ? 47 : 53;\n          break;\n\n        case 3:\n          if (!(gameContext.mode === 'extreme' && gameContext.dayNumber > 0)) {\n            _context.next = 9;\n            break;\n          }\n\n          stage = 'useItems';\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(schoolAnnouncement2(gameContext, setPlayersModalVisible));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(schoolAnnouncement1());\n\n        case 11:\n          stage = 'traitor';\n          nightTimeLogic(gameContext, push, setPlayersModalVisible);\n\n        case 13:\n          return _context.abrupt(\"break\", 53);\n\n        case 14:\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(abilitiesAndItemsSpeech(gameContext, push, setPlayersModalVisible));\n\n        case 16:\n          return _context.abrupt(\"break\", 53);\n\n        case 17:\n          if (!(roleInPlay(gameContext.roleCounts, 'Traitor') && gameContext.dayNumber === 0)) {\n            _context.next = 20;\n            break;\n          }\n\n          _context.next = 20;\n          return _regeneratorRuntime.awrap(traitor(gameContext, setPlayersModalVisible));\n\n        case 20:\n          stage = 'monomi';\n          nightTimeLogic(gameContext, push, setPlayersModalVisible);\n          return _context.abrupt(\"break\", 53);\n\n        case 23:\n          if (!(roleInPlay(gameContext.roleCounts, 'Monomi') && gameContext.dayNumber > 0 && !gameContext.monomiExploded)) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 26;\n          return _regeneratorRuntime.awrap(monomi(gameContext, setPlayersModalVisible));\n\n        case 26:\n          stage = 'alterEgo';\n          nightTimeLogic(gameContext, push, setPlayersModalVisible);\n          return _context.abrupt(\"break\", 53);\n\n        case 29:\n          if (!(gameContext.dayNumber > 0 && gameContext.alterEgoAlive)) {\n            _context.next = 35;\n            break;\n          }\n\n          stage = 'alterEgoSleep';\n          _context.next = 33;\n          return _regeneratorRuntime.awrap(alterEgo(gameContext, setPlayersModalVisible));\n\n        case 33:\n          _context.next = 37;\n          break;\n\n        case 35:\n          stage = 'blackened';\n          nightTimeLogic(gameContext, push, setPlayersModalVisible);\n\n        case 37:\n          return _context.abrupt(\"break\", 53);\n\n        case 38:\n          _context.next = 40;\n          return _regeneratorRuntime.awrap(alterEgoSleep());\n\n        case 40:\n          stage = 'blackened';\n          nightTimeLogic(gameContext, push, setPlayersModalVisible);\n          return _context.abrupt(\"break\", 53);\n\n        case 43:\n          stage = 'blackenedSleep';\n          _context.next = 46;\n          return _regeneratorRuntime.awrap(blackened(gameContext, setPlayersModalVisible));\n\n        case 46:\n          return _context.abrupt(\"break\", 53);\n\n        case 47:\n          stage = 'schoolAnnouncement';\n          _context.next = 50;\n          return _regeneratorRuntime.awrap(blackenedSleep());\n\n        case 50:\n          gameContext.dayNumber += 1;\n          push('MorningTimeScreen');\n          return _context.abrupt(\"break\", 53);\n\n        case 53:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction schoolAnnouncement1() {\n  return _regeneratorRuntime.async(function schoolAnnouncement1$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          Speech.speak(speechSchoolAnnouncement1);\n\n        case 1:\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 3:\n          if (!_context2.sent) {\n            _context2.next = 6;\n            break;\n          }\n\n          _context2.next = 1;\n          break;\n\n        case 6:\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(sleep(2 * 1000));\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction schoolAnnouncement2(gameContext, setPlayersModalVisible) {\n  return _regeneratorRuntime.async(function schoolAnnouncement2$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          gameContext.playersInfo.forEach(function (playerInfo) {\n            playerInfo.colorScheme = 'white';\n          });\n          modalType = 'nightTimeAbilitiesItems';\n          Speech.speak(speechSchoolAnnouncement2);\n\n        case 3:\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 5:\n          if (!_context3.sent) {\n            _context3.next = 8;\n            break;\n          }\n\n          _context3.next = 3;\n          break;\n\n        case 8:\n          _context3.next = 10;\n          return _regeneratorRuntime.awrap(sleep(2 * 1000));\n\n        case 10:\n          setPlayersModalVisible(true);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction traitor(gameContext, setPlayersModalVisible) {\n  return _regeneratorRuntime.async(function traitor$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          gameContext.playersInfo.forEach(function (playerInfo) {\n            if (playerInfo.role === 'Blackened') {\n              playerInfo.colorScheme = 'black';\n            } else if (playerInfo.role === 'Traitor') {\n              playerInfo.colorScheme = 'grey';\n            } else {\n              playerInfo.colorScheme = 'white';\n            }\n          });\n          setPlayersModalVisible(true);\n          Speech.speak(speechToTraitorsAwake);\n\n        case 3:\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 5:\n          if (!_context4.sent) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 3;\n          break;\n\n        case 8:\n          _context4.next = 10;\n          return _regeneratorRuntime.awrap(sleep(5 * 1000));\n\n        case 10:\n          setPlayersModalVisible(false);\n          Speech.speak(speechToTraitorsSleep);\n\n        case 12:\n          _context4.next = 14;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 14:\n          if (!_context4.sent) {\n            _context4.next = 17;\n            break;\n          }\n\n          _context4.next = 12;\n          break;\n\n        case 17:\n          _context4.next = 19;\n          return _regeneratorRuntime.awrap(sleep(2 * 1000));\n\n        case 19:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction monomi(gameContext, setPlayersModalVisible) {\n  return _regeneratorRuntime.async(function monomi$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          modalType = 'monomi';\n          abilityOrItem = 'Protect';\n          gameContext.playersInfo.forEach(function (playerInfo) {\n            playerInfo.colorScheme = 'white';\n          });\n          setPlayersModalVisible(true);\n          Speech.speak(speechToMonomiAwake);\n\n        case 5:\n          _context5.next = 7;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 7:\n          if (!_context5.sent) {\n            _context5.next = 10;\n            break;\n          }\n\n          _context5.next = 5;\n          break;\n\n        case 10:\n          _context5.next = 12;\n          return _regeneratorRuntime.awrap(sleep(15 * 1000));\n\n        case 12:\n          setPlayersModalVisible(false);\n          Speech.speak(speechToMonomiSleep);\n\n        case 14:\n          _context5.next = 16;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 16:\n          if (!_context5.sent) {\n            _context5.next = 19;\n            break;\n          }\n\n          _context5.next = 14;\n          break;\n\n        case 19:\n          _context5.next = 21;\n          return _regeneratorRuntime.awrap(sleep(1 * 1000));\n\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction alterEgo(gameContext, setPlayersModalVisible) {\n  return _regeneratorRuntime.async(function alterEgo$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          modalType = 'revealRole';\n          abilityOrItem = 'Alter Ego';\n          gameContext.playersInfo.forEach(function (playerInfo) {\n            if (playerInfo.role === 'Alter Ego') {\n              playerInfo.colorScheme = 'grey';\n            } else {\n              playerInfo.colorScheme = 'white';\n            }\n          });\n          Speech.speak(speechToAlterEgoAwake);\n\n        case 4:\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 6:\n          if (!_context6.sent) {\n            _context6.next = 9;\n            break;\n          }\n\n          _context6.next = 4;\n          break;\n\n        case 9:\n          _context6.next = 11;\n          return _regeneratorRuntime.awrap(sleep(1 * 1000));\n\n        case 11:\n          setPlayersModalVisible(true);\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction alterEgoSleep() {\n  return _regeneratorRuntime.async(function alterEgoSleep$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          Speech.speak(speechToAlterEgoSleep);\n\n        case 1:\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 3:\n          if (!_context7.sent) {\n            _context7.next = 6;\n            break;\n          }\n\n          _context7.next = 1;\n          break;\n\n        case 6:\n          _context7.next = 8;\n          return _regeneratorRuntime.awrap(sleep(2 * 1000).then(function () {\n            return;\n          }));\n\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction blackened(gameContext, setPlayersModalVisible) {\n  var speechToBlackenedAwake;\n  return _regeneratorRuntime.async(function blackened$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 2:\n          if (!_context8.sent) {\n            _context8.next = 5;\n            break;\n          }\n\n          _context8.next = 0;\n          break;\n\n        case 5:\n          modalType = 'blackened';\n          abilityOrItem = 'Attack';\n          gameContext.playersInfo.forEach(function (playerInfo) {\n            playerInfo.colorScheme = 'white';\n          });\n          setPlayersModalVisible(true);\n          speechToBlackenedAwake = gameContext.dayNumber == 0 ? speechToBlackenedAwake1 : speechToBlackenedAwake2;\n          Speech.speak(speechToBlackenedAwake);\n\n        case 11:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction blackenedSleep() {\n  return _regeneratorRuntime.async(function blackenedSleep$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          Speech.speak(speechToBlackenedSleep);\n\n        case 1:\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 3:\n          if (!_context9.sent) {\n            _context9.next = 6;\n            break;\n          }\n\n          _context9.next = 1;\n          break;\n\n        case 6:\n          _context9.next = 8;\n          return _regeneratorRuntime.awrap(sleep(2 * 1000));\n\n        case 8:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction abilitiesAndItemsSpeech(gameContext, push, setPlayersModalVisible) {\n  var speech, i, role;\n  return _regeneratorRuntime.async(function abilitiesAndItemsSpeech$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          speech = '';\n\n          if (!(previousPlayerIndex === -1)) {\n            _context10.next = 10;\n            break;\n          }\n\n          Speech.speak('Everyone, go to sleep.');\n\n        case 3:\n          _context10.next = 5;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 5:\n          if (!_context10.sent) {\n            _context10.next = 8;\n            break;\n          }\n\n          _context10.next = 3;\n          break;\n\n        case 8:\n          _context10.next = 10;\n          return _regeneratorRuntime.awrap(sleep(2 * 1000));\n\n        case 10:\n          i = 0;\n\n        case 11:\n          if (!(i <= gameContext.playerCount)) {\n            _context10.next = 45;\n            break;\n          }\n\n          if (!(i === gameContext.playerCount && previousPlayerIndex === -1)) {\n            _context10.next = 21;\n            break;\n          }\n\n          setPlayersModalVisible(false);\n          gameContext.currentPlayerIndex = 0;\n          previousPlayerIndex = -1;\n          stage = 'monomi';\n          nightTimeLogic(gameContext, push, setPlayersModalVisible);\n          return _context10.abrupt(\"return\");\n\n        case 21:\n          if (!(i === gameContext.playerCount && previousPlayerIndex !== -1)) {\n            _context10.next = 39;\n            break;\n          }\n\n          speech = gameContext.playersInfo[previousPlayerIndex].name + ', go to sleep.';\n          gameContext.currentPlayerIndex = 0;\n          previousPlayerIndex = -1;\n          Speech.speak(speech);\n\n        case 26:\n          _context10.next = 28;\n          return _regeneratorRuntime.awrap(Speech.isSpeakingAsync());\n\n        case 28:\n          if (!_context10.sent) {\n            _context10.next = 31;\n            break;\n          }\n\n          _context10.next = 26;\n          break;\n\n        case 31:\n          _context10.next = 33;\n          return _regeneratorRuntime.awrap(sleep(2 * 1000));\n\n        case 33:\n          setPlayersModalVisible(false);\n          stage = 'monomi';\n          nightTimeLogic(gameContext, push, setPlayersModalVisible);\n          return _context10.abrupt(\"return\");\n\n        case 39:\n          if (!(gameContext.playersInfo[i].useAbility !== '' || gameContext.playersInfo[i].useItem !== '')) {\n            _context10.next = 42;\n            break;\n          }\n\n          gameContext.currentPlayerIndex = i;\n          return _context10.abrupt(\"break\", 45);\n\n        case 42:\n          i++;\n          _context10.next = 11;\n          break;\n\n        case 45:\n          gameContext.playersInfo.forEach(function (playerInfo) {\n            playerInfo.colorScheme = 'white';\n          });\n          gameContext.playersInfo[gameContext.currentPlayerIndex].colorScheme = 'grey';\n\n          if (previousPlayerIndex === -1) {\n            speech = gameContext.playersInfo[gameContext.currentPlayerIndex].name + ', wake up.';\n            Speech.speak(speech);\n          } else if (gameContext.currentPlayerIndex !== previousPlayerIndex) {\n            speech = gameContext.playersInfo[previousPlayerIndex].name + ', go to sleep. ' + gameContext.playersInfo[gameContext.currentPlayerIndex].name + ', wake up.';\n            Speech.speak(speech);\n          }\n\n          if (gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility === \"Yasuhiro Hagakure\") {\n            abilityOrItem = \"Yasuhiro Hagakure\";\n            gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility = '';\n            role = gameContext.playerCount < 7 ? 'the despair disease patient' : 'monomi';\n            speech = 'Click the player you would like to investigate whether they are ' + role + ' or not ' + role;\n          } else if (gameContext.playersInfo[gameContext.currentPlayerIndex].useItem === 'Glasses') {\n            abilityOrItem = 'Glasses';\n            gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = '';\n            speech = 'Click the player you would like to investigate whether they are on the side of hope or despair.';\n          } else if (gameContext.playersInfo[gameContext.currentPlayerIndex].useItem === \"Someone's Graduation Album\") {\n            abilityOrItem = \"Someone's Graduation Album\";\n            gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = '';\n            speech = 'Click the player you would like to investigate whether they are a traitor or not a traitor.';\n          } else if (gameContext.playersInfo[gameContext.currentPlayerIndex].useItem === 'Silent Receiver') {\n            abilityOrItem = 'Silent Receiver';\n            gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = '';\n            speech = 'Click the player you would like to investigate whether they are a spotless or not a spotless.';\n          }\n\n          previousPlayerIndex = gameContext.currentPlayerIndex;\n          modalType = 'revealRole';\n          stage = 'useItems';\n          Speech.speak(speech, {\n            onDone: function onDone() {\n              return setPlayersModalVisible(true);\n            }\n          });\n\n        case 53:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/src/screens/NightTime.tsx"],"names":["useIsFocused","useNavigation","React","useContext","useEffect","useState","GameContext","NavigationBar","PlayersModal","roleInPlay","speechSchoolAnnouncement1","speechSchoolAnnouncement2","speechToAlterEgoAwake","speechToAlterEgoSleep","speechToBlackenedAwake1","speechToBlackenedAwake2","speechToBlackenedSleep","speechToMonomiAwake","speechToMonomiSleep","speechToTraitorsAwake","speechToTraitorsSleep","Speech","NightTimeAbilitiesItemsModal","RevealRoleModal","stage","abilityOrItem","modalType","previousPlayerIndex","sleep","milliseconds","Promise","res","setTimeout","NightTimeScreen","gameContext","push","PlayersModalVisible","setPlayersModalVisible","isFocused","flex","alignItems","justifyContent","backgroundColor","dayNumber","flexDirection","width","height","nightTimeLogic","PlayersModalCustomized","subModalVisible","setSubModalVisible","disableContinueButton","setDisableContinueButton","continueButtonVisible","onPlayerTouch","playerIndex","subModal","playersInfo","forEach","playerInfo","colorScheme","monomiProtect","blackenedAttack","mode","schoolAnnouncement2","schoolAnnouncement1","abilitiesAndItemsSpeech","roleCounts","traitor","monomiExploded","monomi","alterEgoAlive","alterEgo","alterEgoSleep","blackened","blackenedSleep","speak","isSpeakingAsync","role","then","speechToBlackenedAwake","speech","i","playerCount","currentPlayerIndex","name","useAbility","useItem","onDone"],"mappings":"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","sourcesContent":["import { useIsFocused, useNavigation } from '@react-navigation/native'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { View, Text, TouchableHighlight } from 'react-native'\r\nimport { GameContext } from '../../App'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayersModal from '../components/modals/Players'\r\nimport { GameContextType } from '../types/types'\r\nimport { roleInPlay } from '../data/Table'\r\nimport { speechSchoolAnnouncement1, speechSchoolAnnouncement2, speechToAlterEgoAwake, speechToAlterEgoSleep, speechToBlackenedAwake1, speechToBlackenedAwake2, speechToBlackenedSleep, speechToMonomiAwake, speechToMonomiSleep, speechToTraitorsAwake, speechToTraitorsSleep } from \"../data/NightTimeDialogue\"\r\nimport * as Speech from 'expo-speech'\r\nimport NightTimeAbilitiesItemsModal from '../components/modals/NightTimeAbilitiesItem'\r\nimport RevealRoleModal from '../components/modals/RevealRole'\r\n\r\nlet stage = 'schoolAnnouncement'\r\nlet abilityOrItem = ''\r\nlet modalType = ''\r\nlet previousPlayerIndex = -1\r\nconst sleep = (milliseconds:number) => new Promise(res => setTimeout(res, milliseconds))\r\n\r\nexport default function NightTimeScreen() {\r\n  const gameContext = useContext(GameContext)\r\n  const { push } = useNavigation<any>()\r\n  const [PlayersModalVisible, setPlayersModalVisible] = useState(false)\r\n\r\n  // Check if screen is focused\r\n  const isFocused = useIsFocused()\r\n  // Listen for isFocused. If useFocused changes, force re-render by setting state\r\n  useEffect(() => { setPlayersModalVisible(false) }, [isFocused])\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'lightblue' }}>\r\n        <Text>Night Time of Day {gameContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>Some text</Text>\r\n        </View>\r\n        <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { nightTimeLogic(gameContext, push, setPlayersModalVisible) }}>\r\n            <Text>Button</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='ItemsScreen' nextPage='MorningTimeScreen'></NavigationBar>\r\n      </View>\r\n      {PlayersModalCustomized(modalType, PlayersModalVisible, setPlayersModalVisible)}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction PlayersModalCustomized(modalType:string, PlayersModalVisible:boolean, setPlayersModalVisible:React.Dispatch<any>) {\r\n  const gameContext = useContext(GameContext)\r\n  const { push } = useNavigation<any>()\r\n  const [subModalVisible, setSubModalVisible] = useState(false)\r\n  const [disableContinueButton, setDisableContinueButton] = useState(true)\r\n  let continueButtonVisible = false\r\n  let onPlayerTouch = (playerIndex:number) => {}\r\n  let subModal = <></>\r\n\r\n  if (modalType === 'nightTimeAbilitiesItems') {\r\n    continueButtonVisible = true\r\n    if (disableContinueButton === true) { setDisableContinueButton(false) }\r\n    onPlayerTouch = (playerIndex:number) => { setSubModalVisible(true) }\r\n    subModal = <NightTimeAbilitiesItemsModal visible={subModalVisible} setVisible={setSubModalVisible}/>\r\n  } else if (modalType === 'revealRole') {\r\n    continueButtonVisible = false\r\n    if (disableContinueButton === false) { setDisableContinueButton(true) }\r\n    onPlayerTouch = (playerIndex:number) => { setSubModalVisible(true) }\r\n    subModal = <RevealRoleModal visible={subModalVisible} setVisible={setSubModalVisible} abilityOrItem={abilityOrItem} callback={() => {\r\n      setPlayersModalVisible(false)\r\n      nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n    }}/>\r\n  } else if (modalType === 'monomi') {\r\n    continueButtonVisible = false\r\n    if (disableContinueButton === false) { setDisableContinueButton(true) }\r\n    onPlayerTouch = (playerIndex:number) => {\r\n      gameContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n      if (playerIndex !== gameContext.monomiProtect) {\r\n        gameContext.playersInfo[playerIndex].colorScheme = 'lightblue'\r\n        gameContext.monomiProtect = playerIndex\r\n      } else {\r\n        gameContext.monomiProtect = -1\r\n      }\r\n    }\r\n  } else if (modalType === 'blackened') {\r\n    // disableContinueButton must equal true before coming into here. Can't set it false here otherwise \r\n    // onPlayerTouch() setting it to false will get overwritten as it re-renders and reruns this method\r\n    continueButtonVisible = true\r\n    onPlayerTouch = (playerIndex:number) => {\r\n      gameContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n      gameContext.playersInfo[playerIndex].colorScheme = '#cc0066'\r\n      gameContext.blackenedAttack = playerIndex\r\n      setDisableContinueButton(false)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <PlayersModal visible={PlayersModalVisible} setVisible={setPlayersModalVisible} modal={subModal} continueVisible={continueButtonVisible}\r\n    disableContinue={disableContinueButton} onPlayerTouch={onPlayerTouch} onContinue={() => nightTimeLogic(gameContext, push, setPlayersModalVisible)}/>\r\n  )\r\n}\r\n\r\nasync function nightTimeLogic(gameContext:GameContextType, push:any, setPlayersModalVisible:React.Dispatch<any>) {\r\n  // Speech.stop()\r\n  // Speech.speak(stage)\r\n  // const { push } = useNavigation<any>()\r\n  switch (stage) {\r\n    case 'schoolAnnouncement':\r\n      if (gameContext.mode === 'extreme' && gameContext.dayNumber > 0) {\r\n        stage = 'useItems'\r\n        await schoolAnnouncement2(gameContext, setPlayersModalVisible)\r\n      } else {\r\n        await schoolAnnouncement1() // did not wait, showed traitor dialog while speaking\r\n        stage = 'traitor'\r\n        nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n      }\r\n      break\r\n    case 'useItems':\r\n      await abilitiesAndItemsSpeech(gameContext, push, setPlayersModalVisible)\r\n      break\r\n    case 'traitor': // app stops when it comes here\r\n      if (roleInPlay(gameContext.roleCounts, 'Traitor') && gameContext.dayNumber === 0) {\r\n        await traitor(gameContext, setPlayersModalVisible)\r\n      }\r\n      stage = 'monomi'\r\n      nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n      break\r\n    case 'monomi':\r\n      if (roleInPlay(gameContext.roleCounts, 'Monomi') && gameContext.dayNumber > 0 && !gameContext.monomiExploded) {\r\n        await monomi(gameContext, setPlayersModalVisible)\r\n      }\r\n      stage = 'alterEgo'\r\n      nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n      break\r\n    case 'alterEgo':\r\n      if (gameContext.dayNumber > 0 && gameContext.alterEgoAlive) {\r\n        stage = 'alterEgoSleep'\r\n        await alterEgo(gameContext, setPlayersModalVisible)\r\n      } else {\r\n        stage = 'blackened'\r\n        nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n      }\r\n      break\r\n    case 'alterEgoSleep':\r\n      await alterEgoSleep()\r\n      stage = 'blackened'\r\n      nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n      break\r\n    case 'blackened':\r\n      stage = 'blackenedSleep'\r\n      await blackened(gameContext, setPlayersModalVisible)\r\n      break\r\n    case 'blackenedSleep':\r\n      stage = 'schoolAnnouncement'\r\n      await blackenedSleep()\r\n      gameContext.dayNumber += 1\r\n      push('MorningTimeScreen')\r\n      break\r\n  }\r\n}\r\n\r\nasync function schoolAnnouncement1() {\r\n  Speech.speak(speechSchoolAnnouncement1)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(2 * 1000)\r\n}\r\n\r\nasync function schoolAnnouncement2(gameContext:GameContextType, setPlayersModalVisible:React.Dispatch<any>) {\r\n  gameContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n  modalType = 'nightTimeAbilitiesItems'\r\n  Speech.speak(speechSchoolAnnouncement2)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(2 * 1000)\r\n  setPlayersModalVisible(true)\r\n}\r\n\r\nasync function traitor(gameContext:GameContextType, setPlayersModalVisible:React.Dispatch<any>) {\r\n  gameContext.playersInfo.forEach(playerInfo => {\r\n    if (playerInfo.role === 'Blackened') { playerInfo.colorScheme = 'black' }\r\n    else if (playerInfo.role === 'Traitor') { playerInfo.colorScheme = 'grey' }\r\n    else { playerInfo.colorScheme = 'white' }\r\n  })\r\n  setPlayersModalVisible(true) \r\n  Speech.speak(speechToTraitorsAwake)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(5 * 1000)\r\n  setPlayersModalVisible(false)\r\n  Speech.speak(speechToTraitorsSleep)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(2 * 1000)\r\n}\r\n\r\nasync function monomi(gameContext:GameContextType, setPlayersModalVisible:React.Dispatch<any>) {\r\n  modalType = 'monomi'\r\n  abilityOrItem = 'Protect'\r\n  gameContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n  setPlayersModalVisible(true)\r\n  Speech.speak(speechToMonomiAwake)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(15 * 1000)\r\n  setPlayersModalVisible(false)\r\n  Speech.speak(speechToMonomiSleep)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(1 * 1000)\r\n}\r\n\r\nasync function alterEgo(gameContext:GameContextType, setPlayersModalVisible:React.Dispatch<any>) {\r\n  modalType = 'revealRole'\r\n  abilityOrItem = 'Alter Ego'\r\n  gameContext.playersInfo.forEach(playerInfo => {\r\n    if (playerInfo.role === 'Alter Ego') { playerInfo.colorScheme = 'grey' }\r\n    else { playerInfo.colorScheme = 'white' }\r\n  })\r\n  Speech.speak(speechToAlterEgoAwake)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(1 * 1000)\r\n  setPlayersModalVisible(true)\r\n}\r\n\r\nasync function alterEgoSleep() {\r\n  Speech.speak(speechToAlterEgoSleep)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(2 * 1000).then(() => { return })\r\n}\r\n\r\nasync function blackened(gameContext:GameContextType, setPlayersModalVisible:React.Dispatch<any>) {\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  modalType = 'blackened'\r\n  abilityOrItem = 'Attack'\r\n  gameContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n  setPlayersModalVisible(true)\r\n  const speechToBlackenedAwake = gameContext.dayNumber == 0 ? speechToBlackenedAwake1 : speechToBlackenedAwake2\r\n  Speech.speak(speechToBlackenedAwake)\r\n}\r\n\r\nasync function blackenedSleep() {\r\n  Speech.speak(speechToBlackenedSleep)\r\n  while (await Speech.isSpeakingAsync()) {}\r\n  await sleep(2 * 1000)\r\n}\r\n\r\nasync function abilitiesAndItemsSpeech(gameContext:GameContextType, push:any, setPlayersModalVisible:React.Dispatch<any>) {\r\n  let speech = ''\r\n  if (previousPlayerIndex === -1) { \r\n    Speech.speak('Everyone, go to sleep.')\r\n    while (await Speech.isSpeakingAsync()) {}\r\n    await sleep(2 * 1000)\r\n  }\r\n\r\n  for (let i = 0; i <= gameContext.playerCount; i++) {\r\n    // No one declared an investigative Ability or Item \r\n    if (i === gameContext.playerCount && previousPlayerIndex === -1) {\r\n      setPlayersModalVisible(false)\r\n      gameContext.currentPlayerIndex = 0\r\n      previousPlayerIndex = -1\r\n      stage= 'monomi'\r\n      nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n      return\r\n    }\r\n    // No more investigative Ability or Item\r\n    else if (i === gameContext.playerCount && previousPlayerIndex !== -1) {\r\n      speech = gameContext.playersInfo[previousPlayerIndex].name + ', go to sleep.'\r\n      gameContext.currentPlayerIndex = 0\r\n      previousPlayerIndex = -1\r\n      Speech.speak(speech)\r\n      while (await Speech.isSpeakingAsync()) {}\r\n      await sleep(2 * 1000)\r\n      setPlayersModalVisible(false)\r\n      stage= 'monomi'\r\n      nightTimeLogic(gameContext, push, setPlayersModalVisible)\r\n      return\r\n    // Someone declared an investigative Ability or Item  \r\n    } else if (gameContext.playersInfo[i].useAbility !== '' || gameContext.playersInfo[i].useItem !== '') {\r\n      gameContext.currentPlayerIndex = i\r\n      break\r\n    }\r\n  }\r\n  \r\n  gameContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n  gameContext.playersInfo[gameContext.currentPlayerIndex].colorScheme = 'grey'\r\n  \r\n  if (previousPlayerIndex === -1) { \r\n    speech = gameContext.playersInfo[gameContext.currentPlayerIndex].name + ', wake up.'\r\n    Speech.speak(speech)\r\n  } else if (gameContext.currentPlayerIndex !== previousPlayerIndex) {\r\n    speech = gameContext.playersInfo[previousPlayerIndex].name + ', go to sleep. ' \r\n    + gameContext.playersInfo[gameContext.currentPlayerIndex].name + ', wake up.'\r\n    Speech.speak(speech)\r\n  }\r\n\r\n  if (gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility === \"Yasuhiro Hagakure\") {\r\n    abilityOrItem = \"Yasuhiro Hagakure\"\r\n    gameContext.playersInfo[gameContext.currentPlayerIndex].useAbility = ''\r\n    const role = gameContext.playerCount < 7 ? 'the despair disease patient' : 'monomi'\r\n    speech =  'Click the player you would like to investigate whether they are ' + role + ' or not ' + role\r\n  } else if (gameContext.playersInfo[gameContext.currentPlayerIndex].useItem === 'Glasses') {\r\n    abilityOrItem = 'Glasses'\r\n    gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = ''\r\n    speech = 'Click the player you would like to investigate whether they are on the side of hope or despair.'\r\n  } else if (gameContext.playersInfo[gameContext.currentPlayerIndex].useItem === \"Someone's Graduation Album\") {\r\n    abilityOrItem = \"Someone's Graduation Album\"\r\n    gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = ''\r\n    speech = 'Click the player you would like to investigate whether they are a traitor or not a traitor.'\r\n  } else if (gameContext.playersInfo[gameContext.currentPlayerIndex].useItem === 'Silent Receiver') {\r\n    abilityOrItem = 'Silent Receiver'\r\n    gameContext.playersInfo[gameContext.currentPlayerIndex].useItem = ''\r\n    speech = 'Click the player you would like to investigate whether they are a spotless or not a spotless.'\r\n  }\r\n  previousPlayerIndex = gameContext.currentPlayerIndex\r\n  modalType='revealRole'\r\n  stage = 'useItems'\r\n  Speech.speak(speech, {onDone: () => setPlayersModalVisible(true)})\r\n}"]},"metadata":{},"sourceType":"module"}
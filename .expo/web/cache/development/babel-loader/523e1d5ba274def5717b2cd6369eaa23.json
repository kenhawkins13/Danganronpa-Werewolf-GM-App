{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\components\\\\PlayersScreen.tsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nimport ItemCardsModal from \"./ItemCardsModal\";\nimport PlayerInfoModal from \"./PlayerInfoModal\";\nexport default function PlayersScreen(_ref) {\n  var modal = _ref.modal;\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerIndex = _useState2[0],\n      setPlayerIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playerInfoModalVisible = _useState4[0],\n      setPlayerInfoModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      itemCardsModalVisible = _useState6[0],\n      setItemCardsModalVisible = _useState6[1];\n\n  var _useState7 = useState(appContext.playersInfo[playerIndex].role),\n      _useState8 = _slicedToArray(_useState7, 2),\n      playerRole = _useState8[0],\n      setPlayerRole = _useState8[1];\n\n  var setModalVisible = modal == 'playerInfoModal' ? setPlayerInfoModalVisible : undefined;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, PlayersBoxes(setPlayerIndex, setPlayerRole, setModalVisible)), React.createElement(PlayerInfoModal, {\n    playerIndex: playerIndex,\n    playerRole: playerRole,\n    setPlayerRole: setPlayerRole,\n    visible: playerInfoModalVisible,\n    setVisible: setPlayerInfoModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), React.createElement(ItemCardsModal, {\n    modalVisible: itemCardsModalVisible,\n    setModalVisible: setItemCardsModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction PlayersBoxes(setPlayerIndex, setPlayerRole, setModalVisible) {\n  var _this = this;\n\n  var appContext = useContext(AppContext);\n  var heightPercent = (1 / Math.ceil(appContext.playerCount / 2) * 100).toString() + '%';\n  return _toConsumableArray(Array(appContext.playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      key: 'player' + index,\n      style: frameStyle(heightPercent).frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableHighlight, {\n      key: 'player' + index + 1,\n      style: boxStyle(appContext.playersInfo[index].status).style,\n      onPress: function onPress() {\n        if (setModalVisible) {\n          setModalVisible(true);\n        }\n\n        setPlayerIndex(index);\n        setPlayerRole(appContext.playersInfo[index].role);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: textStyle(appContext.playersInfo[index].status).style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, appContext.playersInfo[index].name)));\n  });\n}\n\nfunction frameStyle(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n}\n\nfunction textStyle(status) {\n  var textColor = '';\n\n  switch (status) {\n    case 'despair':\n      textColor = 'white';\n      break;\n\n    case 'ready':\n    case 'notReady':\n    case 'hope':\n    default:\n      textColor = 'black';\n      break;\n  }\n\n  return StyleSheet.create({\n    style: {\n      color: textColor\n    }\n  });\n}\n\nfunction boxStyle(status) {\n  var backgroundColor = '';\n\n  switch (status) {\n    case 'ready':\n      backgroundColor = 'green';\n      break;\n\n    case 'despair':\n      backgroundColor = 'black';\n      break;\n\n    case 'notReady':\n    case 'hope':\n    default:\n      backgroundColor = 'white';\n      break;\n  }\n\n  return StyleSheet.create({\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: backgroundColor\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/components/PlayersScreen.tsx"],"names":["React","useContext","useState","AppContext","ItemCardsModal","PlayerInfoModal","PlayersScreen","modal","appContext","playerIndex","setPlayerIndex","playerInfoModalVisible","setPlayerInfoModalVisible","itemCardsModalVisible","setItemCardsModalVisible","playersInfo","role","playerRole","setPlayerRole","setModalVisible","undefined","height","width","flexDirection","flexWrap","PlayersBoxes","heightPercent","Math","ceil","playerCount","toString","Array","map","elementInArray","index","frameStyle","frame","boxStyle","status","style","textStyle","name","StyleSheet","create","borderColor","borderWidth","alignItems","justifyContent","textColor","color","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableHighlight } from 'react-native'\r\nimport { AppContext } from '../../App'\r\nimport ItemCardsModal from './ItemCardsModal';\r\nimport PlayerInfoModal from './PlayerInfoModal';\r\n\r\nexport default function PlayersScreen({modal}:Props) {\r\n  const appContext = useContext(AppContext);\r\n  const [playerIndex, setPlayerIndex] = useState(0)\r\n  const [playerInfoModalVisible, setPlayerInfoModalVisible] = useState(false)\r\n  const [itemCardsModalVisible, setItemCardsModalVisible] = useState(false)\r\n  const [playerRole, setPlayerRole] = useState(appContext.playersInfo[playerIndex].role)\r\n  const setModalVisible:React.Dispatch<any>|undefined = modal == 'playerInfoModal' ? setPlayerInfoModalVisible : undefined\r\n  return (\r\n    <View>\r\n      <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n        {PlayersBoxes(setPlayerIndex, setPlayerRole, setModalVisible)}\r\n      </View>\r\n      <PlayerInfoModal playerIndex={playerIndex} playerRole={playerRole} setPlayerRole={setPlayerRole} visible={playerInfoModalVisible} setVisible={setPlayerInfoModalVisible}/>\r\n      <ItemCardsModal modalVisible={itemCardsModalVisible} setModalVisible={setItemCardsModalVisible}></ItemCardsModal>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction PlayersBoxes(setPlayerIndex:React.Dispatch<any>, setPlayerRole:React.Dispatch<any>, setModalVisible?:React.Dispatch<any>|undefined) {\r\n  const appContext = useContext(AppContext);\r\n  const heightPercent = ((1 / Math.ceil(appContext.playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    [...Array(appContext.playerCount)].map((elementInArray, index) => (\r\n      <View key={'player' + index} style={frameStyle(heightPercent).frame}>\r\n        <TouchableHighlight key={'player' + index+1} style={boxStyle(appContext.playersInfo[index].status).style} onPress={() => {\r\n            if(setModalVisible) { setModalVisible(true) }\r\n            setPlayerIndex(index)\r\n            setPlayerRole(appContext.playersInfo[index].role)\r\n          }}>\r\n          <Text style={textStyle(appContext.playersInfo[index].status).style}>{appContext.playersInfo[index].name}</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\ntype Props = {modal?:string}\r\n\r\nfunction frameStyle(heightPercent: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    }\r\n  })\r\n}\r\n\r\nfunction textStyle(status: string) {\r\n  let textColor = ''\r\n  switch (status) {\r\n    case 'despair':\r\n      textColor = 'white'\r\n      break\r\n    case 'ready':\r\n    case 'notReady':\r\n    case 'hope':\r\n    default:\r\n      textColor = 'black'\r\n      break\r\n  }\r\n  return StyleSheet.create({\r\n    style: {\r\n      color: textColor\r\n    }\r\n  })\r\n}\r\n\r\nfunction boxStyle(status: string) {\r\n  let backgroundColor = ''\r\n  switch (status) {\r\n    case 'ready':\r\n      backgroundColor = 'green'\r\n      break\r\n    case 'despair':\r\n      backgroundColor = 'black'\r\n      break\r\n    case 'notReady':\r\n    case 'hope':\r\n    default:\r\n      backgroundColor = 'white'\r\n      break\r\n  }\r\n  return StyleSheet.create({\r\n    style: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: backgroundColor\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\NightTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayersScreen from \"../components/PlayersScreen\";\nimport { nightTimeButtonTexts, nightTimeLabelTexts, nightTimeSpeeches } from \"../data/NightTimeDialogue\";\nvar modalVisible = false;\nvar modalType = '';\nvar buttonVisible = false;\nexport default function NightTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n  appContext.dayNumber = 1;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  appContext.playersInfo.forEach(function (playerInfo) {\n    playerInfo.colorScheme = 'white';\n  });\n  sequence(step, setStep, appContext, navigation);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Night Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, nightTimeLabelTexts(appContext.dayNumber, step))), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      modalType = 'itemCards';\n      modalVisible = true;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Enter Abilities/Items\")), React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      setStep(step + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, nightTimeButtonTexts(appContext.dayNumber, step))))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"ItemsPage\",\n    nextPage: \"MorningTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), React.createElement(Modal, {\n    visible: modalVisible,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(PlayersScreen, {\n    modal: modalType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#0066ff'\n    },\n    onPress: function onPress() {\n      setStep(step + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"OK\")))));\n}\n\nfunction sequence(step, setStep, appContext, navigation) {\n  Speech.stop();\n\n  var callback = function callback() {};\n\n  if (appContext.dayNumber === 0) {\n    switch (step) {\n      case 1:\n        callback = function callback() {\n          setTimeout(function () {\n            setStep(step + 1);\n          }, 2 * 1000);\n        };\n\n        break;\n\n      case 2:\n        appContext.playersInfo.forEach(function (playerInfo) {\n          if (playerInfo.role === 'Blackened') {\n            playerInfo.colorScheme = 'black';\n          } else if (playerInfo.role === 'Traitor') {\n            playerInfo.colorScheme = 'grey';\n          }\n        });\n        modalVisible = true;\n\n        callback = function callback() {\n          setTimeout(function () {\n            setStep(step + 1);\n          }, 5 * 1000);\n        };\n\n        break;\n\n      case 3:\n        modalVisible = false;\n\n        callback = function callback() {\n          setTimeout(function () {\n            setStep(step + 1);\n          }, 2 * 1000);\n        };\n\n        break;\n\n      case 5:\n        callback = function callback() {\n          setTimeout(function () {\n            navigation.push('MorningTimePage');\n          }, 2 * 1000);\n        };\n\n        break;\n    }\n  } else if (appContext.dayNumber === 1) {\n    switch (step) {\n      case 0:\n        buttonVisible = true;\n        break;\n\n      case 1:\n        callback = function callback() {\n          setTimeout(function () {\n            setStep(step + 1);\n          }, 2 * 1000);\n        };\n\n        break;\n\n      case 2:\n        modalType = 'itemCards';\n        modalVisible = true;\n        break;\n\n      case 3:\n        modalVisible = false;\n        break;\n\n      case 4:\n        modalVisible = true;\n        break;\n\n      case 5:\n        modalVisible = false;\n        break;\n\n      case 6:\n        navigation.push('MorningTimePage');\n    }\n  }\n\n  Speech.speak(nightTimeSpeeches(appContext.dayNumber, step), {\n    onDone: callback\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/NightTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","PlayersScreen","nightTimeButtonTexts","nightTimeLabelTexts","nightTimeSpeeches","modalVisible","modalType","buttonVisible","NightTimePage","navigation","appContext","dayNumber","step","setStep","playersInfo","forEach","playerInfo","colorScheme","sequence","flex","alignItems","justifyContent","backgroundColor","width","height","stop","callback","setTimeout","role","push","speak","onDone"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight, Modal } from 'react-native'\r\nimport { AppContext } from '../../App'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayersScreen from '../components/PlayersScreen'\r\nimport { nightTimeButtonTexts, nightTimeLabelTexts, nightTimeSpeeches } from '../data/NightTimeDialogue'\r\nimport { AppContextType } from '../types/types'\r\n\r\nlet modalVisible:boolean = false\r\nlet modalType:string = ''\r\nlet buttonVisible:boolean = false\r\n\r\nexport default function NightTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  appContext.dayNumber = 1\r\n  const [step, setStep] = useState(0)\r\n  appContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n  sequence(step, setStep, appContext, navigation)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'lightblue' }}>\r\n        <Text>Night Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{nightTimeLabelTexts(appContext.dayNumber, step)}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { \r\n              modalType = 'itemCards'\r\n              modalVisible=true\r\n            }}>\r\n            <Text>Enter Abilities/Items</Text>\r\n          </TouchableHighlight>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { setStep(step + 1) }}>\r\n            <Text>{nightTimeButtonTexts(appContext.dayNumber, step)}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='ItemsPage' nextPage='MorningTimePage'></NavigationBar>\r\n      </View>\r\n      <Modal visible={modalVisible} style={{ flex: 1 }}>\r\n        <View style={{ flex: 9 }}>\r\n          <PlayersScreen modal={modalType}></PlayersScreen>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <TouchableHighlight style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#0066ff' }} \r\n            onPress={() => { setStep(step + 1) }}>\r\n            <Text>OK</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sequence(step:number, setStep: React.Dispatch<any>, appContext:AppContextType, navigation:any) {\r\n  Speech.stop()\r\n  let callback = () => {}\r\n  if (appContext.dayNumber === 0) {\r\n    switch (step) {\r\n      case 1:\r\n        callback = () => { setTimeout(() => { setStep(step + 1) }, 2 * 1000) }\r\n        break\r\n      case 2:\r\n        appContext.playersInfo.forEach(playerInfo => {\r\n          if (playerInfo.role === 'Blackened') { playerInfo.colorScheme = 'black' }\r\n          else if (playerInfo.role === 'Traitor') { playerInfo.colorScheme = 'grey' }\r\n        })\r\n        modalVisible = true\r\n        callback = () => { setTimeout(() => { setStep(step + 1) }, 5 * 1000) }\r\n        break\r\n      case 3:\r\n        modalVisible = false\r\n        callback = () => { setTimeout(() => { setStep(step + 1) }, 2 * 1000) }\r\n        break\r\n      case 5:\r\n        callback = () => { setTimeout(() => { navigation.push('MorningTimePage') }, 2 * 1000) }\r\n        break\r\n    }\r\n  } else if (appContext.dayNumber === 1) {\r\n    switch (step) {\r\n      case 0:\r\n        buttonVisible = true\r\n        break\r\n      case 1:\r\n        callback = () => { setTimeout(() => { setStep(step + 1) }, 2 * 1000) }\r\n        break\r\n      case 2:\r\n        modalType = 'itemCards'\r\n        modalVisible = true\r\n        break\r\n      case 3:\r\n        modalVisible = false\r\n        break\r\n      case 4:\r\n        modalVisible = true\r\n        break\r\n      case 5:\r\n        modalVisible = false\r\n        break\r\n      case 6:\r\n        navigation.push('MorningTimePage')\r\n    }\r\n  }\r\n  // Say the speech, wait for waitTime, then re-render screen by setting the state \"step\"\r\n  Speech.speak(nightTimeSpeeches(appContext.dayNumber, step), {onDone: callback})\r\n}\r\n\r\n// async function setStepAsync(step:number, setStep:React.Dispatch<any>): Promise<void> {\r\n//   return new Promise(() => { setTimeout(() => { setStep(step + 1) }, (5 * 1000))})\r\n// }\r\n// async function setStepAsync2(): Promise<void> {\r\n//   return new Promise(() => { setTimeout(() => { }, (2 * 1000))})\r\n// }\r\n// async function waitForSpeech() {\r\n//   if ( await Speech.isSpeakingAsync() === true ) {\r\n//     setTimeout( waitForSpeech(), 1000 )\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}
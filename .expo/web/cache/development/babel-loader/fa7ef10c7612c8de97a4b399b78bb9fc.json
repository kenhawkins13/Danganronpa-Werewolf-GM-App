{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\DayTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nexport default function DayTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'yellow'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Morning Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, labelTexts[step])), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      doThings(step, setStep, navigation);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, buttonTexts[step])))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"MorningTimePage\",\n    nextPage: \"NightTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction doThings(step, setStep, navigation) {\n  return _regeneratorRuntime.async(function doThings$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Speech.stop());\n\n        case 2:\n          setStep(step + 1);\n\n          if (step === 2) {\n            navigation.push('NightTimePage');\n          }\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar labelText1 = '\"Mm, ahem, this is a school announcement. It is now the day time. Please make your way to the briefing room.\"';\nvar labelText2 = 'Would anybody like to use a day time ability or item?';\nvar labelText3 = 'Please discuss anything you would like now';\nvar labelTexts = [labelText1, labelText2, labelText3];\nvar buttonText1 = 'Everybody is ready';\nvar buttonText2 = 'Start Briefing Time';\nvar buttonText3 = 'Move on to Night Time';\nvar buttonTexts = [buttonText1, buttonText2, buttonText3];","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/DayTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","DayTimePage","navigation","appContext","step","setStep","flex","alignItems","justifyContent","backgroundColor","dayNumber","labelTexts","width","height","doThings","buttonTexts","stop","push","labelText1","labelText2","labelText3","buttonText1","buttonText2","buttonText3"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight, Modal, Button } from 'react-native'\r\nimport { AppContext } from '../../App';\r\nimport NavigationBar from '../components/NavigationBar'\r\n\r\nexport default function DayTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  const [step, setStep] = useState(0)\r\n  // Speech.speak(labelTexts[step])\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'yellow' }}>\r\n        <Text>Morning Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{labelTexts[step]}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { doThings(step, setStep, navigation) }}>\r\n            <Text>{buttonTexts[step]}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='MorningTimePage' nextPage='NightTimePage'></NavigationBar>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\nasync function doThings(step:number, setStep:React.Dispatch<any>, navigation:any) {\r\n  await Speech.stop()\r\n  setStep(step + 1)\r\n  if (step === 2) {\r\n    navigation.push('NightTimePage')\r\n  }\r\n}\r\n\r\nconst labelText1 = '\"Mm, ahem, this is a school announcement. It is now the day time. Please make your way to the briefing room.\"'\r\nconst labelText2 = 'Would anybody like to use a day time ability or item?'\r\nconst labelText3 = 'Please discuss anything you would like now'\r\nconst labelTexts = [labelText1, labelText2, labelText3]\r\n\r\nconst buttonText1 = 'Everybody is ready'\r\nconst buttonText2 = 'Start Briefing Time'\r\nconst buttonText3 = 'Move on to Night Time'\r\nconst buttonTexts = [buttonText1, buttonText2, buttonText3]"]},"metadata":{},"sourceType":"module"}
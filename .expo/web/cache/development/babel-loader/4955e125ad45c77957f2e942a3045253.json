{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\modals\\\\Alert.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { modalStyles } from \"../styles/styles\";\nexport default function AlertModal(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: modalStyles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: modalStyles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Oops, the roles didn't add up. Have everyone re-enter their roles\"), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }\n  }, \"OK\"))))));\n}\n;","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/modals/Alert.tsx"],"names":["React","modalStyles","AlertModal","modalVisible","setModalVisible","centeredView","modalView","modalText","button","backgroundColor","textStyle"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,WAAT;AAEA,eAAe,SAASC,UAAT,OAA2D;AAAA,MAAtCC,YAAsC,QAAtCA,YAAsC;AAAA,MAAxBC,eAAwB,QAAxBA,eAAwB;AACxE,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAC,OAArB;AAA6B,IAAA,WAAW,EAAE,IAA1C;AAAgD,IAAA,OAAO,EAAED,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,WAAW,CAACI,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,WAAW,CAACK,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,WAAW,CAACM,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADF,EAEE,oBAAC,kBAAD;AACE,IAAA,KAAK,kCAAON,WAAW,CAACO,MAAnB;AAA2BC,MAAAA,eAAe,EAAE;AAA5C,MADP;AAEE,IAAA,OAAO,EAAE,mBAAM;AAAEL,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AAAgC,KAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,WAAW,CAACS,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CAFF,CADF,CADF,CADF,CADF;AAgBD;AAAA","sourcesContent":["import React from \"react\";\r\nimport { Modal, View, Text, TouchableHighlight } from \"react-native\";\r\nimport { modalStyles } from \"../styles/styles\";\r\n\r\nexport default function AlertModal({modalVisible, setModalVisible}:Props) {\r\n  return (\r\n    <View>\r\n      <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\r\n        <View style={modalStyles.centeredView}>\r\n          <View style={modalStyles.modalView}>\r\n            <Text style={modalStyles.modalText}>Oops, the roles didn't add up. Have everyone re-enter their roles</Text>\r\n            <TouchableHighlight\r\n              style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }}\r\n              onPress={() => { setModalVisible(!modalVisible) }}>\r\n              <Text style={modalStyles.textStyle}>OK</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\ntype Props = {modalVisible:boolean, setModalVisible:React.Dispatch<any>}\r\n"]},"metadata":{},"sourceType":"module"}
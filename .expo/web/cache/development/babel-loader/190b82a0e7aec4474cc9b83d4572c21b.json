{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\components\\\\PlayersComponent.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PlayerInfoModal from \"./PlayerInfoModal\";\nexport default function PlayersComponent(_ref) {\n  var playerCount = _ref.playerCount,\n      modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      player = _useState2[0],\n      setPlayer = _useState2[1];\n\n  var heightPercent = (1 / Math.ceil(playerCount / 2) * 100).toString() + '%';\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, PlayerBoxes(playerCount, heightPercent, modalVisible, setModalVisible)), React.createElement(PlayerInfoModal, {\n    player: 1,\n    visible: modalVisible,\n    setVisible: setModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction PlayerBoxes(playerCount, heightPercent, modalVisible, setModalVisible) {\n  var _this = this;\n\n  return _toConsumableArray(Array(playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      key: 'player' + index,\n      style: styles(heightPercent).frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles().button,\n      onPress: function onPress() {\n        setModalVisible(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Player \", index + 1)));\n  });\n}\n\nfunction setModalVisibility(bool, setModalVisible, player, setPlayer) {\n  setModalVisible(bool);\n  setPlayer(player);\n}\n\nfunction styles(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'grey'\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/components/PlayersComponent.tsx"],"names":["React","useState","PlayerInfoModal","PlayersComponent","playerCount","modalVisible","setModalVisible","player","setPlayer","heightPercent","Math","ceil","toString","height","width","flexDirection","flexWrap","PlayerBoxes","Array","map","elementInArray","index","styles","frame","button","setModalVisibility","bool","StyleSheet","create","borderColor","borderWidth","alignItems","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport PlayerInfoModal from './PlayerInfoModal'\r\n\r\nexport default function PlayersComponent({ playerCount, modalVisible, setModalVisible}:Props) {\r\n  const [player, setPlayer] = useState(0)\r\n  const heightPercent = ((1 / Math.ceil(playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    <View>\r\n      <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n        {PlayerBoxes(playerCount, heightPercent, modalVisible, setModalVisible)}\r\n      </View>\r\n      <PlayerInfoModal player={1} visible={modalVisible} setVisible={setModalVisible}></PlayerInfoModal>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction PlayerBoxes(playerCount:number, heightPercent:string, modalVisible: boolean, setModalVisible: React.Dispatch<React.SetStateAction<boolean>>) {\r\n  return (\r\n    [...Array(playerCount)].map((elementInArray, index) => (\r\n      <View key={'player' + index} style={styles(heightPercent).frame}>\r\n        <TouchableOpacity style={styles().button} onPress={() => { setModalVisible(true) }}>\r\n          <Text>Player {index + 1}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\nfunction setModalVisibility(bool: boolean, setModalVisible: React.Dispatch<React.SetStateAction<boolean>>, player:number, setPlayer: React.Dispatch<React.SetStateAction<number>>) {\r\n  setModalVisible(bool)\r\n  setPlayer(player)\r\n}\r\n\r\ntype Props = {playerCount: number, modalVisible: boolean, setModalVisible: React.Dispatch<React.SetStateAction<boolean>>}\r\n\r\nfunction styles(heightPercent?: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'grey'\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
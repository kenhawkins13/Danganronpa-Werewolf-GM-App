{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\components\\\\PlayerInfoModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Picker } from '@react-native-picker/picker';\nimport { Context } from \"../App\";\nimport { calculateRoles } from \"../data/Table\";\nimport { TextInput } from \"react-native-gesture-handler\";\nexport default function PlayerInfoModal(_ref) {\n  var _this = this;\n\n  var player = _ref.player,\n      visible = _ref.visible,\n      setVisible = _ref.setVisible;\n  return React.createElement(Context.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, function (context) {\n    return React.createElement(View, {\n      style: styles.centeredView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: visible,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.centeredView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }, \"Name\"), React.createElement(TextInput, {\n      placeholder: 'Player ' + player.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.modalText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, \"Select Your Role\"), React.createElement(Picker, {\n      style: {\n        width: 200\n      },\n      selectedValue: 'role',\n      onValueChange: function onValueChange(value) {\n        context.players.push(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, getPickerItems(context.mode, context.playerCount)), React.createElement(TouchableHighlight, {\n      style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n        backgroundColor: '#2196F3'\n      }),\n      onPress: function onPress() {\n        setVisible(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.textStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"Ok\"))))));\n  });\n}\n\nfunction updatePlayerInfo(array, playerNumber, role) {\n  var playerInfo = array.find(function (value) {\n    value.player = playerNumber;\n  });\n\n  if (playerInfo) {\n    playerInfo.role = role;\n  }\n}\n\nfunction getPickerItems(mode, playerCount) {\n  var _this2 = this;\n\n  var roles = calculateRoles(mode, playerCount);\n  var pickerItems = [];\n  roles.forEach(function (role) {\n    if (role.count != 0) {\n      pickerItems.push(React.createElement(Picker.Item, {\n        key: role.role[0],\n        label: role.role[0],\n        value: role.role[0],\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }\n      }));\n    }\n  });\n  return pickerItems;\n}\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: '#F194FF',\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/components/PlayerInfoModal.tsx"],"names":["React","Picker","Context","calculateRoles","TextInput","PlayerInfoModal","player","visible","setVisible","context","styles","centeredView","modalView","modalText","toString","width","value","players","push","getPickerItems","mode","playerCount","openButton","backgroundColor","textStyle","updatePlayerInfo","array","playerNumber","role","playerInfo","find","roles","pickerItems","forEach","count","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { Modal, TouchableHighlight, View, Text,StyleSheet } from \"react-native\"\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { Context } from \"../App\"\r\nimport { calculateRoles } from \"../data/Table\"\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\n\r\nexport default function PlayerInfoModal({player, visible, setVisible}:Props) {\r\n  return (\r\n    <Context.Consumer>{(context) => (\r\n      <View style={styles.centeredView}>\r\n        <Modal animationType='slide' transparent={true} visible={visible}>\r\n          <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n              <Text style={styles.modalText}>Name</Text>\r\n              <TextInput placeholder={'Player ' + player.toString()}/>\r\n              <Text style={styles.modalText}>Select Your Role</Text>\r\n              <Picker style={{width: 200}} selectedValue={'role'}\r\n                onValueChange={(value) => {context.players.push(value)}}>\r\n                {getPickerItems(context.mode, context.playerCount)}\r\n              </Picker>\r\n              <TouchableHighlight\r\n                style={{ ...styles.openButton, backgroundColor: '#2196F3' }}\r\n                onPress={() => { setVisible(false) }}>\r\n                <Text style={styles.textStyle}>Ok</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    )}</Context.Consumer>\r\n  )\r\n}\r\n\r\nfunction updatePlayerInfo(array:PlayerInfo[], playerNumber:number, role:string) {\r\n  const playerInfo = array.find((value) => {value.player = playerNumber})\r\n  if (playerInfo) {\r\n    playerInfo.role = role\r\n  }\r\n}\r\n\r\nfunction getPickerItems(mode:string, playerCount:number) {\r\n  const roles = calculateRoles(mode, playerCount)\r\n  const pickerItems:JSX.Element[] = []\r\n  roles.forEach(role  => {\r\n    if (role.count != 0) {\r\n      pickerItems.push(<Picker.Item key={role.role[0]} label={role.role[0]} value={role.role[0]}/>)\r\n    }\r\n  });\r\n  return pickerItems\r\n}\r\n\r\ntype Props = {player: number, visible: boolean, setVisible: React.Dispatch<React.SetStateAction<boolean>>}\r\ntype PlayerInfo = {player:number, role:string, name:string}\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 22\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5\r\n  },\r\n  openButton: {\r\n    backgroundColor: '#F194FF',\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center'\r\n  },\r\n    modalText: {\r\n    marginBottom: 15,\r\n    textAlign: 'center'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}
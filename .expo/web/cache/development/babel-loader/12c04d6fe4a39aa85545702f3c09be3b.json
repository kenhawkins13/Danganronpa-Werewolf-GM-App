{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\DayTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nimport CountdownTimer from \"../components/CountdownTimer\";\nimport NavigationBar from \"../components/NavigationBar\";\nexport default function DayTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timerVisible = _useState4[0],\n      setTimerVisible = _useState4[1];\n\n  if (step === 0) {\n    Speech.speak(speeches[0], {\n      onDone: function onDone() {\n        setTimeout(function () {\n          sequence(step, setStep, navigation, setTimerVisible);\n        }, 2 * 1000);\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'yellow'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"Day Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, labelTexts[step])), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, ShowTimer(timerVisible, setTimerVisible), React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      sequence(step, setStep, navigation, setTimerVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, buttonTexts[step])))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"MorningTimePage\",\n    nextPage: \"NightTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction sequence(step, setStep, navigation, setTimerVisible) {\n  Speech.stop();\n  step += 1;\n  Speech.speak(speeches[step]);\n\n  switch (step) {\n    case 3:\n      setTimerVisible(true);\n      break;\n\n    case 4:\n      navigation.push('NightTimePage');\n      break;\n  }\n\n  setStep(step);\n}\n\nfunction ShowTimer(timerVisible, setTimerVisible) {\n  if (timerVisible === true) {\n    return React.createElement(View, {\n      style: {\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, React.createElement(CountdownTimer, {\n      play: true,\n      callback: function callback() {\n        setTimerVisible(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(React.Fragment, null);\n  }\n}\n\nvar labelText1 = '';\nvar labelText2 = 'Item or Ability?';\nvar labelText3 = 'Briefing Time';\nvar labelText4 = '';\nvar labelTexts = [labelText1, labelText2, labelText3, labelText4];\nvar speech1 = '\"Mm, ahem, this is a school announcement. It is now the day time. Please make your way to the briefing room.\"';\nvar speech2 = 'Would anybody like to use a day time ability or item? Please declare so now. After everyone who wanted to has declared \\\r\ntheir ability or item, click the button below.';\nvar speech3 = 'Discuss anything you would like, starting now';\nvar speech4 = '';\nvar speeches = [speech1, speech2, speech3, speech4];\nvar buttonText1 = '';\nvar buttonText2 = 'Continue';\nvar buttonText3 = '';\nvar buttonText4 = 'Move on to Night Time';\nvar buttonTexts = [buttonText1, buttonText2, buttonText3, buttonText4];","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/DayTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","CountdownTimer","NavigationBar","DayTimePage","navigation","appContext","step","setStep","timerVisible","setTimerVisible","speak","speeches","onDone","setTimeout","sequence","flex","alignItems","justifyContent","backgroundColor","dayNumber","labelTexts","ShowTimer","width","height","buttonTexts","stop","push","labelText1","labelText2","labelText3","labelText4","speech1","speech2","speech3","speech4","buttonText1","buttonText2","buttonText3","buttonText4"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight, Modal, Button } from 'react-native'\r\nimport { AppContext } from '../../App';\r\nimport CountdownTimer from '../components/CountdownTimer';\r\nimport NavigationBar from '../components/NavigationBar'\r\n\r\nexport default function DayTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  const [step, setStep] = useState(0)\r\n  const [timerVisible, setTimerVisible] = useState(false)\r\n  if (step === 0) {\r\n    Speech.speak(speeches[0], {onDone: () => {\r\n      setTimeout(() => {sequence(step, setStep, navigation, setTimerVisible)}, 2 * 1000)\r\n    }})\r\n  }\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'yellow' }}>\r\n        <Text>Day Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{labelTexts[step]}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: 'white', alignItems: 'center' }}>\r\n          {ShowTimer(timerVisible, setTimerVisible)}\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { sequence(step, setStep, navigation, setTimerVisible)}}>\r\n            <Text>{buttonTexts[step]}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='MorningTimePage' nextPage='NightTimePage'></NavigationBar>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sequence(step:number, setStep:React.Dispatch<any>, navigation:any, setTimerVisible:React.Dispatch<any>) {\r\n  Speech.stop()\r\n  step += 1\r\n  Speech.speak(speeches[step])\r\n  switch (step) {\r\n    case 3:\r\n      setTimerVisible(true)\r\n      break\r\n    case 4:\r\n      navigation.push('NightTimePage')\r\n      break\r\n  }\r\n  setStep(step)\r\n}\r\n\r\nfunction ShowTimer(timerVisible:boolean, setTimerVisible:React.Dispatch<any>) {\r\n  if (timerVisible === true) {\r\n    return (\r\n      <View style={{height: '100%', alignItems: 'center', justifyContent: 'center'}}>\r\n        <CountdownTimer play={true} callback={() => {setTimerVisible(false)}}></CountdownTimer>\r\n      </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n}\r\n\r\nconst labelText1 = ''\r\nconst labelText2 = 'Item or Ability?'\r\nconst labelText3 = 'Briefing Time'\r\nconst labelText4 = ''\r\nconst labelTexts = [labelText1, labelText2, labelText3, labelText4]\r\n\r\nconst speech1 = '\"Mm, ahem, this is a school announcement. It is now the day time. Please make your way to the briefing room.\"'\r\nconst speech2 = 'Would anybody like to use a day time ability or item? Please declare so now. After everyone who wanted to has declared \\\r\ntheir ability or item, click the button below.'\r\nconst speech3 = 'Discuss anything you would like, starting now'\r\nconst speech4 = ''\r\nconst speeches = [speech1, speech2, speech3, speech4]\r\n\r\nconst buttonText1 = ''\r\nconst buttonText2 = 'Continue' \r\nconst buttonText3 = ''\r\nconst buttonText4 = 'Move on to Night Time'\r\nconst buttonTexts = [buttonText1, buttonText2, buttonText3, buttonText4]"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\components\\\\PlayersComponent.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nexport default function PlayersComponent(_ref) {\n  var playerCount = _ref.playerCount;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var heightPercent = (1 / Math.ceil(playerCount / 2) * 100).toString() + '%';\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, playerBoxes(playerCount, heightPercent)), React.createElement(View, {\n    style: styles().centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Hello World!\"), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Hide Modal\"))))), React.createElement(TouchableHighlight, {\n    style: styles.openButton,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Show Modal\"))));\n}\n\nfunction playerBoxes(playerCount, heightPercent) {\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"[...Array(playerCount)].map((elementInArray, index) => (\", React.createElement(View, {\n    style: styles(heightPercent).frame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles().button,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Player \", index + 1))), \"))\");\n}\n\nfunction buttonText(index) {\n  return \"Player \" + (index + 1).toString();\n}\n\nvar players = [];\n\nfunction createPlayer(index) {\n  var player = \"Player \" + index.toString();\n  players.push({\n    player: player,\n    role: \"Alter Ego\"\n  });\n}\n\nfunction styles(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'grey'\n    },\n    centeredView: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: 22\n    },\n    modalView: {\n      margin: 20,\n      backgroundColor: \"white\",\n      borderRadius: 20,\n      padding: 35,\n      alignItems: \"center\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 3.84,\n      elevation: 5\n    },\n    openButton: {\n      backgroundColor: \"#F194FF\",\n      borderRadius: 20,\n      padding: 10,\n      elevation: 2\n    },\n    textStyle: {\n      color: \"white\",\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    modalText: {\n      marginBottom: 15,\n      textAlign: \"center\"\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/components/PlayersComponent.tsx"],"names":["React","useState","PlayersComponent","playerCount","modalVisible","setModalVisible","heightPercent","Math","ceil","toString","height","width","flexDirection","flexWrap","playerBoxes","styles","centeredView","alert","modalView","modalText","openButton","backgroundColor","textStyle","frame","button","index","buttonText","players","createPlayer","player","push","role","StyleSheet","create","borderColor","borderWidth","alignItems","justifyContent","flex","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAGA,eAAe,SAASC,gBAAT,OAA+C;AAAA,MAApBC,WAAoB,QAApBA,WAAoB;;AAAA,kBACpBF,QAAQ,CAAC,KAAD,CADY;AAAA;AAAA,MACrDG,YADqD;AAAA,MACvCC,eADuC;;AAE5D,MAAMC,aAAa,GAAG,CAAE,IAAIC,IAAI,CAACC,IAAL,CAAUL,WAAW,GAAG,CAAxB,CAAL,GAAmC,GAApC,EAAyCM,QAAzC,KAAsD,GAA5E;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,MAAxB;AAAgCC,MAAAA,aAAa,EAAE,QAA/C;AAAyDC,MAAAA,QAAQ,EAAE;AAAnE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WAAW,CAACX,WAAD,EAAcG,aAAd,CADd,CADA,EAIA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,GAAGC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAEZ,YAHX;AAIE,IAAA,cAAc,EAAE,0BAAM;AAACa,MAAAA,KAAK,CAACA,KAAN,CAAY,wBAAZ;AAAuC,KAJhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGE,oBAAC,kBAAD;AACE,IAAA,KAAK,kCAAOJ,MAAM,CAACK,UAAd;AAA0BC,MAAAA,eAAe,EAAE;AAA3C,MADP;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbhB,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CAHF,CADF,CANF,CADA,EAuBA,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACK,UADhB;AAEE,IAAA,OAAO,EAAE,mBAAM;AAACf,MAAAA,eAAe,CAAC,IAAD,CAAf;AAAuB,KAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAvBA,CAJA,CADF;AAqCD;;AAED,SAASR,WAAT,CAAqBX,WAArB,EAAyCG,aAAzC,EAA+D;AAC7D,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACT,aAAD,CAAN,CAAsBiB,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAER,MAAM,GAAGS,MAAlC;AAA0C,IAAA,OAAO,EAAE,mBAAM;AAACnB,MAAAA,eAAe,CAAC,IAAD,CAAf;AAAuB,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcoB,KAAK,GAAG,CAAtB,CADF,CADF,CAFF,OADF;AAWD;;AAED,SAASC,UAAT,CAAoBD,KAApB,EAAkC;AAChC,SAAO,YAAY,CAACA,KAAK,GAAG,CAAT,EAAYhB,QAAZ,EAAnB;AACD;;AAGD,IAAIkB,OAAO,GAAG,EAAd;;AAEA,SAASC,YAAT,CAAsBH,KAAtB,EAAoC;AAClC,MAAMI,MAAM,GAAG,YAAYJ,KAAK,CAAChB,QAAN,EAA3B;AACAkB,EAAAA,OAAO,CAACG,IAAR,CAAa;AAACD,IAAAA,MAAM,EAACA,MAAR;AAAgBE,IAAAA,IAAI,EAAC;AAArB,GAAb;AACD;;AAED,SAAShB,MAAT,CAAgBT,aAAhB,EAAwC;AACtC,SAAO0B,UAAU,CAACC,MAAX,CAAkB;AACvBV,IAAAA,KAAK,EAAE;AACLZ,MAAAA,KAAK,EAAE,KADF;AAELD,MAAAA,MAAM,EAAEJ,aAFH;AAGL4B,MAAAA,WAAW,EAAE,OAHR;AAILC,MAAAA,WAAW,EAAE,CAJR;AAKLC,MAAAA,UAAU,EAAE,QALP;AAMLC,MAAAA,cAAc,EAAE;AANX,KADgB;AASvBb,IAAAA,MAAM,EAAE;AACNb,MAAAA,KAAK,EAAE,MADD;AAEND,MAAAA,MAAM,EAAE,MAFF;AAGN0B,MAAAA,UAAU,EAAE,QAHN;AAINC,MAAAA,cAAc,EAAE,QAJV;AAKNhB,MAAAA,eAAe,EAAE;AALX,KATe;AAiBvBL,IAAAA,YAAY,EAAE;AACZsB,MAAAA,IAAI,EAAE,CADM;AAEZD,MAAAA,cAAc,EAAE,QAFJ;AAGZD,MAAAA,UAAU,EAAE,QAHA;AAIZG,MAAAA,SAAS,EAAE;AAJC,KAjBS;AAuBvBrB,IAAAA,SAAS,EAAE;AACTsB,MAAAA,MAAM,EAAE,EADC;AAETnB,MAAAA,eAAe,EAAE,OAFR;AAGToB,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTN,MAAAA,UAAU,EAAE,QALH;AAMTO,MAAAA,WAAW,EAAE,MANJ;AAOTC,MAAAA,YAAY,EAAE;AACZjC,QAAAA,KAAK,EAAE,CADK;AAEZD,QAAAA,MAAM,EAAE;AAFI,OAPL;AAWTmC,MAAAA,aAAa,EAAE,IAXN;AAYTC,MAAAA,YAAY,EAAE,IAZL;AAaTC,MAAAA,SAAS,EAAE;AAbF,KAvBY;AAsCvB3B,IAAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EAAE,SADP;AAEVoB,MAAAA,YAAY,EAAE,EAFJ;AAGVC,MAAAA,OAAO,EAAE,EAHC;AAIVK,MAAAA,SAAS,EAAE;AAJD,KAtCW;AA4CvBzB,IAAAA,SAAS,EAAE;AACT0B,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,UAAU,EAAE,MAFH;AAGTC,MAAAA,SAAS,EAAE;AAHF,KA5CY;AAiDvB/B,IAAAA,SAAS,EAAE;AACTgC,MAAAA,YAAY,EAAE,EADL;AAETD,MAAAA,SAAS,EAAE;AAFF;AAjDY,GAAlB,CAAP;AAsDD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, TouchableHighlight } from \"react-native\";\r\n\r\nexport default function PlayersComponent({playerCount}:Props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const heightPercent = ((1 / Math.ceil(playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    <View>\r\n    <View style={{height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap'}}>\r\n      {playerBoxes(playerCount, heightPercent)}\r\n    </View>\r\n    <View style={styles().centeredView}>\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={modalVisible}\r\n      onRequestClose={() => {alert.alert(\"Modal has been closed.\");}}\r\n    >\r\n      <View style={styles.centeredView}>\r\n        <View style={styles.modalView}>\r\n          <Text style={styles.modalText}>Hello World!</Text>\r\n\r\n          <TouchableHighlight\r\n            style={{ ...styles.openButton, backgroundColor: \"#2196F3\" }}\r\n            onPress={() => {\r\n              setModalVisible(!modalVisible);\r\n            }}\r\n          >\r\n            <Text style={styles.textStyle}>Hide Modal</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n\r\n    <TouchableHighlight\r\n      style={styles.openButton}\r\n      onPress={() => {setModalVisible(true);}}\r\n    >\r\n      <Text style={styles.textStyle}>Show Modal</Text>\r\n    </TouchableHighlight>\r\n  </View>\r\n  </View>\r\n  )\r\n}\r\n\r\nfunction playerBoxes(playerCount:number, heightPercent:string) {\r\n  return (\r\n    <View>\r\n    [...Array(playerCount)].map((elementInArray, index) => (\r\n      <View style={styles(heightPercent).frame}>\r\n        <TouchableOpacity style={styles().button} onPress={() => {setModalVisible(true);}}>\r\n          <Text>Player {index + 1}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))\r\n  </View>\r\n  )\r\n}\r\n\r\nfunction buttonText(index:number) {\r\n  return \"Player \" + (index + 1).toString()\r\n}\r\n\r\ntype Props = {playerCount: number}\r\nlet players = []\r\n\r\nfunction createPlayer(index:number) {\r\n  const player = \"Player \" + index.toString()\r\n  players.push({player:player, role:\"Alter Ego\"})\r\n}\r\n\r\nfunction styles(heightPercent?: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'grey'\r\n    },\r\n\r\n    centeredView: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 22\r\n    },\r\n    modalView: {\r\n      margin: 20,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 20,\r\n      padding: 35,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    openButton: {\r\n      backgroundColor: \"#F194FF\",\r\n      borderRadius: 20,\r\n      padding: 10,\r\n      elevation: 2\r\n    },\r\n    textStyle: {\r\n      color: \"white\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"center\"\r\n    },\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: \"center\"\r\n    }\r\n  });\r\n}"]},"metadata":{},"sourceType":"module"}
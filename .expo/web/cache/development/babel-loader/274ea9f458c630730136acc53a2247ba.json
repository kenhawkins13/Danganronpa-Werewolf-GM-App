{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\src\\\\components\\\\modals\\\\Players.tsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { GameContext } from \"../../../App\";\nexport default function PlayersModal(_ref) {\n  var visible = _ref.visible,\n      setVisible = _ref.setVisible,\n      modal = _ref.modal,\n      onPlayerTouch = _ref.onPlayerTouch,\n      continueVisible = _ref.continueVisible,\n      disableContinue = _ref.disableContinue,\n      onContinue = _ref.onContinue;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    visible: visible,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, PlayersBoxes(onPlayerTouch))), ContinueButton(continueVisible, disableContinue, setVisible, onContinue)), modal);\n}\n\nfunction PlayersBoxes(onPlayerTouch) {\n  var _this = this;\n\n  var gameContext = useContext(GameContext);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      bool = _useState2[0],\n      setBool = _useState2[1];\n\n  var heightPercent = (1 / Math.ceil(gameContext.playerCount / 2) * 100).toString() + '%';\n  return _toConsumableArray(Array(gameContext.playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      key: 'player' + index,\n      style: frameStyle(heightPercent).frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableHighlight, {\n      key: 'player' + index + 1,\n      style: boxStyle(gameContext.playersInfo[index].colorScheme).style,\n      disabled: gameContext.playersInfo[index].colorScheme == 'grey' ? true : false,\n      onPress: function onPress() {\n        gameContext.currentPlayerIndex = index;\n        onPlayerTouch(index);\n        setBool(!bool);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: textStyle(gameContext.playersInfo[index].colorScheme).style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, gameContext.playersInfo[index].name)));\n  });\n}\n\nfunction ContinueButton(visible, disabled, setPlayersModalVisible, onContinue) {\n  if (visible) {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableHighlight, {\n      disabled: disabled,\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: disabled == true ? 'grey' : '#0066ff'\n      },\n      onPress: function onPress() {\n        setPlayersModalVisible(false);\n\n        if (onContinue) {\n          onContinue();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Continue\")));\n  } else {\n    return React.createElement(React.Fragment, null);\n  }\n}\n\nfunction frameStyle(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n}\n\nfunction textStyle(colorScheme) {\n  var textColor = '';\n\n  switch (colorScheme) {\n    case 'black':\n      textColor = 'white';\n      break;\n\n    default:\n      textColor = 'black';\n      break;\n  }\n\n  return StyleSheet.create({\n    style: {\n      color: textColor\n    }\n  });\n}\n\nfunction boxStyle(colorScheme) {\n  var backgroundColor = colorScheme;\n  return StyleSheet.create({\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: backgroundColor\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/src/components/modals/Players.tsx"],"names":["React","useContext","useState","GameContext","PlayersModal","visible","setVisible","modal","onPlayerTouch","continueVisible","disableContinue","onContinue","flex","height","width","flexDirection","flexWrap","PlayersBoxes","ContinueButton","gameContext","bool","setBool","heightPercent","Math","ceil","playerCount","toString","Array","map","elementInArray","index","frameStyle","frame","boxStyle","playersInfo","colorScheme","style","currentPlayerIndex","textStyle","name","disabled","setPlayersModalVisible","alignItems","justifyContent","backgroundColor","StyleSheet","create","borderColor","borderWidth","textColor","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableHighlight, Modal } from 'react-native'\r\nimport { GameContext } from '../../../App'\r\n\r\nexport default function PlayersModal({visible, setVisible, modal, onPlayerTouch, continueVisible, disableContinue, onContinue}:Props) {\r\n  // modal.props.setVisisble(true) Is this possible so I don't need to pass in setModalVisible?\r\n  return (\r\n    <View>\r\n      <Modal visible={visible} style={{ flex: 1 }}>\r\n        <View style={{ flex: 9 }}>\r\n          <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n            {PlayersBoxes(onPlayerTouch)}\r\n          </View>\r\n        </View>\r\n        {ContinueButton(continueVisible, disableContinue, setVisible, onContinue)}\r\n      </Modal>\r\n      {modal}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction PlayersBoxes(onPlayerTouch:(playerIndex:number) => void) {\r\n  const gameContext = useContext(GameContext)\r\n  const [bool, setBool] = useState(true)\r\n  const heightPercent = ((1 / Math.ceil(gameContext.playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    [...Array(gameContext.playerCount)].map((elementInArray, index) => (\r\n      <View key={'player' + index} style={frameStyle(heightPercent).frame}>\r\n        <TouchableHighlight key={'player' + index+1} style={boxStyle(gameContext.playersInfo[index].colorScheme).style} \r\n          disabled={gameContext.playersInfo[index].colorScheme == 'grey' ? true : false} onPress={() => {\r\n            gameContext.currentPlayerIndex = index\r\n            onPlayerTouch(index)\r\n            setBool(!bool) // to re-render PlayersBoxes\r\n          }}>\r\n          <Text style={textStyle(gameContext.playersInfo[index].colorScheme).style}>{gameContext.playersInfo[index].name}</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\nfunction ContinueButton(visible:boolean, disabled:boolean, setPlayersModalVisible:React.Dispatch<any>, onContinue?:() => void) {\r\n  if (visible) {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <TouchableHighlight disabled={disabled} \r\n          style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: disabled == true ? 'grey' : '#0066ff' }} \r\n          onPress={() => {\r\n            setPlayersModalVisible(false)\r\n            if (onContinue) { onContinue() }\r\n          }}>\r\n          <Text>Continue</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    )\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\ntype Props = {visible:boolean, setVisible:React.Dispatch<any>, modal:JSX.Element, onPlayerTouch:(playerIndex:number) => void, \r\n  continueVisible:boolean, disableContinue:boolean, onContinue?:() => void}\r\n\r\nfunction frameStyle(heightPercent: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    }\r\n  })\r\n}\r\n\r\nfunction textStyle(colorScheme:string) {\r\n  let textColor = ''\r\n  switch (colorScheme) {\r\n    case 'black':\r\n      textColor = 'white'\r\n      break\r\n    default:\r\n      textColor = 'black'\r\n      break\r\n  }\r\n  return StyleSheet.create({\r\n    style: {\r\n      color: textColor\r\n    }\r\n  })\r\n}\r\n\r\nfunction boxStyle(colorScheme:string) {\r\n  let backgroundColor = colorScheme\r\n  return StyleSheet.create({\r\n    style: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: backgroundColor\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
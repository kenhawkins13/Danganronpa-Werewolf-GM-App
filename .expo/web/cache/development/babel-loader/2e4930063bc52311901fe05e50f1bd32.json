{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\components\\\\PlayersPage.tsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nimport NightTimeAbilitiesItemsModal from \"../modals/NightTimeItemAbilities\";\nimport PlayerInfoModal from \"../modals/PlayerInfo\";\nimport RevealRoleModal from \"../modals/RevealRole\";\nexport default function PlayersPage(_ref) {\n  var modal = _ref.modal,\n      abilityOrItem = _ref.abilityOrItem;\n\n  if (!abilityOrItem) {\n    abilityOrItem = '';\n  }\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerIndex = _useState2[0],\n      setPlayerIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playerInfoModalVisible = _useState4[0],\n      setPlayerInfoModalVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nightTimeAbilitiesItemsVisible = _useState6[0],\n      setNightTimeAbilitiesItemsVisible = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      revealRoleVisible = _useState8[0],\n      setRevealRoleVisible = _useState8[1];\n\n  var setModalVisible = undefined;\n\n  if (modal === 'playerInfo') {\n    setModalVisible = setPlayerInfoModalVisible;\n  } else if (modal === 'abilitiesOrItems') {\n    setModalVisible = setNightTimeAbilitiesItemsVisible;\n  } else if (modal === 'revealRole') {\n    setModalVisible = setRevealRoleVisible;\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, PlayersBoxes(setPlayerIndex, setModalVisible)), React.createElement(PlayerInfoModal, {\n    playerIndex: playerIndex,\n    visible: playerInfoModalVisible,\n    setVisible: setPlayerInfoModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), React.createElement(NightTimeAbilitiesItemsModal, {\n    playerIndex: playerIndex,\n    visible: nightTimeAbilitiesItemsVisible,\n    setVisible: setNightTimeAbilitiesItemsVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(RevealRoleModal, {\n    playerIndex: playerIndex,\n    visible: revealRoleVisible,\n    setVisible: setRevealRoleVisible,\n    abilityOrItem: abilityOrItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction PlayersBoxes(setPlayerIndex, setModalVisible) {\n  var _this = this;\n\n  var appContext = useContext(AppContext);\n  var heightPercent = (1 / Math.ceil(appContext.playerCount / 2) * 100).toString() + '%';\n  return _toConsumableArray(Array(appContext.playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      key: 'player' + index,\n      style: frameStyle(heightPercent).frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableHighlight, {\n      key: 'player' + index + 1,\n      style: boxStyle(appContext.playersInfo[index].colorScheme).style,\n      onPress: function onPress() {\n        if (setModalVisible) {\n          setModalVisible(true);\n        }\n\n        setPlayerIndex(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: textStyle(appContext.playersInfo[index].colorScheme).style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, appContext.playersInfo[index].name)));\n  });\n}\n\nfunction frameStyle(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n}\n\nfunction textStyle(colorScheme) {\n  var textColor = '';\n\n  switch (colorScheme) {\n    case 'black':\n      textColor = 'white';\n      break;\n\n    default:\n      textColor = 'black';\n      break;\n  }\n\n  return StyleSheet.create({\n    style: {\n      color: textColor\n    }\n  });\n}\n\nfunction boxStyle(colorScheme) {\n  var backgroundColor = colorScheme;\n  return StyleSheet.create({\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: backgroundColor\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/components/PlayersPage.tsx"],"names":["React","useContext","useState","AppContext","NightTimeAbilitiesItemsModal","PlayerInfoModal","RevealRoleModal","PlayersPage","modal","abilityOrItem","playerIndex","setPlayerIndex","playerInfoModalVisible","setPlayerInfoModalVisible","nightTimeAbilitiesItemsVisible","setNightTimeAbilitiesItemsVisible","revealRoleVisible","setRevealRoleVisible","setModalVisible","undefined","height","width","flexDirection","flexWrap","PlayersBoxes","appContext","heightPercent","Math","ceil","playerCount","toString","Array","map","elementInArray","index","frameStyle","frame","boxStyle","playersInfo","colorScheme","style","textStyle","name","StyleSheet","create","borderColor","borderWidth","alignItems","justifyContent","textColor","color","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableHighlight } from 'react-native'\r\nimport { AppContext } from '../../App'\r\nimport NightTimeAbilitiesItemsModal from '../modals/NightTimeItemAbilities'\r\nimport PlayerInfoModal from '../modals/PlayerInfo'\r\nimport RevealRoleModal from '../modals/RevealRole'\r\n\r\nexport default function PlayersPage({modal, abilityOrItem}:Props) {\r\n  if (!abilityOrItem) { abilityOrItem = '' }\r\n  const [playerIndex, setPlayerIndex] = useState(0)\r\n  const [playerInfoModalVisible, setPlayerInfoModalVisible] = useState(false)\r\n  const [nightTimeAbilitiesItemsVisible, setNightTimeAbilitiesItemsVisible] = useState(false)\r\n  const [revealRoleVisible, setRevealRoleVisible] = useState(false)\r\n  let setModalVisible:React.Dispatch<any>|undefined = undefined\r\n  if (modal === 'playerInfo') {\r\n    setModalVisible = setPlayerInfoModalVisible\r\n  } else if (modal === 'abilitiesOrItems') {\r\n    setModalVisible = setNightTimeAbilitiesItemsVisible\r\n  } else if (modal === 'revealRole') {\r\n    setModalVisible = setRevealRoleVisible\r\n  }\r\n  return (\r\n    <View>\r\n      <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n        {PlayersBoxes(setPlayerIndex, setModalVisible)}\r\n      </View>\r\n      <PlayerInfoModal playerIndex={playerIndex} visible={playerInfoModalVisible} setVisible={setPlayerInfoModalVisible}/>\r\n      <NightTimeAbilitiesItemsModal playerIndex={playerIndex} visible={nightTimeAbilitiesItemsVisible} setVisible={setNightTimeAbilitiesItemsVisible}/>\r\n      <RevealRoleModal playerIndex={playerIndex} visible={revealRoleVisible} setVisible={setRevealRoleVisible} abilityOrItem={abilityOrItem}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction PlayersBoxes(setPlayerIndex:React.Dispatch<any>, setModalVisible?:React.Dispatch<any>|undefined) {\r\n  const appContext = useContext(AppContext);\r\n  const heightPercent = ((1 / Math.ceil(appContext.playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    [...Array(appContext.playerCount)].map((elementInArray, index) => (\r\n      <View key={'player' + index} style={frameStyle(heightPercent).frame}>\r\n        <TouchableHighlight key={'player' + index+1} style={boxStyle(appContext.playersInfo[index].colorScheme).style} onPress={() => {\r\n            if(setModalVisible) { setModalVisible(true) }\r\n            setPlayerIndex(index)\r\n          }}>\r\n          <Text style={textStyle(appContext.playersInfo[index].colorScheme).style}>{appContext.playersInfo[index].name}</Text>\r\n        </TouchableHighlight>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\ntype Props = {modal:string, abilityOrItem?:string}\r\n\r\nfunction frameStyle(heightPercent: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    }\r\n  })\r\n}\r\n\r\nfunction textStyle(colorScheme:string) {\r\n  let textColor = ''\r\n  switch (colorScheme) {\r\n    case 'black':\r\n      textColor = 'white'\r\n      break\r\n    default:\r\n      textColor = 'black'\r\n      break\r\n  }\r\n  return StyleSheet.create({\r\n    style: {\r\n      color: textColor\r\n    }\r\n  })\r\n}\r\n\r\nfunction boxStyle(colorScheme:string) {\r\n  let backgroundColor = colorScheme\r\n  return StyleSheet.create({\r\n    style: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: backgroundColor\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
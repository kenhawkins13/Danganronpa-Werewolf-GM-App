{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\components\\\\PlayersComponent.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar _modalVisible = false;\nexport default function PlayersComponent(_ref) {\n  var playerCount = _ref.playerCount;\n  var heightPercent = (1 / Math.ceil(playerCount / 2) * 100).toString() + '%';\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, PlayerBoxes(playerCount, heightPercent)), React.createElement(View, {\n    style: styles().centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: false,\n    onRequestClose: function onRequestClose() {\n      Alert.alert('Modal has been closed.');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles().centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles().modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles().modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Hello World!\"), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, styles().openButton), {}, {\n      backgroundColor: '#2196F3'\n    }),\n    onPress: function onPress() {\n      !_modalVisible;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles().textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"Hide Modal\")))))));\n}\n\nfunction PlayerBoxes(playerCount, heightPercent) {\n  var _this = this;\n\n  return _toConsumableArray(Array(playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      key: 'player' + index,\n      style: styles(heightPercent).frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles().button,\n      onPress: function onPress() {\n        _modalVisible = true;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Player \", index + 1)));\n  });\n}\n\nfunction styles(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'grey'\n    },\n    centeredView: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 22\n    },\n    modalView: {\n      margin: 20,\n      backgroundColor: 'white',\n      borderRadius: 20,\n      padding: 35,\n      alignItems: 'center',\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.25,\n      shadowRadius: 3.84,\n      elevation: 5\n    },\n    openButton: {\n      backgroundColor: '#F194FF',\n      borderRadius: 20,\n      padding: 10,\n      elevation: 2\n    },\n    textStyle: {\n      color: 'white',\n      fontWeight: 'bold',\n      textAlign: 'center'\n    },\n    modalText: {\n      marginBottom: 15,\n      textAlign: 'center'\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/components/PlayersComponent.tsx"],"names":["React","_modalVisible","PlayersComponent","playerCount","heightPercent","Math","ceil","toString","height","width","flexDirection","flexWrap","PlayerBoxes","styles","centeredView","Alert","alert","modalView","modalText","openButton","backgroundColor","textStyle","Array","map","elementInArray","index","frame","button","StyleSheet","create","borderColor","borderWidth","alignItems","justifyContent","flex","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;;;;;;;;AAGA,IAAIC,aAAa,GAAG,KAApB;AAEA,eAAe,SAASC,gBAAT,OAAiD;AAAA,MAArBC,WAAqB,QAArBA,WAAqB;AAC9D,MAAMC,aAAa,GAAG,CAAE,IAAIC,IAAI,CAACC,IAAL,CAAUH,WAAW,GAAG,CAAxB,CAAL,GAAmC,GAApC,EAAyCI,QAAzC,KAAsD,GAA5E;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE,MAAzB;AAAiCC,MAAAA,aAAa,EAAE,QAAhD;AAA0DC,MAAAA,QAAQ,EAAE;AAApE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WAAW,CAACT,WAAD,EAAcC,aAAd,CADd,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,GAAGC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,OADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAE,KAHX;AAIE,IAAA,cAAc,EAAE,0BAAM;AAAEC,MAAAA,KAAK,CAACC,KAAN,CAAY,wBAAZ;AAAuC,KAJjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,GAAGC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,GAAGI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,GAAGK,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGE,oBAAC,kBAAD;AACE,IAAA,KAAK,kCAAOL,MAAM,GAAGM,UAAhB;AAA4BC,MAAAA,eAAe,EAAE;AAA7C,MADP;AAEE,IAAA,OAAO,EAAE,mBAAM;AAAE,OAACnB,aAAD;AAAgB,KAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,GAAGQ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAHF,CADF,CANF,CADA,CAJF,CADF;AA4BD;;AAED,SAAST,WAAT,CAAqBT,WAArB,EAAyCC,aAAzC,EAA+D;AAAA;;AAC7D,SACE,mBAAIkB,KAAK,CAACnB,WAAD,CAAT,EAAwBoB,GAAxB,CAA4B,UAACC,cAAD,EAAiBC,KAAjB;AAAA,WAC1B,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,WAAWA,KAAtB;AAA6B,MAAA,KAAK,EAAEZ,MAAM,CAACT,aAAD,CAAN,CAAsBsB,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEb,MAAM,GAAGc,MAAlC;AAA0C,MAAA,OAAO,EAAE,mBAAM;AAAE1B,QAAAA,aAAa,GAAG,IAAhB;AAAqB,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcwB,KAAK,GAAG,CAAtB,CADF,CADF,CAD0B;AAAA,GAA5B,CADF;AASD;;AAcD,SAASZ,MAAT,CAAgBT,aAAhB,EAAwC;AACtC,SAAOwB,UAAU,CAACC,MAAX,CAAkB;AACvBH,IAAAA,KAAK,EAAE;AACLjB,MAAAA,KAAK,EAAE,KADF;AAELD,MAAAA,MAAM,EAAEJ,aAFH;AAGL0B,MAAAA,WAAW,EAAE,OAHR;AAILC,MAAAA,WAAW,EAAE,CAJR;AAKLC,MAAAA,UAAU,EAAE,QALP;AAMLC,MAAAA,cAAc,EAAE;AANX,KADgB;AASvBN,IAAAA,MAAM,EAAE;AACNlB,MAAAA,KAAK,EAAE,MADD;AAEND,MAAAA,MAAM,EAAE,MAFF;AAGNwB,MAAAA,UAAU,EAAE,QAHN;AAINC,MAAAA,cAAc,EAAE,QAJV;AAKNb,MAAAA,eAAe,EAAE;AALX,KATe;AAiBvBN,IAAAA,YAAY,EAAE;AACZoB,MAAAA,IAAI,EAAE,CADM;AAEZD,MAAAA,cAAc,EAAE,QAFJ;AAGZD,MAAAA,UAAU,EAAE,QAHA;AAIZG,MAAAA,SAAS,EAAE;AAJC,KAjBS;AAuBvBlB,IAAAA,SAAS,EAAE;AACTmB,MAAAA,MAAM,EAAE,EADC;AAEThB,MAAAA,eAAe,EAAE,OAFR;AAGTiB,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTN,MAAAA,UAAU,EAAE,QALH;AAMTO,MAAAA,WAAW,EAAE,MANJ;AAOTC,MAAAA,YAAY,EAAE;AACZ/B,QAAAA,KAAK,EAAE,CADK;AAEZD,QAAAA,MAAM,EAAE;AAFI,OAPL;AAWTiC,MAAAA,aAAa,EAAE,IAXN;AAYTC,MAAAA,YAAY,EAAE,IAZL;AAaTC,MAAAA,SAAS,EAAE;AAbF,KAvBY;AAsCvBxB,IAAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EAAE,SADP;AAEViB,MAAAA,YAAY,EAAE,EAFJ;AAGVC,MAAAA,OAAO,EAAE,EAHC;AAIVK,MAAAA,SAAS,EAAE;AAJD,KAtCW;AA4CvBtB,IAAAA,SAAS,EAAE;AACTuB,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,UAAU,EAAE,MAFH;AAGTC,MAAAA,SAAS,EAAE;AAHF,KA5CY;AAiDvB5B,IAAAA,SAAS,EAAE;AACT6B,MAAAA,YAAY,EAAE,EADL;AAETD,MAAAA,SAAS,EAAE;AAFF;AAjDY,GAAlB,CAAP;AAsDD","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, TouchableHighlight, Alert } from 'react-native'\r\n\r\nlet _modalVisible = false\r\n\r\nexport default function PlayersComponent({ playerCount }:Props) {\r\n  const heightPercent = ((1 / Math.ceil(playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    <View>\r\n      <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n        {PlayerBoxes(playerCount, heightPercent)}\r\n      </View>\r\n      <View style={styles().centeredView}>\r\n      <Modal\r\n        animationType='slide'\r\n        transparent={true}\r\n        visible={false}\r\n        onRequestClose={() => { Alert.alert('Modal has been closed.') }}\r\n      >\r\n        <View style={styles().centeredView}>\r\n          <View style={styles().modalView}>\r\n            <Text style={styles().modalText}>Hello World!</Text>\r\n\r\n            <TouchableHighlight\r\n              style={{ ...styles().openButton, backgroundColor: '#2196F3' }}\r\n              onPress={() => { !_modalVisible }}\r\n            >\r\n              <Text style={styles().textStyle}>Hide Modal</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  </View>\r\n  )\r\n}\r\n\r\nfunction PlayerBoxes(playerCount:number, heightPercent:string) {\r\n  return (\r\n    [...Array(playerCount)].map((elementInArray, index) => (\r\n      <View key={'player' + index} style={styles(heightPercent).frame}>\r\n        <TouchableOpacity style={styles().button} onPress={() => { _modalVisible = true}}>\r\n          <Text>Player {index + 1}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\n// function buttonText(index:number) {\r\n//   return 'Player ' + (index + 1).toString()\r\n// }\r\n\r\ntype Props = {playerCount: number}\r\n// const players = []\r\n\r\n// function createPlayer(index:number) {\r\n//   const player = 'Player ' + index.toString()\r\n//   players.push({player:player, role:'Alter Ego'})\r\n// }\r\n\r\nfunction styles(heightPercent?: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'grey'\r\n    },\r\n\r\n    centeredView: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: 22\r\n    },\r\n    modalView: {\r\n      margin: 20,\r\n      backgroundColor: 'white',\r\n      borderRadius: 20,\r\n      padding: 35,\r\n      alignItems: 'center',\r\n      shadowColor: '#000',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 5\r\n    },\r\n    openButton: {\r\n      backgroundColor: '#F194FF',\r\n      borderRadius: 20,\r\n      padding: 10,\r\n      elevation: 2\r\n    },\r\n    textStyle: {\r\n      color: 'white',\r\n      fontWeight: 'bold',\r\n      textAlign: 'center'\r\n    },\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: 'center'\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
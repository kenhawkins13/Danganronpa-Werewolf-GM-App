{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\MorningTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nexport default function MorningTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n  appContext.dayNumber = 1;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState('Good Morning'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      labelText = _useState4[0],\n      setLabelText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonText = _useState6[0],\n      setButtonText = _useState6[1];\n\n  if (step === 0) {\n    Speech.speak(getText(appContext.dayNumber), {\n      onDone: function onDone() {\n        setTimeout(function () {\n          sequence(step, setStep, navigation, appContext, setLabelText, setButtonText);\n        }, 2 * 1000);\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Morning Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, labelText)), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      sequence(step, setStep, navigation, appContext, setLabelText, setButtonText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, buttonText)))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"NightTimePage\",\n    nextPage: \"DayTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction sequence(step, setStep, navigation, appContext, setLabelText, setButtonText) {\n  Speech.stop();\n  step += 1;\n\n  if (appContext.dayNumber === 1) {\n    switch (step) {\n      case 1:\n        Speech.speak('Victim, discard one Item card. This attack cannot be negated or deflected. Then click the button below.');\n        setStep(step);\n        setLabelText('Victim - Discard one Item card');\n        setButtonText('Click here after the victim discarded one Item card');\n        break;\n\n      case 2:\n        navigation.push('DayTimePage');\n        break;\n    }\n  }\n}\n\nfunction getText(dayNumber) {\n  var days = ['zeroth', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eight', 'ninth', 'I stopped keeping track'];\n  return '\"Good morning, everyone! It is the morning of the ' + days[dayNumber] + ' day. Get ready to greet another beee-yutiful day\"';\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/MorningTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","MorningTimePage","navigation","appContext","dayNumber","step","setStep","labelText","setLabelText","buttonText","setButtonText","speak","getText","onDone","setTimeout","sequence","flex","alignItems","justifyContent","backgroundColor","width","height","stop","push","days"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight } from 'react-native'\r\nimport { AppContext } from '../../App';\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport { AppContextType } from '../types/types';\r\n\r\nexport default function MorningTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  appContext.dayNumber = 1 // TODO: change to += 1\r\n  const [step, setStep] = useState(0)\r\n  const [labelText, setLabelText] = useState('Good Morning')\r\n  const [buttonText, setButtonText] = useState('')\r\n  if (step === 0) {\r\n    Speech.speak(getText(appContext.dayNumber), {onDone: () => {\r\n      setTimeout(() => {sequence(step, setStep, navigation, appContext, setLabelText, setButtonText)}, 2 * 1000)\r\n    }})\r\n  }\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'grey' }}>\r\n        <Text>Morning Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{labelText}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { sequence(step, setStep, navigation, appContext, setLabelText, setButtonText) }}>\r\n            <Text>{buttonText}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='NightTimePage' nextPage='DayTimePage'></NavigationBar>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sequence(step:number, setStep:React.Dispatch<any>, navigation:any, appContext:AppContextType, setLabelText:React.Dispatch<any>, setButtonText:React.Dispatch<any>) {\r\n  // reveal if player has a special role \r\n  // allow Mikan to investigate dead player's role\r\n  // allow player to play Vice\r\n  Speech.stop()\r\n  step += 1\r\n  if (appContext.dayNumber === 1) {\r\n    switch (step) {\r\n      case 1:\r\n        Speech.speak('Victim, discard one Item card. This attack cannot be negated or deflected. Then click the button below.')\r\n        setStep(step)\r\n        setLabelText('Victim - Discard one Item card')\r\n        setButtonText('Click here after the victim discarded one Item card')\r\n        break\r\n      case 2:\r\n        navigation.push('DayTimePage')\r\n        break\r\n    }\r\n  }\r\n}\r\n\r\nfunction getText(dayNumber:number) {\r\n  const days = ['zeroth', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eight', 'ninth', 'I stopped keeping track']\r\n  return '\"Good morning, everyone! It is the morning of the ' + days[dayNumber] + ' day. Get ready to greet another beee-yutiful day\"'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
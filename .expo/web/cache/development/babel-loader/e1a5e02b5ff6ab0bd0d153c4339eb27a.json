{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\src\\\\components\\\\modals\\\\RevealRole.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { GameContext } from \"../../../App\";\nimport { modalStyles } from \"../../styles/styles\";\nimport Confirmation from \"./Confirmation\";\nexport default function RevealRoleModal(_ref) {\n  var visible = _ref.visible,\n      setVisible = _ref.setVisible,\n      abilityOrItem = _ref.abilityOrItem,\n      callback = _ref.callback;\n  var gameContext = useContext(GameContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      revelationVisible = _useState2[0],\n      setRevelationVisible = _useState2[1];\n\n  var confirmationText = 'Investigate ' + gameContext.playersInfo[gameContext.currentPlayerIndex].name + '?';\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(Confirmation, {\n    visible: visible,\n    setVisible: setVisible,\n    text: confirmationText,\n    onYes: function onYes() {\n      return setRevelationVisible(true);\n    },\n    onNo: function onNo() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), React.createElement(Revelation, {\n    visible: revelationVisible,\n    setVisible: setRevelationVisible,\n    abilityOrItem: abilityOrItem,\n    callback: callback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Revelation(_ref2) {\n  var visible = _ref2.visible,\n      setVisible = _ref2.setVisible,\n      abilityOrItem = _ref2.abilityOrItem,\n      callback = _ref2.callback;\n  var gameContext = useContext(GameContext);\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: modalStyles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: modalStyles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, revealText(gameContext, abilityOrItem)), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setVisible(false);\n\n      if (callback) {\n        callback();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"OK\")))));\n}\n\nfunction revealText(gameContext, abilityOrItem) {\n  var string = '';\n\n  switch (abilityOrItem) {\n    case \"Yasuhiro Hagakure\":\n      var role = gameContext.playerCount < 7 ? 'Despair Disease Patient' : 'Monomi';\n      string = gameContext.playersInfo[gameContext.currentPlayerIndex].role == role ? role : 'Not ' + role;\n      break;\n\n    case \"Alter Ego\":\n    case \"Glasses\":\n      if (['Blackened', 'Traitor', 'Despair Disease Patient', 'Monomi'].includes(gameContext.playersInfo[gameContext.currentPlayerIndex].role)) {\n        string = 'Despair';\n      } else {\n        string = 'Hope';\n      }\n\n      break;\n\n    case \"Someone's Graduation Album\":\n      string = gameContext.playersInfo[gameContext.currentPlayerIndex].role == 'Traitor' ? 'Traitor' : 'Not Traitor';\n      break;\n\n    case \"Silent Receiver\":\n      string = gameContext.playersInfo[gameContext.currentPlayerIndex].role == 'Spotless' ? 'Spotless' : 'Not Spotless';\n      break;\n  }\n\n  return string;\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/src/components/modals/RevealRole.tsx"],"names":["React","useContext","useState","GameContext","modalStyles","Confirmation","RevealRoleModal","visible","setVisible","abilityOrItem","callback","gameContext","revelationVisible","setRevelationVisible","confirmationText","playersInfo","currentPlayerIndex","name","Revelation","centeredView","modalView","modalText","revealText","button","backgroundColor","textStyle","string","role","playerCount","includes"],"mappings":"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","sourcesContent":["import { useNavigation } from \"@react-navigation/native\"\r\nimport React, { useContext, useState } from \"react\"\r\nimport { Modal, View, Text, TouchableHighlight } from \"react-native\"\r\nimport { GameContext } from \"../../../App\"\r\nimport { modalStyles } from \"../../styles/styles\"\r\nimport { GameContextType } from \"../../types/types\"\r\nimport Confirmation from \"./Confirmation\"\r\n\r\nexport default function RevealRoleModal({visible, setVisible, abilityOrItem, callback}:Props) {\r\n  const gameContext = useContext(GameContext)\r\n  const [revelationVisible, setRevelationVisible] = useState(false)\r\n  const confirmationText = 'Investigate ' + gameContext.playersInfo[gameContext.currentPlayerIndex].name + '?'\r\n  return (\r\n    <View>\r\n      <Confirmation visible={visible} setVisible={setVisible} text={confirmationText} onYes={() => setRevelationVisible(true)} onNo={() => {}}/>\r\n      <Revelation visible={revelationVisible} setVisible={setRevelationVisible} abilityOrItem={abilityOrItem} callback={callback}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction Revelation({visible, setVisible, abilityOrItem, callback}:Props) {\r\n  const gameContext = useContext(GameContext)\r\n  return (\r\n    <Modal animationType=\"slide\" transparent={true} visible={visible}>\r\n      <View style={modalStyles.centeredView}>\r\n        <View style={modalStyles.modalView}>\r\n          <Text style={modalStyles.modalText}>\r\n            {revealText(gameContext, abilityOrItem)}\r\n          </Text>\r\n          <TouchableHighlight style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }} \r\n            onPress={() => { \r\n              setVisible(false)\r\n              if (callback) { callback() }\r\n            }}>\r\n            <Text style={modalStyles.textStyle}>OK</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nfunction revealText(gameContext:GameContextType, abilityOrItem:string):string {\r\n  let string = ''\r\n  switch (abilityOrItem) {\r\n    case \"Yasuhiro Hagakure\":\r\n      const role = gameContext.playerCount < 7 ? 'Despair Disease Patient' : 'Monomi'\r\n      string = gameContext.playersInfo[gameContext.currentPlayerIndex].role == role ? role : 'Not ' + role\r\n      break\r\n    case \"Alter Ego\":\r\n    case \"Glasses\":\r\n      if (['Blackened', 'Traitor', 'Despair Disease Patient', 'Monomi'].includes(gameContext.playersInfo[gameContext.currentPlayerIndex].role)) {\r\n        string = 'Despair'\r\n      } else {\r\n        string = 'Hope'\r\n      }\r\n      break\r\n    case \"Someone's Graduation Album\":\r\n      string = gameContext.playersInfo[gameContext.currentPlayerIndex].role == 'Traitor' ? 'Traitor' : 'Not Traitor'\r\n      break\r\n    case \"Silent Receiver\":\r\n      string = gameContext.playersInfo[gameContext.currentPlayerIndex].role == 'Spotless' ? 'Spotless' : 'Not Spotless'\r\n      break\r\n  }\r\n  return string\r\n}\r\n\r\ntype Props = {visible:boolean, setVisible:React.Dispatch<any>, abilityOrItem:string, callback?:() => void}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\screens\\\\Players.tsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PlayersComponent from \"../components/PlayersComponent\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayerInfoModal from \"../components/PlayerInfoModal\";\nimport { Context } from \"../../App\";\nimport { calculateRoles } from \"../data/Table\";\nimport alertModal from \"../components/AlertModal\";\nexport default function PlayersPage() {\n  var context = useContext(Context);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alertModalVisible = _useState4[0],\n      setAlertModalVisible = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playerIndex = _useState6[0],\n      setPlayerIndex = _useState6[1];\n\n  var _useState7 = useState(context.players[playerIndex].role),\n      _useState8 = _slicedToArray(_useState7, 2),\n      playerRole = _useState8[0],\n      setPlayerRole = _useState8[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, PlayersComponent({\n    setModalVisible: setModalVisible,\n    setPlayerIndex: setPlayerIndex,\n    setPlayerRole: setPlayerRole\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(PlayerInfoModal, {\n    playerIndex: playerIndex,\n    playerRole: playerRole,\n    setPlayerRole: setPlayerRole,\n    visible: modalVisible,\n    setVisible: setModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"RolesPage\",\n    nextPage: \"ItemsPage\",\n    callback: function callback() {\n      return confirmPlayerRoles(context, setAlertModalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), alertModal(alertModalVisible, setAlertModalVisible));\n}\n\nfunction confirmPlayerRoles(context, setAlertModalVisible) {\n  var neededRoles = calculateRoles(context.mode, context.playerCount);\n  var enteredRoles = [];\n  neededRoles.forEach(function (rolesNeeded) {\n    enteredRoles.push({\n      roles: rolesNeeded.roles,\n      count: 0\n    });\n  });\n  context.players.forEach(function (playerInfo) {\n    var roleEntered = enteredRoles.find(function (array) {\n      return JSON.stringify(array.roles) === JSON.stringify([playerInfo.role]);\n    });\n\n    if (roleEntered) {\n      roleEntered.count += 1;\n    } else {}\n  });\n\n  if (JSON.stringify(enteredRoles) === JSON.stringify(neededRoles)) {\n    return true;\n  } else {\n    setAlertModalVisible(true);\n    return false;\n  }\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/screens/Players.tsx"],"names":["React","useContext","useState","PlayersComponent","NavigationBar","PlayerInfoModal","Context","calculateRoles","alertModal","PlayersPage","context","modalVisible","setModalVisible","alertModalVisible","setAlertModalVisible","playerIndex","setPlayerIndex","players","role","playerRole","setPlayerRole","flex","height","width","flexDirection","flexWrap","confirmPlayerRoles","neededRoles","mode","playerCount","enteredRoles","forEach","rolesNeeded","push","roles","count","playerInfo","roleEntered","find","array","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View } from 'react-native'\r\nimport PlayersComponent from '../components/PlayersComponent'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayerInfoModal from '../components/PlayerInfoModal'\r\nimport { Context } from '../../App'\r\nimport { ContextType, RoleCount } from '../types/types'\r\nimport { calculateRoles } from '../data/Table'\r\nimport alertModal from '../components/AlertModal'\r\n\r\nexport default function PlayersPage() {\r\n  const context = useContext(Context);\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [alertModalVisible, setAlertModalVisible] = useState(false);\r\n  const [playerIndex, setPlayerIndex] = useState(0)\r\n  const [playerRole, setPlayerRole] = useState(context.players[playerIndex].role)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n          {PlayersComponent({setModalVisible, setPlayerIndex, setPlayerRole})}\r\n        </View>\r\n        <View>\r\n          <PlayerInfoModal playerIndex={playerIndex} playerRole={playerRole} setPlayerRole={setPlayerRole} visible={modalVisible} setVisible={setModalVisible}></PlayerInfoModal>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='RolesPage' nextPage='ItemsPage' callback={function() {return confirmPlayerRoles(context, setAlertModalVisible)}}></NavigationBar>\r\n      </View>\r\n      {alertModal(alertModalVisible, setAlertModalVisible)}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction confirmPlayerRoles(context: ContextType, setAlertModalVisible:React.Dispatch<any>) {\r\n  const neededRoles:RoleCount[] = calculateRoles(context.mode, context.playerCount)\r\n  const enteredRoles:RoleCount[] = []\r\n  neededRoles.forEach(rolesNeeded => {\r\n    enteredRoles.push({roles: rolesNeeded.roles, count:0})\r\n  });\r\n  context.players.forEach(playerInfo => {\r\n    var roleEntered = enteredRoles.find((array) => {return JSON.stringify(array.roles) === JSON.stringify([playerInfo.role])})\r\n    if (roleEntered) {\r\n      roleEntered.count += 1\r\n    } else {\r\n      // modal alerting that roles are wrong, double check\r\n    }\r\n  });\r\n  if (JSON.stringify(enteredRoles) === JSON.stringify(neededRoles)) {\r\n    return true\r\n  } else {\r\n    setAlertModalVisible(true)\r\n    return false\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
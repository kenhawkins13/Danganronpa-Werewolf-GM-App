{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\NightTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayersScreen from \"../components/PlayersScreen\";\nimport { nightTimeButtonTexts, nightTimeLabelTexts, nightTimeSpeeches } from \"../data/NightTimeDialogue\";\nexport default function NightTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalType = _useState4[0],\n      setModalType = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalVisible = _useState6[0],\n      setModalVisible = _useState6[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Night Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, nightTimeLabelTexts(appContext.dayNumber)[step])), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      sequence(step, setStep, setModalVisible, appContext, navigation, setModalType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, nightTimeButtonTexts(appContext.dayNumber)[step])))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"ItemsPage\",\n    nextPage: \"MorningTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), React.createElement(Modal, {\n    visible: modalVisible,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(PlayersScreen, {\n    modal: modalType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#0066ff'\n    },\n    onPress: function onPress() {\n      sequence(step, setStep, setModalVisible, appContext, navigation, setModalType);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"OK\")))));\n}\n\nfunction sequence(step, setStep, setModalVisible, appContext, navigation, setModalType) {\n  return _regeneratorRuntime.async(function sequence$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Speech.stop());\n\n        case 2:\n          setStep(step);\n          Speech.speak(nightTimeSpeeches(appContext.dayNumber)[step + 1]);\n\n          if (!(appContext.dayNumber === 0)) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.t0 = step;\n          _context.next = _context.t0 === 2 ? 8 : _context.t0 === 3 ? 12 : _context.t0 === 4 ? 14 : 15;\n          break;\n\n        case 8:\n          appContext.playersInfo.forEach(function (playerInfo) {\n            playerInfo.status = playerInfo.role == 'Blackened' ? 'despair' : 'hope';\n          });\n          setModalVisible(true);\n          setStep(step + 1);\n          return _context.abrupt(\"break\", 15);\n\n        case 12:\n          setModalVisible(false);\n          return _context.abrupt(\"break\", 15);\n\n        case 14:\n          navigation.push('MorningTimePage');\n\n        case 15:\n          _context.next = 32;\n          break;\n\n        case 17:\n          if (!(appContext.dayNumber === 1)) {\n            _context.next = 32;\n            break;\n          }\n\n          _context.t1 = step;\n          _context.next = _context.t1 === 0 ? 21 : _context.t1 === 1 ? 25 : _context.t1 === 2 ? 27 : _context.t1 === 3 ? 29 : _context.t1 === 4 ? 31 : 32;\n          break;\n\n        case 21:\n          setModalType('itemCards');\n          appContext.playersInfo.forEach(function (playerInfo) {\n            playerInfo.status = 'hope';\n          });\n          setModalVisible(true);\n          return _context.abrupt(\"break\", 32);\n\n        case 25:\n          setModalVisible(false);\n          return _context.abrupt(\"break\", 32);\n\n        case 27:\n          setModalVisible(true);\n          return _context.abrupt(\"break\", 32);\n\n        case 29:\n          setModalVisible(false);\n          return _context.abrupt(\"break\", 32);\n\n        case 31:\n          navigation.push('MorningTimePage');\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/NightTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","PlayersScreen","nightTimeButtonTexts","nightTimeLabelTexts","nightTimeSpeeches","NightTimePage","navigation","appContext","step","setStep","undefined","modalType","setModalType","modalVisible","setModalVisible","flex","alignItems","justifyContent","backgroundColor","dayNumber","width","height","sequence","stop","speak","playersInfo","forEach","playerInfo","status","role","push"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight, Modal } from 'react-native'\r\nimport { AppContext } from '../../App';\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayersScreen from '../components/PlayersScreen'\r\nimport { nightTimeButtonTexts, nightTimeLabelTexts, nightTimeSpeeches } from '../data/NightTimeDialogue';\r\nimport { AppContextType } from '../types/types'\r\n\r\nexport default function NightTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  const [step, setStep] = useState(0)\r\n  const [modalType, setModalType] = useState(undefined)\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'lightblue' }}>\r\n        <Text>Night Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{nightTimeLabelTexts(appContext.dayNumber)[step]}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { sequence(step, setStep, setModalVisible, appContext, navigation, setModalType) }}>\r\n            <Text>{nightTimeButtonTexts(appContext.dayNumber)[step]}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='ItemsPage' nextPage='MorningTimePage'></NavigationBar>\r\n      </View>\r\n      <Modal visible={modalVisible} style={{ flex: 1 }}>\r\n        <View style={{ flex: 9 }}>\r\n          <PlayersScreen modal={modalType}></PlayersScreen>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <TouchableHighlight style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#0066ff' }} \r\n            onPress={() => { sequence(step, setStep, setModalVisible, appContext, navigation, setModalType) }}>\r\n            <Text>OK</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\n\r\nasync function sequence(step:number, setStep:React.Dispatch<any>, setModalVisible:React.Dispatch<any>, appContext:AppContextType, navigation:any, setModalType:React.Dispatch<any>) {\r\n  await Speech.stop()\r\n  setStep(step)\r\n  Speech.speak(nightTimeSpeeches(appContext.dayNumber)[step + 1])\r\n  if (appContext.dayNumber === 0) {\r\n    switch (step) {\r\n      case 2:\r\n        appContext.playersInfo.forEach(playerInfo => {\r\n          playerInfo.status = playerInfo.role == 'Blackened' ? 'despair' : 'hope'\r\n        })\r\n        setModalVisible(true)\r\n        setStep(step + 1)\r\n        break\r\n      case 3:\r\n        setModalVisible(false)\r\n        break\r\n      case 4:\r\n        navigation.push('MorningTimePage')\r\n    }\r\n  } else if (appContext.dayNumber === 1) {\r\n    switch (step) {\r\n      case 0:\r\n        setModalType('itemCards')\r\n        appContext.playersInfo.forEach(playerInfo => {\r\n          playerInfo.status = 'hope'\r\n        })\r\n        setModalVisible(true)\r\n        break\r\n      case 1:\r\n        setModalVisible(false)\r\n        break\r\n      case 2:\r\n        setModalVisible(true)\r\n        break\r\n      case 3:\r\n        setModalVisible(false)\r\n        break\r\n      case 4:\r\n        navigation.push('MorningTimePage')\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
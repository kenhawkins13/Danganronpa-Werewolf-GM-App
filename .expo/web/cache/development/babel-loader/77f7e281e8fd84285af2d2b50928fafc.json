{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\components\\\\PlayersComponent.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Context } from \"../App\";\nimport PlayerInfoModal from \"./PlayerInfoModal\";\nexport default function PlayersComponent(_ref) {\n  var _this = this;\n\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible,\n      playerNumber = _ref.playerNumber,\n      setPlayerNumber = _ref.setPlayerNumber;\n  return React.createElement(Context.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, function (context) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        height: '100%',\n        width: '100%',\n        flexDirection: 'column',\n        flexWrap: 'wrap'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, PlayerBoxes(context.playerCount, modalVisible, setModalVisible, setPlayerNumber)), React.createElement(PlayerInfoModal, {\n      playerNumber: playerNumber,\n      visible: modalVisible,\n      setVisible: setModalVisible,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }));\n  });\n}\n\nfunction PlayerBoxes(playerCount, modalVisible, setModalVisible, setPlayer) {\n  var _this2 = this;\n\n  var heightPercent = (1 / Math.ceil(playerCount / 2) * 100).toString() + '%';\n  return _toConsumableArray(Array(playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      key: 'player' + index,\n      style: styles(heightPercent).frame,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles().button,\n      onPress: function onPress() {\n        setModalVisibility(true, setModalVisible, index + 1, setPlayer);\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"Player \", index + 1)));\n  });\n}\n\nfunction setModalVisibility(bool, setModalVisible, player, setPlayer) {\n  setModalVisible(bool);\n  setPlayer(player);\n}\n\nfunction styles(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'grey'\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/components/PlayersComponent.tsx"],"names":["React","Context","PlayerInfoModal","PlayersComponent","modalVisible","setModalVisible","playerNumber","setPlayerNumber","context","height","width","flexDirection","flexWrap","PlayerBoxes","playerCount","setPlayer","heightPercent","Math","ceil","toString","Array","map","elementInArray","index","styles","frame","button","setModalVisibility","bool","player","StyleSheet","create","borderColor","borderWidth","alignItems","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { Context } from '../App'\r\nimport PlayerInfoModal from './PlayerInfoModal'\r\n\r\nexport default function PlayersComponent({modalVisible, setModalVisible, playerNumber, setPlayerNumber}:Props) {\r\n  return (\r\n    <Context.Consumer>{(context) => (\r\n      <View>\r\n        <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n          {PlayerBoxes(context.playerCount, modalVisible, setModalVisible, setPlayerNumber)}\r\n        </View>\r\n        <PlayerInfoModal playerNumber={playerNumber} visible={modalVisible} setVisible={setModalVisible}></PlayerInfoModal>\r\n      </View>\r\n    )}</Context.Consumer>\r\n  )\r\n}\r\n\r\nfunction PlayerBoxes(playerCount:number, modalVisible: boolean, setModalVisible: React.Dispatch<React.SetStateAction<boolean>>, setPlayer: React.Dispatch<React.SetStateAction<number>>) {\r\n  const heightPercent = ((1 / Math.ceil(playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    [...Array(playerCount)].map((elementInArray, index) => (\r\n      <View key={'player' + index} style={styles(heightPercent).frame}>\r\n        <TouchableOpacity style={styles().button} onPress={() => { setModalVisibility(true, setModalVisible, (index + 1), setPlayer) }}>\r\n          <Text>Player {index + 1}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\nfunction setModalVisibility(bool: boolean, setModalVisible: React.Dispatch<React.SetStateAction<boolean>>, player:number, setPlayer: React.Dispatch<React.SetStateAction<number>>) {\r\n  setModalVisible(bool)\r\n  setPlayer(player)\r\n}\r\n\r\ntype Props = {playerCount: number, modalVisible: boolean, setModalVisible: React.Dispatch<React.SetStateAction<boolean>>, playerNumber:number, setPlayerNumber: React.Dispatch<React.SetStateAction<number>>}\r\n\r\nfunction styles(heightPercent?: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'grey'\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
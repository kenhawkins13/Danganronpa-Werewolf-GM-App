{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\components\\\\ItemCardsModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { modalStyles } from \"../styles/styles\";\nimport { Picker } from '@react-native-picker/picker';\nimport { AppContext } from \"../../App\";\nexport default function ItemCardsModal(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible;\n  var appContext = useContext(AppContext);\n\n  var _useState = useState('none'),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemCard = _useState2[0],\n      setItemCard = _useState2[1];\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: modalStyles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: modalStyles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Select your Item Card\"), React.createElement(Picker, {\n    style: {\n      width: 200\n    },\n    selectedValue: itemCard,\n    onValueChange: function onValueChange(value) {\n      setItemCard(value.toString());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    key: \"Glasses\",\n    label: \"Glasses\",\n    value: \"Glasses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Someone's Graduation Album\",\n    label: \"Someone's Graduation Album\",\n    value: \"Someone's Graduation Album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }), React.createElement(Picker.Item, {\n    key: \"Silent Receiver\",\n    label: \"Silent Receiver\",\n    value: \"Silent Receiver\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      appContext.playersInfo[playerIndex].status = 'ready';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"OK\")), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, modalStyles.button), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      appContext.playersInfo[playerIndex].status = 'notReady';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: modalStyles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))))));\n}\n;","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/components/ItemCardsModal.tsx"],"names":["React","useContext","useState","modalStyles","Picker","AppContext","ItemCardsModal","modalVisible","setModalVisible","appContext","itemCard","setItemCard","centeredView","modalView","width","value","toString","flexDirection","button","backgroundColor","playersInfo","playerIndex","status","textStyle"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Modal, View, Text, TouchableHighlight } from \"react-native\";\r\nimport { modalStyles } from \"../styles/styles\";\r\nimport { Picker } from '@react-native-picker/picker'\r\nimport { AppContext } from \"../../App\";\r\n\r\nexport default function ItemCardsModal({modalVisible, setModalVisible}:Props) {\r\n  const appContext = useContext(AppContext);\r\n  const [itemCard, setItemCard] = useState('none')\r\n  return (\r\n    <View>\r\n      <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\r\n        <View style={modalStyles.centeredView}>\r\n          <View style={modalStyles.modalView}>\r\n            <Text>Select your Item Card</Text>\r\n            <Picker style={{width: 200}} selectedValue={itemCard}\r\n              onValueChange={(value) => {setItemCard(value.toString())}}>\r\n              <Picker.Item key=\"Glasses\" label=\"Glasses\" value=\"Glasses\"/>\r\n              <Picker.Item key=\"Someone's Graduation Album\" label=\"Someone's Graduation Album\" value=\"Someone's Graduation Album\"/>\r\n              <Picker.Item key=\"Silent Receiver\" label=\"Silent Receiver\" value=\"Silent Receiver\"/>\r\n            </Picker>\r\n            <View style={{flexDirection: 'row'}}>\r\n              <TouchableHighlight\r\n                style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }}\r\n                onPress={() => { \r\n                  setModalVisible(!modalVisible)\r\n                  appContext.playersInfo[playerIndex].status = 'ready'\r\n                }}>\r\n                <Text style={modalStyles.textStyle}>OK</Text>\r\n              </TouchableHighlight>\r\n              <TouchableHighlight\r\n                style={{ ...modalStyles.button, backgroundColor: \"#2196F3\" }}\r\n                onPress={() => { \r\n                  setModalVisible(!modalVisible) \r\n                  appContext.playersInfo[playerIndex].status = 'notReady'\r\n                }}>\r\n                <Text style={modalStyles.textStyle}>Cancel</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\ntype Props = {modalVisible:boolean, setModalVisible:React.Dispatch<any>}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\MorningTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport { roleInPlay } from \"../data/Table\";\nexport default function MorningTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sequence = _useState2[0],\n      setSequence = _useState2[1];\n\n  var _useState3 = useState('Good Morning!'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      labelText = _useState4[0],\n      setLabelText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonText = _useState6[0],\n      setButtonText = _useState6[1];\n\n  sequenceAction(sequence, setSequence, navigation, appContext, setLabelText, setButtonText);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Morning Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, labelText)), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      sequenceAction(sequence, setSequence, navigation, appContext, setLabelText, setButtonText);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, buttonText)))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"NightTimePage\",\n    nextPage: \"DayTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction sequenceAction(sequence, setSequence, navigation, appContext, setLabelText, setButtonText) {\n  Speech.stop();\n  Speech.speak(sequence.toString());\n  var speech = '';\n\n  switch (sequence) {\n    case 0:\n      appContext.dayNumber += 1;\n      Speech.speak(goodMorningSpeech(appContext.dayNumber), {\n        onDone: function onDone() {\n          setTimeout(function () {\n            setSequence(sequence + 1);\n          }, 1 * 1000);\n        }\n      });\n\n    case 1:\n      if (appContext.dayNumber === 0) {\n        speech = 'Victim, discard one Item card. This attack cannot be negated or deflected. Click the button below when you are done.';\n        setLabelText('Discard 1 Item card');\n        setButtonText('Done');\n        Speech.speak(speech, {\n          onDone: function onDone() {\n            setTimeout(function () {\n              setSequence(sequence + 2);\n            }, 1 * 1000);\n          }\n        });\n      } else {\n        setSequence(sequence + 1);\n      }\n\n      break;\n\n    case 2:\n      if (roleInPlay(appContext.roleCounts, 'Monomi') && appContext.dayNumber > 0) {\n        speech = 'Did Monomi protect the victim last night?';\n        Speech.speak(speech, {\n          onDone: function onDone() {\n            setTimeout(function () {\n              setSequence(sequence + 1);\n            }, 1 * 1000);\n          }\n        });\n      }\n\n      break;\n\n    case 3:\n      navigation.push('DayTimePage');\n      break;\n  }\n}\n\nfunction goodMorningSpeech(dayNumber) {\n  var days = ['zeroth', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eight', 'ninth', 'I stopped keeping track'];\n  return '\"Good morning, everyone! It is the morning of the ' + days[dayNumber] + ' day. Get ready to greet another beee-yutiful day\"';\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/MorningTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","roleInPlay","MorningTimePage","navigation","appContext","sequence","setSequence","labelText","setLabelText","buttonText","setButtonText","sequenceAction","flex","alignItems","justifyContent","backgroundColor","dayNumber","width","height","stop","speak","toString","speech","goodMorningSpeech","onDone","setTimeout","roleCounts","push","days"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;AAEA,SAASC,UAAT;AACA,OAAOC,aAAP;AACA,SAASC,UAAT;AAGA,eAAe,SAASC,eAAT,GAA2B;AACxC,MAAMC,UAAU,GAAGT,aAAa,EAAhC;AACA,MAAMU,UAAU,GAAGP,UAAU,CAACE,UAAD,CAA7B;;AAFwC,kBAGRD,QAAQ,CAAC,CAAD,CAHA;AAAA;AAAA,MAGjCO,QAHiC;AAAA,MAGvBC,WAHuB;;AAAA,mBAINR,QAAQ,CAAC,eAAD,CAJF;AAAA;AAAA,MAIjCS,SAJiC;AAAA,MAItBC,YAJsB;;AAAA,mBAKJV,QAAQ,CAAC,EAAD,CALJ;AAAA;AAAA,MAKjCW,UALiC;AAAA,MAKrBC,aALqB;;AAMxCC,EAAAA,cAAc,CAACN,QAAD,EAAWC,WAAX,EAAwBH,UAAxB,EAAoCC,UAApC,EAAgDI,YAAhD,EAA8DE,aAA9D,CAAd;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE,QAAjD;AAA2DC,MAAAA,eAAe,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA2BX,UAAU,CAACY,SAAtC,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE,QAAjD;AAA2DC,MAAAA,eAAe,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,SAAP,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAE,CAAR;AAAWG,MAAAA,eAAe,EAAE;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCL,MAAAA,UAAU,EAAE,QAA7C;AAAuDC,MAAAA,cAAc,EAAE;AAAvE,KAA3B;AACE,IAAA,OAAO,EAAE,mBAAM;AAAEH,MAAAA,cAAc,CAACN,QAAD,EAAWC,WAAX,EAAwBH,UAAxB,EAAoCC,UAApC,EAAgDI,YAAhD,EAA8DE,aAA9D,CAAd;AAA4F,KAD/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,UAAP,CAFF,CADF,CAJF,CAJF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAC,eAA5B;AAA4C,IAAA,QAAQ,EAAC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,CADF;AAqBD;;AAED,SAASD,cAAT,CAAwBN,QAAxB,EAAyCC,WAAzC,EAA0EH,UAA1E,EAA0FC,UAA1F,EAAqHI,YAArH,EAAuJE,aAAvJ,EAA0L;AAIxLf,EAAAA,MAAM,CAACwB,IAAP;AACAxB,EAAAA,MAAM,CAACyB,KAAP,CAAaf,QAAQ,CAACgB,QAAT,EAAb;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,UAAQjB,QAAR;AACE,SAAK,CAAL;AACED,MAAAA,UAAU,CAACY,SAAX,IAAwB,CAAxB;AACArB,MAAAA,MAAM,CAACyB,KAAP,CAAaG,iBAAiB,CAACnB,UAAU,CAACY,SAAZ,CAA9B,EAAsD;AAACQ,QAAAA,MAAM,EAAE,kBAAM;AAACC,UAAAA,UAAU,CAAC,YAAM;AAAEnB,YAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AAA2B,WAApC,EAAsC,IAAI,IAA1C,CAAV;AAA0D;AAA1E,OAAtD;;AACF,SAAK,CAAL;AACE,UAAID,UAAU,CAACY,SAAX,KAAyB,CAA7B,EAAgC;AAC9BM,QAAAA,MAAM,GAAG,sHAAT;AACAd,QAAAA,YAAY,CAAC,qBAAD,CAAZ;AACAE,QAAAA,aAAa,CAAC,MAAD,CAAb;AACAf,QAAAA,MAAM,CAACyB,KAAP,CAAaE,MAAb,EAAqB;AAACE,UAAAA,MAAM,EAAE,kBAAM;AAACC,YAAAA,UAAU,CAAC,YAAM;AACpDnB,cAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,aAF8C,EAE5C,IAAI,IAFwC,CAAV;AAExB;AAFQ,SAArB;AAGD,OAPD,MAOO;AACLC,QAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD;;AACD;;AACF,SAAK,CAAL;AACE,UAAIJ,UAAU,CAACG,UAAU,CAACsB,UAAZ,EAAwB,QAAxB,CAAV,IAA+CtB,UAAU,CAACY,SAAX,GAAuB,CAA1E,EAA6E;AAC3EM,QAAAA,MAAM,GAAG,2CAAT;AACA3B,QAAAA,MAAM,CAACyB,KAAP,CAAaE,MAAb,EAAqB;AAACE,UAAAA,MAAM,EAAE,kBAAM;AAACC,YAAAA,UAAU,CAAC,YAAM;AAAEnB,cAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AAA2B,aAApC,EAAsC,IAAI,IAA1C,CAAV;AAA0D;AAA1E,SAArB;AACD;;AACD;;AACF,SAAK,CAAL;AACEF,MAAAA,UAAU,CAACwB,IAAX,CAAgB,aAAhB;AACA;AAxBJ;AA0BD;;AAED,SAASJ,iBAAT,CAA2BP,SAA3B,EAA6C;AAC3C,MAAMY,IAAI,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,EAAiD,OAAjD,EAA0D,OAA1D,EAAmE,SAAnE,EAA8E,OAA9E,EAAuF,OAAvF,EAAgG,yBAAhG,CAAb;AACA,SAAO,uDAAuDA,IAAI,CAACZ,SAAD,CAA3D,GAAyE,oDAAhF;AACD","sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight } from 'react-native'\r\nimport { AppContext } from '../../App';\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport { roleInPlay } from '../data/Table';\r\nimport { AppContextType } from '../types/types';\r\n\r\nexport default function MorningTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  const [sequence, setSequence] = useState(0)\r\n  const [labelText, setLabelText] = useState('Good Morning!')\r\n  const [buttonText, setButtonText] = useState('')\r\n  sequenceAction(sequence, setSequence, navigation, appContext, setLabelText, setButtonText)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'grey' }}>\r\n        <Text>Morning Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{labelText}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { sequenceAction(sequence, setSequence, navigation, appContext, setLabelText, setButtonText) }}>\r\n            <Text>{buttonText}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='NightTimePage' nextPage='DayTimePage'></NavigationBar>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sequenceAction(sequence:number, setSequence:React.Dispatch<any>, navigation:any, appContext:AppContextType, setLabelText:React.Dispatch<any>, setButtonText:React.Dispatch<any>) {\r\n  // reveal if player has a special role \r\n  // allow Mikan to investigate dead player's role\r\n  // allow player to play Vice\r\n  Speech.stop()\r\n  Speech.speak(sequence.toString())\r\n  let speech = ''\r\n  switch (sequence) {\r\n    case 0:\r\n      appContext.dayNumber += 1\r\n      Speech.speak(goodMorningSpeech(appContext.dayNumber), {onDone: () => {setTimeout(() => { setSequence(sequence + 1) }, 1 * 1000)}})\r\n    case 1:\r\n      if (appContext.dayNumber === 0) {\r\n        speech = 'Victim, discard one Item card. This attack cannot be negated or deflected. Click the button below when you are done.'\r\n        setLabelText('Discard 1 Item card')\r\n        setButtonText('Done')\r\n        Speech.speak(speech, {onDone: () => {setTimeout(() => { \r\n          setSequence(sequence + 2) \r\n        }, 1 * 1000)}})\r\n      } else {\r\n        setSequence(sequence + 1)\r\n      }\r\n      break\r\n    case 2:\r\n      if (roleInPlay(appContext.roleCounts, 'Monomi') && appContext.dayNumber > 0) {\r\n        speech = 'Did Monomi protect the victim last night?'\r\n        Speech.speak(speech, {onDone: () => {setTimeout(() => { setSequence(sequence + 1) }, 1 * 1000)}})\r\n      }\r\n      break\r\n    case 3:\r\n      navigation.push('DayTimePage')\r\n      break\r\n  }\r\n}\r\n\r\nfunction goodMorningSpeech(dayNumber:number) {\r\n  const days = ['zeroth', 'first', 'second', 'third', 'fourth', 'fifth', 'sixth', 'seventh', 'eight', 'ninth', 'I stopped keeping track']\r\n  return '\"Good morning, everyone! It is the morning of the ' + days[dayNumber] + ' day. Get ready to greet another beee-yutiful day\"'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
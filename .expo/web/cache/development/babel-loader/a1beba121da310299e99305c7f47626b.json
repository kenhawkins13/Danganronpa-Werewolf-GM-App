{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\screens\\\\NightTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayersPage from \"../components/PlayersPage\";\nimport { nightTimeButtonTexts, nightTimeLabelTexts, speechSchoolAnnouncement2, speechSchoolAnnouncement1, speechToBlackenedSleep, speechToMonomi, speechToTraitorsAwake, speechToTraitorsSleep, speechToEveryoneSleep, speechToBlackenedAwake1, speechToBlackenedAwake2 } from \"../data/NightTimeDialogue\";\nimport { roleInPlay } from \"../data/Table\";\nvar modalType = '';\nvar playerIndex = 0;\nvar abilityOrItem = '';\nexport default function NightTimeScreen() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n  appContext.playersInfo.forEach(function (playerInfo) {\n    playerInfo.colorScheme = 'white';\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sequence = _useState2[0],\n      setSequence = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  sequenceAction(sequence, setSequence, modalVisible, setModalVisible, appContext, navigation);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Night Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, nightTimeLabelTexts(appContext.dayNumber, sequence))), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      setSequence(sequence + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, nightTimeButtonTexts(appContext.dayNumber, sequence))))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"ItemsPage\",\n    nextPage: \"MorningTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), React.createElement(Modal, {\n    visible: modalVisible,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(PlayersPage, {\n    modal: modalType,\n    abilityOrItem: abilityOrItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#0066ff'\n    },\n    onPress: function onPress() {\n      setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Continue\")))));\n}\n\nfunction sequenceAction(sequence, setSequence, modalVisible, setModalVisible, appContext, navigation) {\n  Speech.stop();\n  Speech.speak(sequence.toString());\n\n  switch (sequence) {\n    case 1:\n      var speech = speechSchoolAnnouncement1;\n      var goToSequence = 5;\n\n      if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\n        speech = speechSchoolAnnouncement2;\n        goToSequence = 2;\n      }\n\n      Speech.speak(speech, {\n        onDone: function onDone() {\n          setTimeout(function () {\n            setSequence(goToSequence);\n          }, 1 * 1000);\n        }\n      });\n      break;\n\n    case 2:\n      if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\n        modalType = 'nightTimeAbilitiesItems';\n\n        if (modalVisible === false) {\n          setModalVisible(true);\n        }\n      }\n\n      setSequence(sequence + 1);\n      break;\n\n    case 3:\n      if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\n        if (modalVisible === false) {\n          Speech.speak(speechToEveryoneSleep, {\n            onDone: function onDone() {\n              setTimeout(function () {\n                setSequence(sequence + 1);\n              }, 1 * 1000);\n            }\n          });\n        }\n      } else {\n        setSequence(sequence + 1);\n      }\n\n      break;\n\n    case 4:\n      modalType = 'revealRole';\n\n      if (modalVisible === false) {\n        abilitiesAndItemsSpeech(appContext, setModalVisible, sequence, setSequence);\n      }\n\n      break;\n\n    case 5:\n      if (roleInPlay(appContext.roleCounts, 'Traitor') && appContext.dayNumber === 0) {\n        appContext.playersInfo.forEach(function (playerInfo) {\n          if (playerInfo.role === 'Blackened') {\n            playerInfo.colorScheme = 'black';\n          } else if (playerInfo.role === 'Traitor') {\n            playerInfo.colorScheme = 'grey';\n          }\n        });\n\n        if (modalVisible === false) {\n          setModalVisible(true);\n        }\n\n        Speech.speak(speechToTraitorsAwake, {\n          onDone: function onDone() {\n            setTimeout(function () {\n              Speech.speak(speechToTraitorsSleep, {\n                onDone: function onDone() {\n                  setTimeout(function () {\n                    setSequence(sequence + 1);\n                  }, 2 * 1000);\n                }\n              });\n            }, 5 * 1000);\n          }\n        });\n        break;\n      } else {\n        setSequence(sequence + 1);\n      }\n\n    case 6:\n      if (roleInPlay(appContext.roleCounts, 'Monomi') && appContext.dayNumber > 0) {\n        if (modalVisible === false) {\n          setModalVisible(true);\n        } else {\n          Speech.speak(speechToMonomi, {\n            onDone: function onDone() {\n              setTimeout(function () {\n                setSequence(sequence + 1);\n              }, 2 * 1000);\n            }\n          });\n        }\n      } else {\n        setSequence(sequence + 2);\n      }\n\n      break;\n\n    case 7:\n      if (modalVisible === false) {\n        setSequence(sequence + 1);\n      }\n\n      break;\n\n    case 8:\n      if (modalVisible === true) {\n        setModalVisible(false);\n      } else {\n        speech = appContext.dayNumber == 0 ? speechToBlackenedAwake1 : speechToBlackenedAwake2;\n        Speech.speak(speech);\n      }\n\n      break;\n\n    case 9:\n      Speech.speak(speechToBlackenedSleep, {\n        onDone: function onDone() {\n          setTimeout(function () {\n            navigation.push('MorningTimePage');\n          }, 2 * 1000);\n        }\n      });\n      break;\n  }\n}\n\nfunction abilitiesAndItemsSpeech(appContext, setModalVisible, sequence, setSequence) {\n  var speech = '';\n\n  if (playerIndex !== 0) {\n    speech = appContext.playersInfo[playerIndex - 1].name + ', go to sleep.';\n\n    if (playerIndex === appContext.playerCount) {\n      Speech.speak(speech, {\n        onDone: function onDone() {\n          setTimeout(function () {\n            setSequence(sequence + 1);\n          }, 2 * 1000);\n        }\n      });\n      return;\n    }\n\n    Speech.speak(speech);\n  }\n\n  for (var i = playerIndex; i <= appContext.playerCount; i++) {\n    if (appContext.playersInfo[i].useItem !== '') {\n      playerIndex = i;\n      break;\n    }\n  }\n\n  if (appContext.playersInfo[playerIndex].useAbility === \"Yasuhiro Hagakure's ability\") {\n    var role = appContext.playerCount < 7 ? 'the despair disease patient' : 'monomi';\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are ' + role + ' or not ' + role;\n  }\n\n  if (appContext.playersInfo[playerIndex].useItem === 'Glasses') {\n    abilityOrItem = 'Glasses';\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are on the side of hope or despair.';\n  } else if (appContext.playersInfo[playerIndex].useItem === \"Someone's Graduation Album\") {\n    abilityOrItem = \"Someone's Graduation Album\";\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a traitor or not a traitor.';\n  } else if (appContext.playersInfo[playerIndex].useItem === 'Silent Receiver') {\n    abilityOrItem = 'Silent Receiver';\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a spotless or not a spotless.';\n  }\n\n  appContext.playersInfo[playerIndex].useAbility = '';\n  appContext.playersInfo[playerIndex].useItem = '';\n  playerIndex += 1;\n  Speech.speak(speech, {\n    onDone: function onDone() {\n      return setModalVisible(true);\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/screens/NightTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","PlayersPage","nightTimeButtonTexts","nightTimeLabelTexts","speechSchoolAnnouncement2","speechSchoolAnnouncement1","speechToBlackenedSleep","speechToMonomi","speechToTraitorsAwake","speechToTraitorsSleep","speechToEveryoneSleep","speechToBlackenedAwake1","speechToBlackenedAwake2","roleInPlay","modalType","playerIndex","abilityOrItem","NightTimeScreen","navigation","appContext","playersInfo","forEach","playerInfo","colorScheme","sequence","setSequence","modalVisible","setModalVisible","sequenceAction","flex","alignItems","justifyContent","backgroundColor","dayNumber","flexDirection","width","height","stop","speak","toString","speech","goToSequence","mode","onDone","setTimeout","abilitiesAndItemsSpeech","roleCounts","role","push","name","playerCount","i","useItem","useAbility"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight, Modal } from 'react-native'\r\nimport { AppContext } from '../../App'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayersPage from '../components/PlayersPage'\r\nimport { nightTimeButtonTexts, nightTimeLabelTexts, speechSchoolAnnouncement2, speechSchoolAnnouncement1, speechToBlackenedSleep, speechToMonomi, speechToTraitorsAwake, speechToTraitorsSleep, speechToEveryoneSleep, speechToBlackenedAwake1, speechToBlackenedAwake2 } from '../data/NightTimeDialogue'\r\nimport { roleInPlay } from '../data/Table'\r\nimport { AppContextType } from '../types/types'\r\n\r\n// let modalVisible:boolean = false\r\nlet modalType:string = ''\r\nlet playerIndex = 0\r\nlet abilityOrItem = ''\r\n\r\nexport default function NightTimeScreen() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  appContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n  const [sequence, setSequence] = useState(0)\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  sequenceAction(sequence, setSequence, modalVisible, setModalVisible, appContext, navigation)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'lightblue' }}>\r\n        <Text>Night Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{nightTimeLabelTexts(appContext.dayNumber, sequence)}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { setSequence(sequence + 1) }}>\r\n            <Text>{nightTimeButtonTexts(appContext.dayNumber, sequence)}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='ItemsPage' nextPage='MorningTimePage'></NavigationBar>\r\n      </View>\r\n      <Modal visible={modalVisible} style={{ flex: 1 }}>\r\n        <View style={{ flex: 9 }}>\r\n          <PlayersPage modal={modalType} abilityOrItem={abilityOrItem}></PlayersPage>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <TouchableHighlight style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#0066ff' }} \r\n            onPress={() => { setModalVisible(false) }}>\r\n            <Text>Continue</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sequenceAction(sequence:number, setSequence:React.Dispatch<any>, modalVisible:boolean, setModalVisible:React.Dispatch<any>, appContext:AppContextType, navigation:any) {\r\n  Speech.stop()\r\n  Speech.speak(sequence.toString())\r\n  switch (sequence) {\r\n    case 1: // School announcement\r\n      let speech = speechSchoolAnnouncement1\r\n      let goToSequence = 5\r\n      if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\r\n        speech = speechSchoolAnnouncement2\r\n        goToSequence = 2\r\n      }\r\n      Speech.speak(speech, {onDone: () => { setTimeout(() => { setSequence(goToSequence) }, 1 * 1000) }})\r\n      break\r\n    case 2: // Declare abilities and items\r\n      if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\r\n        modalType = 'nightTimeAbilitiesItems'\r\n        if (modalVisible === false) { setModalVisible(true) }\r\n      }\r\n      setSequence(sequence + 1)\r\n      break\r\n    case 3: // Wait until modal is closed then move on\r\n      if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\r\n        if (modalVisible === false) { \r\n          Speech.speak(speechToEveryoneSleep, {onDone: () => { setTimeout(() => { setSequence(sequence + 1) }, 1 * 1000) }})\r\n        }\r\n      } else {\r\n        setSequence(sequence + 1)\r\n      }\r\n      break\r\n    case 4: // Wake each person for abilities and items\r\n    modalType = 'revealRole'\r\n      if (modalVisible === false) {\r\n        abilitiesAndItemsSpeech(appContext, setModalVisible, sequence, setSequence)\r\n      }\r\n      break\r\n    case 5: // Traitors wake up\r\n      if (roleInPlay(appContext.roleCounts, 'Traitor') && appContext.dayNumber === 0) {\r\n        appContext.playersInfo.forEach(playerInfo => {\r\n          if (playerInfo.role === 'Blackened') { playerInfo.colorScheme = 'black' }\r\n          else if (playerInfo.role === 'Traitor') { playerInfo.colorScheme = 'grey' }\r\n        })\r\n        if (modalVisible === false) { setModalVisible(true) }\r\n        Speech.speak(speechToTraitorsAwake, {onDone: () => {\r\n          setTimeout(() => {\r\n            Speech.speak(speechToTraitorsSleep, {onDone: () => {\r\n              setTimeout(() => { setSequence(sequence + 1) }, 2 * 1000) \r\n            }})\r\n          }, 5 * 1000) \r\n        }})\r\n        break\r\n      } else {\r\n        setSequence(sequence + 1)\r\n      }\r\n    case 6: // Monomi protect\r\n      if (roleInPlay(appContext.roleCounts, 'Monomi') && appContext.dayNumber > 0) { // TODO: check if Monomi is still alive\r\n        if (modalVisible === false) { setModalVisible(true) }\r\n        else { Speech.speak(speechToMonomi, {onDone: () => { setTimeout(() => { setSequence(sequence + 1) }, 2 * 1000)}}) }\r\n      } else {\r\n        setSequence(sequence + 2)\r\n      }\r\n      break\r\n    case 7: // Wait until modal is closed then move on   TODO: maybe Monomi isn't in the group\r\n      if (modalVisible === false) {\r\n        setSequence(sequence + 1)\r\n      }\r\n      break\r\n    case 8: // Blackened attack\r\n      if (modalVisible === true) { setModalVisible(false) }\r\n      else { \r\n        speech = appContext.dayNumber == 0 ? speechToBlackenedAwake1 : speechToBlackenedAwake2\r\n        Speech.speak(speech) }\r\n      break\r\n    case 9: // Navigate to morning\r\n      Speech.speak(speechToBlackenedSleep, {onDone: () => { setTimeout(() => { navigation.push('MorningTimePage') }, 2 * 1000) }})\r\n      break\r\n  }\r\n}\r\n\r\nfunction abilitiesAndItemsSpeech(appContext:AppContextType, setModalVisible:React.Dispatch<any>, sequence:number, setSequence:React.Dispatch<any>) {\r\n  let speech = ''\r\n  if (playerIndex !== 0) {\r\n    speech = appContext.playersInfo[playerIndex - 1].name + ', go to sleep.'\r\n    if (playerIndex === appContext.playerCount) {\r\n      Speech.speak(speech, {onDone: () => { setTimeout(() => { setSequence(sequence + 1) }, 2 * 1000)}})\r\n      return\r\n    }\r\n    Speech.speak(speech)\r\n  }\r\n  for (let i = playerIndex; i <= appContext.playerCount; i++) {\r\n    if (appContext.playersInfo[i].useItem !== '') {\r\n      playerIndex = i\r\n      break\r\n    }\r\n  }\r\n  if (appContext.playersInfo[playerIndex].useAbility === \"Yasuhiro Hagakure's ability\") {\r\n    const role = appContext.playerCount < 7 ? 'the despair disease patient' : 'monomi'\r\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are ' + role + ' or not ' + role\r\n  }\r\n  if (appContext.playersInfo[playerIndex].useItem === 'Glasses') {\r\n    abilityOrItem = 'Glasses'\r\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are on the side of hope or despair.'\r\n  } else if (appContext.playersInfo[playerIndex].useItem === \"Someone's Graduation Album\") {\r\n    abilityOrItem = \"Someone's Graduation Album\"\r\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a traitor or not a traitor.'\r\n  } else if (appContext.playersInfo[playerIndex].useItem === 'Silent Receiver') {\r\n    abilityOrItem = 'Silent Receiver'\r\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a spotless or not a spotless.'\r\n  }\r\n  appContext.playersInfo[playerIndex].useAbility = ''\r\n  appContext.playersInfo[playerIndex].useItem = ''\r\n  playerIndex += 1\r\n  Speech.speak(speech, {onDone: () => setModalVisible(true)})\r\n}"]},"metadata":{},"sourceType":"module"}
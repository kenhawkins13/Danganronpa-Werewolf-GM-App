{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\NightTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayersScreen from \"../components/PlayersScreen\";\nimport { nightTimeButtonTexts, nightTimeLabelTexts, nightTimeSpeeches } from \"../data/NightTimeDialogue\";\nvar modalVisible = false;\nvar modalType = '';\nexport default function NightTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  sequence(step, setStep, appContext, navigation);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Night Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, nightTimeLabelTexts(appContext.dayNumber, step))), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      setStep(step + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, nightTimeButtonTexts(appContext.dayNumber, step))))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"ItemsPage\",\n    nextPage: \"MorningTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), React.createElement(Modal, {\n    visible: modalVisible,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(PlayersScreen, {\n    modal: modalType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#0066ff'\n    },\n    onPress: function onPress() {\n      setStep(step + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"OK\")))));\n}\n\nfunction sequence(step, setStep, appContext, navigation) {\n  Speech.stop();\n\n  var callback = function callback() {};\n\n  var waitTime = 1000;\n\n  switch (step) {\n    case 1:\n      callback = function callback() {\n        setTimeout(function () {\n          setStep(step + 1);\n        }, 2 * 1000);\n      };\n\n      break;\n\n    case 2:\n      appContext.playersInfo.forEach(function (playerInfo) {\n        if (playerInfo.role === 'Blackened') {\n          playerInfo.colorScheme = 'black';\n        } else if (playerInfo.role === 'Traitor') {\n          playerInfo.colorScheme = 'grey';\n        } else {\n          playerInfo.colorScheme = 'white';\n        }\n      });\n      modalVisible = true;\n\n      callback = function callback() {\n        setTimeout(function () {\n          setStep(step + 1);\n        }, 5 * 1000);\n      };\n\n      break;\n\n    case 3:\n      modalVisible = false;\n\n      callback = function callback() {\n        setTimeout(function () {\n          setStep(step + 1);\n        }, 2 * 1000);\n      };\n\n      break;\n  }\n\n  Speech.speak(nightTimeSpeeches(appContext.dayNumber, step), {\n    onDone: callback\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/NightTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","PlayersScreen","nightTimeButtonTexts","nightTimeLabelTexts","nightTimeSpeeches","modalVisible","modalType","NightTimePage","navigation","appContext","step","setStep","sequence","flex","alignItems","justifyContent","backgroundColor","dayNumber","width","height","stop","callback","waitTime","setTimeout","playersInfo","forEach","playerInfo","role","colorScheme","speak","onDone"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight, Modal } from 'react-native'\r\nimport { call } from 'react-native-reanimated'\r\nimport { AppContext } from '../../App'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayersScreen from '../components/PlayersScreen'\r\nimport { nightTimeButtonTexts, nightTimeLabelTexts, nightTimeSpeeches } from '../data/NightTimeDialogue'\r\nimport { AppContextType } from '../types/types'\r\n\r\nlet modalVisible:boolean = false\r\nlet modalType:string = ''\r\n\r\nexport default function NightTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  const [step, setStep] = useState(0)\r\n  sequence(step, setStep, appContext, navigation)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'lightblue' }}>\r\n        <Text>Night Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{nightTimeLabelTexts(appContext.dayNumber, step)}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { setStep(step + 1) }}>\r\n            <Text>{nightTimeButtonTexts(appContext.dayNumber, step)}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='ItemsPage' nextPage='MorningTimePage'></NavigationBar>\r\n      </View>\r\n      <Modal visible={modalVisible} style={{ flex: 1 }}>\r\n        <View style={{ flex: 9 }}>\r\n          <PlayersScreen modal={modalType}></PlayersScreen>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <TouchableHighlight style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#0066ff' }} \r\n            onPress={() => { setStep(step + 1) }}>\r\n            <Text>OK</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sequence(step:number, setStep: React.Dispatch<any>, appContext:AppContextType, navigation:any) {\r\n  Speech.stop()\r\n  let callback = () => {}\r\n  let waitTime = 1000\r\n  // if (appContext.dayNumber === 0) {\r\n    switch (step) {\r\n      case 1:\r\n        callback = () => { setTimeout(() => { setStep(step + 1) }, 2 * 1000) }\r\n        break\r\n      case 2:\r\n        appContext.playersInfo.forEach(playerInfo => {\r\n          if (playerInfo.role === 'Blackened') {\r\n            playerInfo.colorScheme = 'black'\r\n          } else if (playerInfo.role === 'Traitor') {\r\n            playerInfo.colorScheme = 'grey'\r\n          } else {\r\n            playerInfo.colorScheme = 'white'\r\n          }\r\n        })\r\n        modalVisible = true\r\n        callback = () => { setTimeout(() => { setStep(step + 1) }, 5 * 1000) }\r\n        break\r\n      case 3:\r\n        modalVisible = false\r\n        callback = () => { setTimeout(() => { setStep(step + 1) }, 2 * 1000) }\r\n        break\r\n      // case 4:\r\n      //   modalVisible = false\r\n      //   break\r\n      // case 5:\r\n      //   waitTime = 2 * 1000\r\n      //   break\r\n      // case 8:\r\n      //   navigation.push('MorningTimePage')\r\n      //   return\r\n    }\r\n  // } else if (appContext.dayNumber === 1) {\r\n  //   switch (step) {\r\n  //     case 1:\r\n  //       Speech.speak(nightTimeSpeeches(appContext.dayNumber, step))\r\n  //       break\r\n  //     case 2:\r\n  //       modalType = 'itemCards'\r\n  //       appContext.playersInfo.forEach(playerInfo => {\r\n  //         playerInfo.colorScheme = 'white'\r\n  //       })\r\n  //       modalVisible = true\r\n  //       break\r\n  //     case 3:\r\n  //       modalVisible = false\r\n  //       break\r\n  //     case 4:\r\n  //       modalVisible = true\r\n  //       break\r\n  //     case 5:\r\n  //       modalVisible = false\r\n  //       break\r\n  //     case 6:\r\n  //       navigation.push('MorningTimePage')\r\n  //   }\r\n  // }\r\n  // Say the speech, wait for waitTime, then re-render screen by setting the state \"step\"\r\n  Speech.speak(nightTimeSpeeches(appContext.dayNumber, step), {onDone: callback})\r\n}\r\n\r\n// async function setStepAsync(step:number, setStep:React.Dispatch<any>): Promise<void> {\r\n//   return new Promise(() => { setTimeout(() => { setStep(step + 1) }, (5 * 1000))})\r\n// }\r\n// async function setStepAsync2(): Promise<void> {\r\n//   return new Promise(() => { setTimeout(() => { }, (2 * 1000))})\r\n// }\r\n// async function waitForSpeech() {\r\n//   if ( await Speech.isSpeakingAsync() === true ) {\r\n//     setTimeout( waitForSpeech(), 1000 )\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}
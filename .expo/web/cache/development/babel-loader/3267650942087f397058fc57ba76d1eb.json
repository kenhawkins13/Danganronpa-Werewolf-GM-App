{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\screens\\\\Items.tsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Context } from \"../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nexport default function ItemsPage() {\n  var _this = this;\n\n  return React.createElement(Context.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, function (context) {\n    return React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 9\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#cc0066'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, getText(context.mode))), React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 100,\n        height: 140\n      },\n      source: {\n        uri: require(\"../assets/Item Cards/Alter Ball.png\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }), React.createElement(Image, {\n      style: {\n        width: 100,\n        height: 140\n      },\n      source: {\n        uri: require(\"../assets/Item Cards/Item Card.jpg\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    })))), React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, React.createElement(NavigationBar, {\n      Previous: \"PlayersPage\",\n      Next: \"NightTimePage\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  });\n}\n\nfunction getText(mode) {\n  if (mode === 'extreme') {\n    return \"\\nRandomly distribute two Item Cards to each player. Each player has the option to return both Item Cards and draw two new Item Cards. You cannot redraw just one Item Card. \\n \\n\\nYou cannot hold more than two cards during the game. If you ever obtain more than two cards, discard down to two cards first before continuing.\\n    \";\n  } else {\n    return \"\\nSince you selected Normal Mode, please skip this section as you will not use Item Cards\\n    \";\n  }\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/screens/Items.tsx"],"names":["React","Context","NavigationBar","ItemsPage","context","flex","alignItems","justifyContent","backgroundColor","getText","mode","flexDirection","width","height","uri","require"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,OAAT;AACA,OAAOC,aAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,SACE,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB,UAACC,OAAD;AAAA,WACjB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,UAAU,EAAE,QAAvB;AAAiCC,QAAAA,cAAc,EAAE,QAAjD;AAA2DC,QAAAA,eAAe,EAAE;AAA5E,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,CAACL,OAAO,CAACM,IAAT,CADV,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEL,QAAAA,IAAI,EAAE,CAAR;AAAWM,QAAAA,aAAa,EAAE,KAA1B;AAAiCL,QAAAA,UAAU,EAAE,QAA7C;AAAuDC,QAAAA,cAAc,EAAE,QAAvE;AAAiFC,QAAAA,eAAe,EAAE;AAAlG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADT;AAEE,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEC,OAAO;AAAd,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE;AAAEH,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OADT;AAEE,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAEC,OAAO;AAAd,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CANF,CADF,CADF,EAoBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEV,QAAAA,IAAI,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAC,aAAxB;AAAsC,MAAA,IAAI,EAAC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApBF,CADiB;AAAA,GAAnB,CADF;AA4BD;;AAED,SAASI,OAAT,CAAiBC,IAAjB,EAA8B;AAC5B,MAAIA,IAAI,KAAK,SAAb,EAAwB;AACtB;AAOD,GARD,MAQO;AACL;AAGD;AACF","sourcesContent":["import React from 'react'\r\nimport { View, Text, Image } from 'react-native'\r\nimport { Context } from '../App'\r\nimport NavigationBar from '../components/NavigationBar'\r\n\r\nexport default function ItemsPage() {\r\n  return (\r\n    <Context.Consumer>{(context) => (\r\n      <View style={{ flex: 1 }}>\r\n        <View style={{ flex: 9 }}>\r\n          <View style={{ flex: 1 }}>\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n              <Text>\r\n                {getText(context.mode)}\r\n              </Text>\r\n            </View>\r\n            <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', backgroundColor: 'white' }}>\r\n              <Image\r\n                style={{ width: 100, height: 140 }}\r\n                source={{ uri: require('../assets/Item Cards/Alter Ball.png') }}\r\n              />\r\n              <Image\r\n                style={{ width: 100, height: 140 }}\r\n                source={{ uri: require('../assets/Item Cards/Item Card.jpg') }}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <NavigationBar Previous='PlayersPage' Next='NightTimePage'></NavigationBar>\r\n        </View>\r\n      </View>\r\n    )}</Context.Consumer>\r\n  )\r\n}\r\n\r\nfunction getText(mode:string) {\r\n  if (mode === 'extreme') {\r\n    return `\r\nRandomly distribute two Item Cards to each player. Each player has the \\\r\noption to return both Item Cards and draw two new Item Cards. You cannot redraw just one Item Card. \\\r\n\\n \\n\r\nYou cannot hold more than two cards during the game. If you ever obtain more than two cards, discard \\\r\ndown to two cards first before continuing.\r\n    `\r\n  } else {\r\n    return `\r\nSince you selected Normal Mode, please skip this section as you will not use Item Cards\r\n    `\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\components\\\\PlayersComponent.tsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nexport default function PlayersComponent(_ref) {\n  var playerCount = _ref.playerCount;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var heightPercent = (1 / Math.ceil(playerCount / 2) * 100).toString() + '%';\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, playerBoxes(playerCount, heightPercent)), React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction playerBoxes(playerCount, heightPercent) {\n  var _this = this;\n\n  return _toConsumableArray(Array(playerCount)).map(function (elementInArray, index) {\n    return React.createElement(View, {\n      style: styles(heightPercent).frame,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles().button,\n      onPress: function onPress() {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Player \", index + 1)));\n  });\n}\n\nfunction buttonText(index) {\n  return \"Player \" + (index + 1).toString();\n}\n\nvar players = [];\n\nfunction createPlayer(index) {\n  var player = \"Player \" + index.toString();\n  players.push({\n    player: player,\n    role: \"Alter Ego\"\n  });\n}\n\nfunction styles(heightPercent) {\n  return StyleSheet.create({\n    frame: {\n      width: '50%',\n      height: heightPercent,\n      borderColor: 'black',\n      borderWidth: 5,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'grey'\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/components/PlayersComponent.tsx"],"names":["React","useState","PlayersComponent","playerCount","modalVisible","setModalVisible","heightPercent","Math","ceil","toString","height","width","flexDirection","flexWrap","playerBoxes","styles","centeredView","Alert","alert","Array","map","elementInArray","index","frame","button","buttonText","players","createPlayer","player","push","role","StyleSheet","create","borderColor","borderWidth","alignItems","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, Modal } from \"react-native\";\r\n\r\nexport default function PlayersComponent({playerCount}:Props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const heightPercent = ((1 / Math.ceil(playerCount / 2)) * 100).toString() + '%'\r\n  return (\r\n    <View>\r\n      <View style={{height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap'}}>\r\n        {playerBoxes(playerCount, heightPercent)}\r\n      </View>\r\n      <View style={styles.centeredView}>\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n          }}\r\n        >\r\n        </Modal>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction playerBoxes(playerCount:number, heightPercent:string) {\r\n  return (\r\n    [...Array(playerCount)].map((elementInArray, index) => (\r\n      <View style={styles(heightPercent).frame}>\r\n        <TouchableOpacity style={styles().button} onPress={() => {}}>\r\n          <Text>Player {index + 1}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    ))\r\n  )\r\n}\r\n\r\nfunction buttonText(index:number) {\r\n  return \"Player \" + (index + 1).toString()\r\n}\r\n\r\ntype Props = {playerCount: number}\r\nlet players = []\r\n\r\nfunction createPlayer(index:number) {\r\n  const player = \"Player \" + index.toString()\r\n  players.push({player:player, role:\"Alter Ego\"})\r\n}\r\n\r\nfunction styles(heightPercent?: string) {\r\n  return StyleSheet.create({\r\n    frame: {\r\n      width: '50%',\r\n      height: heightPercent,\r\n      borderColor: 'black',\r\n      borderWidth: 5,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    },\r\n    button: {\r\n      width: '100%',\r\n      height: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'grey'\r\n    }\r\n  });\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
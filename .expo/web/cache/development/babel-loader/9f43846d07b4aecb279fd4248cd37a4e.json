{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\components\\\\PlayerInfoModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Picker } from '@react-native-picker/picker';\nimport { calculateRoles } from \"../data/Table\";\nexport default function PlayerInfoModal(_ref) {\n  var playerIndex = _ref.playerIndex,\n      playerRole = _ref.playerRole,\n      setPlayerRole = _ref.setPlayerRole,\n      visible = _ref.visible,\n      setVisible = _ref.setVisible;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Hello World!\"), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, \"Hide Modal\"))))), React.createElement(TouchableHighlight, {\n    style: styles.openButton,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Show Modal\")));\n}\n;\n\nfunction getPickerItems(mode, playerCount) {\n  var _this = this;\n\n  var roles = calculateRoles(mode, playerCount);\n  var pickerItems = [];\n  roles.forEach(function (role) {\n    if (role.count != 0) {\n      pickerItems.push(React.createElement(Picker.Item, {\n        key: role.role[0],\n        label: role.role[0],\n        value: role.role[0],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }\n      }));\n    }\n  });\n  return pickerItems;\n}\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  button: {\n    backgroundColor: '#F194FF',\n    borderRadius: 20,\n    padding: 10,\n    marginHorizontal: 5,\n    elevation: 2\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    textAlign: 'center'\n  },\n  modalTextInput: {\n    borderBottomWidth: 1,\n    padding: 5,\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/components/PlayerInfoModal.tsx"],"names":["React","useState","Picker","calculateRoles","PlayerInfoModal","playerIndex","playerRole","setPlayerRole","visible","setVisible","modalVisible","setModalVisible","styles","centeredView","Alert","alert","modalView","modalText","openButton","backgroundColor","textStyle","getPickerItems","mode","playerCount","roles","pickerItems","forEach","role","count","push","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","marginHorizontal","color","fontWeight","textAlign","modalTextInput","borderBottomWidth","marginBottom"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport { Modal, TouchableHighlight, View, Text,StyleSheet } from \"react-native\"\r\nimport { Picker } from '@react-native-picker/picker'\r\nimport { Context } from \"../App\"\r\nimport { calculateRoles } from \"../data/Table\"\r\nimport { TextInput } from \"react-native-gesture-handler\"\r\n\r\nexport default function PlayerInfoModal({playerIndex, playerRole, setPlayerRole, visible, setVisible}:Props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  return (\r\n    <View style={styles.centeredView}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Hello World!</Text>\r\n\r\n            <TouchableHighlight\r\n              style={{ ...styles.openButton, backgroundColor: \"#2196F3\" }}\r\n              onPress={() => {\r\n                setModalVisible(!modalVisible);\r\n              }}\r\n            >\r\n              <Text style={styles.textStyle}>Hide Modal</Text>\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <TouchableHighlight\r\n        style={styles.openButton}\r\n        onPress={() => {\r\n          setModalVisible(true);\r\n        }}\r\n      >\r\n        <Text style={styles.textStyle}>Show Modal</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n};\r\n\r\nfunction getPickerItems(mode:string, playerCount:number) {\r\n  const roles = calculateRoles(mode, playerCount)\r\n  const pickerItems:JSX.Element[] = []\r\n  roles.forEach(role  => {\r\n    if (role.count != 0) {\r\n      pickerItems.push(<Picker.Item key={role.role[0]} label={role.role[0]} value={role.role[0]}/>)\r\n    }\r\n  });\r\n  return pickerItems\r\n}\r\n\r\ntype Props = {playerIndex: number, playerRole:string, setPlayerRole: React.Dispatch<any>, visible: boolean, setVisible: React.Dispatch<any>}\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 22\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    backgroundColor: '#F194FF',\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    marginHorizontal: 5,\r\n    elevation: 2\r\n  },\r\n  textStyle: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center'\r\n  },\r\n    modalText: {\r\n    textAlign: 'center'\r\n  },\r\n  modalTextInput: {\r\n    borderBottomWidth: 1,\r\n    padding: 5,\r\n    marginBottom: 15,\r\n    textAlign: 'center'\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}
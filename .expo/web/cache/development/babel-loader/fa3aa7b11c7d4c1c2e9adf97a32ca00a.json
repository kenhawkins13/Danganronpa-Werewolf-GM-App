{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\screens\\\\Players.tsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PlayersComponent from \"../components/PlayersComponent\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayerInfoModal from \"../components/PlayerInfoModal\";\nimport { Context } from \"../../App\";\nimport { calculateRoles } from \"../data/Table\";\nimport AlertModal from \"../components/AlertModal\";\nexport default function PlayersPage() {\n  var context = useContext(Context);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerInfoModalVisible = _useState2[0],\n      setPlayerInfoModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alertModalVisible = _useState4[0],\n      setAlertModalVisible = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playerIndex = _useState6[0],\n      setPlayerIndex = _useState6[1];\n\n  var _useState7 = useState(context.playersInfo[playerIndex].role),\n      _useState8 = _slicedToArray(_useState7, 2),\n      playerRole = _useState8[0],\n      setPlayerRole = _useState8[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, PlayersComponent({\n    setModalVisible: setPlayerInfoModalVisible,\n    setPlayerIndex: setPlayerIndex,\n    setPlayerRole: setPlayerRole\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, React.createElement(PlayerInfoModal, {\n    playerIndex: playerIndex,\n    playerRole: playerRole,\n    setPlayerRole: setPlayerRole,\n    visible: playerInfoModalVisible,\n    setVisible: setPlayerInfoModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"RolesPage\",\n    nextPage: \"ItemsPage\",\n    callback: function callback() {\n      return confirmPlayerRoles(context, setAlertModalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), alertModal({\n    modalVisible: alertModalVisible,\n    setModalVisible: setAlertModalVisible\n  }), React.createElement(AlertModal, {\n    modalVisible: alertModalVisible,\n    setModalVisible: setAlertModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction confirmPlayerRoles(context, setAlertModalVisible) {\n  var neededRoles = calculateRoles(context.mode, context.playerCount);\n  var countRoles = [];\n  neededRoles.forEach(function (rolesNeeded) {\n    countRoles.push({\n      roles: rolesNeeded.roles,\n      count: 0\n    });\n  });\n  context.playersInfo.forEach(function (playerInfo) {\n    var roleEntered = countRoles.find(function (array) {\n      return JSON.stringify(array.roles) === JSON.stringify([playerInfo.role]);\n    });\n\n    if (roleEntered) {\n      var _neededRoles$find;\n\n      var neededCount = (_neededRoles$find = neededRoles.find(function (array) {\n        return JSON.stringify(array.roles) === JSON.stringify([playerInfo.role]);\n      })) == null ? void 0 : _neededRoles$find.count;\n\n      if (roleEntered.count == neededCount && countRoles[countRoles.length - 1].roles.includes(playerInfo.role)) {\n        countRoles[countRoles.length - 1].count += 1;\n      } else {\n        roleEntered.count += 1;\n      }\n    } else {\n      setAlertModalVisible(true);\n      return false;\n    }\n  });\n\n  if (JSON.stringify(countRoles) === JSON.stringify(neededRoles)) {\n    return true;\n  } else {\n    setAlertModalVisible(true);\n    return false;\n  }\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/screens/Players.tsx"],"names":["React","useContext","useState","PlayersComponent","NavigationBar","PlayerInfoModal","Context","calculateRoles","AlertModal","PlayersPage","context","playerInfoModalVisible","setPlayerInfoModalVisible","alertModalVisible","setAlertModalVisible","playerIndex","setPlayerIndex","playersInfo","role","playerRole","setPlayerRole","flex","height","width","flexDirection","flexWrap","setModalVisible","confirmPlayerRoles","alertModal","modalVisible","neededRoles","mode","playerCount","countRoles","forEach","rolesNeeded","push","roles","count","playerInfo","roleEntered","find","array","JSON","stringify","neededCount","length","includes"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View } from 'react-native'\r\nimport PlayersComponent from '../components/PlayersComponent'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayerInfoModal from '../components/PlayerInfoModal'\r\nimport { Context } from '../../App'\r\nimport { ContextType, RoleCount } from '../types/types'\r\nimport { calculateRoles } from '../data/Table'\r\nimport AlertModal from '../components/AlertModal'\r\n\r\nexport default function PlayersPage() {\r\n  const context = useContext(Context);\r\n  const [playerInfoModalVisible, setPlayerInfoModalVisible] = useState(false)\r\n  const [alertModalVisible, setAlertModalVisible] = useState(false);\r\n  const [playerIndex, setPlayerIndex] = useState(0)\r\n  const [playerRole, setPlayerRole] = useState(context.playersInfo[playerIndex].role)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n          {PlayersComponent({setModalVisible: setPlayerInfoModalVisible, setPlayerIndex, setPlayerRole})}\r\n        </View>\r\n        <View>\r\n          <PlayerInfoModal playerIndex={playerIndex} playerRole={playerRole} setPlayerRole={setPlayerRole} visible={playerInfoModalVisible} setVisible={setPlayerInfoModalVisible}/>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='RolesPage' nextPage='ItemsPage' callback={function() {return confirmPlayerRoles(context, setAlertModalVisible)}}></NavigationBar>\r\n      </View>\r\n        {alertModal({modalVisible: alertModalVisible, setModalVisible: setAlertModalVisible})}\r\n        <AlertModal modalVisible={alertModalVisible} setModalVisible={setAlertModalVisible}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction confirmPlayerRoles(context: ContextType, setAlertModalVisible:React.Dispatch<any>) {\r\n  const neededRoles:RoleCount[] = calculateRoles(context.mode, context.playerCount)\r\n  const countRoles:RoleCount[] = []\r\n  neededRoles.forEach(rolesNeeded => {\r\n    countRoles.push({roles: rolesNeeded.roles, count:0})\r\n  });\r\n  context.playersInfo.forEach(playerInfo => {\r\n    const roleEntered = countRoles.find((array) => {return JSON.stringify(array.roles) === JSON.stringify([playerInfo.role])})\r\n    if (roleEntered) {\r\n      const neededCount = neededRoles.find((array) => {return JSON.stringify(array.roles) === JSON.stringify([playerInfo.role])})?.count\r\n      // if said role has its needed count, then +1 into the randomRoles if it makes sense to\r\n      if (roleEntered.count == neededCount && countRoles[countRoles.length - 1].roles.includes(playerInfo.role)) {\r\n        countRoles[countRoles.length - 1].count += 1\r\n      } else {\r\n        roleEntered.count += 1\r\n      }\r\n    } else {\r\n      // TODO: it should never go here, throw exception\r\n      setAlertModalVisible(true)\r\n      return false\r\n    }\r\n  });\r\n  if (JSON.stringify(countRoles) === JSON.stringify(neededRoles)) {\r\n    return true\r\n  } else {\r\n    setAlertModalVisible(true)\r\n    return false\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
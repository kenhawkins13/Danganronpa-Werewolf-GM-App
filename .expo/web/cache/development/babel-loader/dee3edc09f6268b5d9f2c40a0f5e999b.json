{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\screens\\\\Players.tsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PlayersComponent from \"../components/PlayersComponent\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayerInfoModal from \"../components/PlayerInfoModal\";\nimport { AppContext } from \"../../App\";\nimport AlertModal from \"../components/AlertModal\";\nexport default function PlayersPage() {\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerInfoModalVisible = _useState2[0],\n      setPlayerInfoModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alertModalVisible = _useState4[0],\n      setAlertModalVisible = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      playerIndex = _useState6[0],\n      setPlayerIndex = _useState6[1];\n\n  var _useState7 = useState(appContext.playersInfo[playerIndex].role),\n      _useState8 = _slicedToArray(_useState7, 2),\n      playerRole = _useState8[0],\n      setPlayerRole = _useState8[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9,\n      height: '100%',\n      width: '100%',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, PlayersComponent({\n    setModalVisible: setPlayerInfoModalVisible,\n    setPlayerIndex: setPlayerIndex,\n    setPlayerRole: setPlayerRole\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"RolesPage\",\n    nextPage: \"ItemsPage\",\n    callback: function callback() {\n      return confirmPlayerRoles(appContext, setAlertModalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), React.createElement(PlayerInfoModal, {\n    playerIndex: playerIndex,\n    playerRole: playerRole,\n    setPlayerRole: setPlayerRole,\n    visible: playerInfoModalVisible,\n    setVisible: setPlayerInfoModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), React.createElement(AlertModal, {\n    modalVisible: alertModalVisible,\n    setModalVisible: setAlertModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction confirmPlayerRoles(appContext, setAlertModalVisible) {\n  var countPlayerRoles = [];\n  var randomRoles = [];\n  appContext.neededRoles.forEach(function (neededRole) {\n    countPlayerRoles.push({\n      roles: neededRole.roles,\n      count: 0\n    });\n  });\n\n  if (appContext.mode === 'extreme') {\n    var lastArrayItem = countPlayerRoles.pop();\n    lastArrayItem.roles.forEach(function (role) {\n      randomRoles.push({\n        roles: [role],\n        count: 0\n      });\n    });\n  }\n\n  appContext.playersInfo.forEach(function (playerInfo) {\n    var _appContext$neededRol;\n\n    var countRole = countPlayerRoles.find(function (countRole) {\n      return JSON.stringify(countRole.roles) === JSON.stringify([playerInfo.role]);\n    });\n    var neededCount = (_appContext$neededRol = appContext.neededRoles.find(function (neededRole) {\n      return JSON.stringify(neededRole.roles) === JSON.stringify([playerInfo.role]);\n    })) == null ? void 0 : _appContext$neededRol.count;\n\n    if (countRole.count == neededCount && appContext.mode === 'extreme') {\n      randomRoles.find(function (randomRole) {\n        return JSON.stringify(randomRole.roles) === JSON.stringify(countRole.roles);\n      }).count += 1;\n    } else {\n      countRole.count += 1;\n    }\n  });\n  var randomRolez = [];\n  var countRandomRoles = 0;\n\n  for (var i = 0; i < randomRoles.length; i++) {\n    if (randomRoles[i].count > 1) {\n      setAlertModalVisible(true);\n      return false;\n    }\n\n    randomRolez.push(randomRoles[i].roles[0]);\n    countRandomRoles += randomRoles[i].count;\n  }\n\n  countPlayerRoles.push({\n    roles: randomRolez,\n    count: countRandomRoles\n  });\n\n  if (JSON.stringify(countPlayerRoles) === JSON.stringify(appContext.neededRoles)) {\n    return true;\n  } else {\n    setAlertModalVisible(true);\n    return false;\n  }\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/screens/Players.tsx"],"names":["React","useContext","useState","PlayersComponent","NavigationBar","PlayerInfoModal","AppContext","AlertModal","PlayersPage","appContext","playerInfoModalVisible","setPlayerInfoModalVisible","alertModalVisible","setAlertModalVisible","playerIndex","setPlayerIndex","playersInfo","role","playerRole","setPlayerRole","flex","height","width","flexDirection","flexWrap","setModalVisible","confirmPlayerRoles","countPlayerRoles","randomRoles","neededRoles","forEach","neededRole","push","roles","count","mode","lastArrayItem","pop","playerInfo","countRole","find","JSON","stringify","neededCount","randomRole","randomRolez","countRandomRoles","i","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAEA,OAAOC,gBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,eAAP;AACA,SAASC,UAAT;AAGA,OAAOC,UAAP;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,MAAMC,UAAU,GAAGR,UAAU,CAACK,UAAD,CAA7B;;AADoC,kBAEwBJ,QAAQ,CAAC,KAAD,CAFhC;AAAA;AAAA,MAE7BQ,sBAF6B;AAAA,MAELC,yBAFK;;AAAA,mBAGcT,QAAQ,CAAC,KAAD,CAHtB;AAAA;AAAA,MAG7BU,iBAH6B;AAAA,MAGVC,oBAHU;;AAAA,mBAIEX,QAAQ,CAAC,CAAD,CAJV;AAAA;AAAA,MAI7BY,WAJ6B;AAAA,MAIhBC,cAJgB;;AAAA,mBAKAb,QAAQ,CAACO,UAAU,CAACO,WAAX,CAAuBF,WAAvB,EAAoCG,IAArC,CALR;AAAA;AAAA,MAK7BC,UAL6B;AAAA,MAKjBC,aALiB;;AAMpC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE,MAAnB;AAA2BC,MAAAA,KAAK,EAAE,MAAlC;AAA0CC,MAAAA,aAAa,EAAE,QAAzD;AAAmEC,MAAAA,QAAQ,EAAE;AAA7E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,gBAAgB,CAAC;AAACsB,IAAAA,eAAe,EAAEd,yBAAlB;AAA6CI,IAAAA,cAAc,EAAdA,cAA7C;AAA6DI,IAAAA,aAAa,EAAbA;AAA7D,GAAD,CADnB,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAC,WAA5B;AAAwC,IAAA,QAAQ,EAAC,WAAjD;AAA6D,IAAA,QAAQ,EAAE,oBAAW;AAAC,aAAOM,kBAAkB,CAACjB,UAAD,EAAaI,oBAAb,CAAzB;AAA4D,KAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEC,WAA9B;AAA2C,IAAA,UAAU,EAAEI,UAAvD;AAAmE,IAAA,aAAa,EAAEC,aAAlF;AAAiG,IAAA,OAAO,EAAET,sBAA1G;AAAkI,IAAA,UAAU,EAAEC,yBAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,UAAD;AAAY,IAAA,YAAY,EAAEC,iBAA1B;AAA6C,IAAA,eAAe,EAAEC,oBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD;;AAED,SAASa,kBAAT,CAA4BjB,UAA5B,EAAwDI,oBAAxD,EAAkG;AAChG,MAAMc,gBAA4B,GAAG,EAArC;AACA,MAAIC,WAAuB,GAAG,EAA9B;AACAnB,EAAAA,UAAU,CAACoB,WAAX,CAAuBC,OAAvB,CAA+B,UAAAC,UAAU,EAAI;AAC3CJ,IAAAA,gBAAgB,CAACK,IAAjB,CAAsB;AAACC,MAAAA,KAAK,EAAEF,UAAU,CAACE,KAAnB;AAA0BC,MAAAA,KAAK,EAAC;AAAhC,KAAtB;AACD,GAFD;;AAGA,MAAIzB,UAAU,CAAC0B,IAAX,KAAoB,SAAxB,EAAmC;AAEjC,QAAMC,aAAa,GAAGT,gBAAgB,CAACU,GAAjB,EAAtB;AACAD,IAAAA,aAAa,CAACH,KAAd,CAAoBH,OAApB,CAA4B,UAAAb,IAAI,EAAI;AAClCW,MAAAA,WAAW,CAACI,IAAZ,CAAiB;AAACC,QAAAA,KAAK,EAAE,CAAChB,IAAD,CAAR;AAAgBiB,QAAAA,KAAK,EAAE;AAAvB,OAAjB;AACD,KAFD;AAGD;;AACDzB,EAAAA,UAAU,CAACO,WAAX,CAAuBc,OAAvB,CAA+B,UAAAQ,UAAU,EAAI;AAAA;;AAC3C,QAAMC,SAAS,GAAGZ,gBAAgB,CAACa,IAAjB,CAAsB,UAACD,SAAD,EAAe;AAAC,aAAOE,IAAI,CAACC,SAAL,CAAeH,SAAS,CAACN,KAAzB,MAAoCQ,IAAI,CAACC,SAAL,CAAe,CAACJ,UAAU,CAACrB,IAAZ,CAAf,CAA3C;AAA6E,KAAnH,CAAlB;AACA,QAAM0B,WAAW,4BAAGlC,UAAU,CAACoB,WAAX,CAAuBW,IAAvB,CAA4B,UAACT,UAAD,EAAgB;AAAC,aAAOU,IAAI,CAACC,SAAL,CAAeX,UAAU,CAACE,KAA1B,MAAqCQ,IAAI,CAACC,SAAL,CAAe,CAACJ,UAAU,CAACrB,IAAZ,CAAf,CAA5C;AAA8E,KAA3H,CAAH,qBAAG,sBAA8HiB,KAAlJ;;AAEA,QAAIK,SAAS,CAACL,KAAV,IAAmBS,WAAnB,IAAkClC,UAAU,CAAC0B,IAAX,KAAoB,SAA1D,EAAqE;AACnEP,MAAAA,WAAW,CAACY,IAAZ,CAAiB,UAACI,UAAD,EAAgB;AAAC,eAAOH,IAAI,CAACC,SAAL,CAAeE,UAAU,CAACX,KAA1B,MAAqCQ,IAAI,CAACC,SAAL,CAAeH,SAAS,CAACN,KAAzB,CAA5C;AAA4E,OAA9G,EAAiHC,KAAjH,IAA0H,CAA1H;AACD,KAFD,MAEO;AACLK,MAAAA,SAAS,CAACL,KAAV,IAAmB,CAAnB;AACD;AACF,GATD;AAUA,MAAIW,WAAoB,GAAG,EAA3B;AACA,MAAIC,gBAAuB,GAAG,CAA9B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,WAAW,CAACoB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,QAAInB,WAAW,CAACmB,CAAD,CAAX,CAAeb,KAAf,GAAuB,CAA3B,EAA8B;AAC5BrB,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA,aAAO,KAAP;AACD;;AACDgC,IAAAA,WAAW,CAACb,IAAZ,CAAiBJ,WAAW,CAACmB,CAAD,CAAX,CAAed,KAAf,CAAqB,CAArB,CAAjB;AACAa,IAAAA,gBAAgB,IAAIlB,WAAW,CAACmB,CAAD,CAAX,CAAeb,KAAnC;AACD;;AACDP,EAAAA,gBAAgB,CAACK,IAAjB,CAAsB;AAACC,IAAAA,KAAK,EAAEY,WAAR;AAAqBX,IAAAA,KAAK,EAAEY;AAA5B,GAAtB;;AACA,MAAIL,IAAI,CAACC,SAAL,CAAef,gBAAf,MAAqCc,IAAI,CAACC,SAAL,CAAejC,UAAU,CAACoB,WAA1B,CAAzC,EAAiF;AAC/E,WAAO,IAAP;AACD,GAFD,MAEO;AACLhB,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA,WAAO,KAAP;AACD;AACF","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { View } from 'react-native'\r\nimport PlayersComponent from '../components/PlayersComponent'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayerInfoModal from '../components/PlayerInfoModal'\r\nimport { AppContext } from '../../App'\r\nimport { AppContextType, RoleCount } from '../types/types'\r\nimport { calculateRoles } from '../data/Table'\r\nimport AlertModal from '../components/AlertModal'\r\n\r\nexport default function PlayersPage() {\r\n  const appContext = useContext(AppContext);\r\n  const [playerInfoModalVisible, setPlayerInfoModalVisible] = useState(false)\r\n  const [alertModalVisible, setAlertModalVisible] = useState(false);\r\n  const [playerIndex, setPlayerIndex] = useState(0)\r\n  const [playerRole, setPlayerRole] = useState(appContext.playersInfo[playerIndex].role)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 9, height: '100%', width: '100%', flexDirection: 'column', flexWrap: 'wrap' }}>\r\n        {PlayersComponent({setModalVisible: setPlayerInfoModalVisible, setPlayerIndex, setPlayerRole})}\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='RolesPage' nextPage='ItemsPage' callback={function() {return confirmPlayerRoles(appContext, setAlertModalVisible)}}></NavigationBar>\r\n      </View>\r\n      <PlayerInfoModal playerIndex={playerIndex} playerRole={playerRole} setPlayerRole={setPlayerRole} visible={playerInfoModalVisible} setVisible={setPlayerInfoModalVisible}/>\r\n      <AlertModal modalVisible={alertModalVisible} setModalVisible={setAlertModalVisible}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction confirmPlayerRoles(appContext: AppContextType, setAlertModalVisible:React.Dispatch<any>) {\r\n  const countPlayerRoles:RoleCount[] = []\r\n  let randomRoles:RoleCount[] = []\r\n  appContext.neededRoles.forEach(neededRole => {\r\n    countPlayerRoles.push({roles: neededRole.roles, count:0})\r\n  });\r\n  if (appContext.mode === 'extreme') {\r\n    // Take the randomRoles (last array item in countRoles) and break into individual RoleCounts to keep track of each role count\r\n    const lastArrayItem = countPlayerRoles.pop()!\r\n    lastArrayItem.roles.forEach(role => {\r\n      randomRoles.push({roles: [role], count: 0})\r\n    });\r\n  }\r\n  appContext.playersInfo.forEach(playerInfo => {\r\n    const countRole = countPlayerRoles.find((countRole) => {return JSON.stringify(countRole.roles) === JSON.stringify([playerInfo.role])})!\r\n    const neededCount = appContext.neededRoles.find((neededRole) => {return JSON.stringify(neededRole.roles) === JSON.stringify([playerInfo.role])})?.count\r\n    // If said role met its needed count, then +1 into one of the randomRoles\r\n    if (countRole.count == neededCount && appContext.mode === 'extreme') {\r\n      randomRoles.find((randomRole) => {return JSON.stringify(randomRole.roles) === JSON.stringify(countRole.roles)})!.count += 1\r\n    } else {\r\n      countRole.count += 1\r\n    }\r\n  });\r\n  let randomRolez:string[] = []\r\n  let countRandomRoles:number = 0\r\n  // no role in randomRoles should have a count higher than 1\r\n  for (let i = 0; i < randomRoles.length; i++) {\r\n    if (randomRoles[i].count > 1) {\r\n      setAlertModalVisible(true)\r\n      return false      \r\n    }\r\n    randomRolez.push(randomRoles[i].roles[0])\r\n    countRandomRoles += randomRoles[i].count\r\n  }\r\n  countPlayerRoles.push({roles: randomRolez, count: countRandomRoles})\r\n  if (JSON.stringify(countPlayerRoles) === JSON.stringify(appContext.neededRoles)) {\r\n    return true\r\n  } else {\r\n    setAlertModalVisible(true)\r\n    return false\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
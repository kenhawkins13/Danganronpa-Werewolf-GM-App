{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\DayTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { AppContext } from \"../../App\";\nimport CountdownTimer from \"../components/CountdownTimer\";\nimport NavigationBar from \"../components/NavigationBar\";\nexport default function DayTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      step = _useState2[0],\n      setStep = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timerVisible = _useState4[0],\n      setTimerVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      buttonVisible = _useState6[0],\n      setButtonVisible = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      timerKey = _useState8[0],\n      setTimerKey = _useState8[1];\n\n  if (step === 0) {\n    Speech.speak(speeches[0], {\n      onDone: function onDone() {\n        setTimeout(function () {\n          sequence(step, setStep, navigation, setTimerVisible, setButtonVisible);\n        }, 2 * 1000);\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'yellow'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Day Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, labelTexts[step]), ShowTimer(timerKey, timerVisible, function () {\n    setButtonVisible(true);\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      backgroundColor: 'white',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, ShowButton(buttonVisible, setButtonVisible, timerKey, setTimerKey), React.createElement(TouchableHighlight, {\n    style: {\n      width: buttonVisible == true ? '50%' : '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      sequence(step, setStep, navigation, setTimerVisible, setButtonVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, buttonTexts[step])))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"MorningTimePage\",\n    nextPage: \"NightTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction sequence(step, setStep, navigation, setTimerVisible, setButtonVisible) {\n  Speech.stop();\n  step += 1;\n  Speech.speak(speeches[step]);\n\n  switch (step) {\n    case 2:\n      setTimerVisible(true);\n      break;\n\n    case 3:\n      navigation.push('NightTimePage');\n      break;\n  }\n\n  setStep(step);\n}\n\nfunction ShowTimer(timerKey, timerVisible, _callback) {\n  if (timerVisible === true) {\n    return React.createElement(View, {\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(CountdownTimer, {\n      timerKey: timerKey.toString(),\n      duration: 10,\n      callback: function callback() {\n        Speech.speak('Time is up.');\n\n        if (_callback) {\n          _callback();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(React.Fragment, null);\n  }\n}\n\nfunction ShowButton(buttonVisible, setButtonVisible, timerKey, setTimerKey) {\n  if (buttonVisible === true) {\n    return React.createElement(TouchableHighlight, {\n      style: {\n        width: '50%',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      onPress: function onPress() {\n        setButtonVisible(false);\n        setTimerKey(timerKey + 1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Add 3 minutes\"));\n  } else {\n    return React.createElement(React.Fragment, null);\n  }\n}\n\nvar labelText1 = '';\nvar labelText2 = 'Item or Ability?';\nvar labelText3 = '';\nvar labelTexts = [labelText1, labelText2, labelText3];\nvar speech1 = '\"Mm, ahem, this is a school announcement. It is now the day time. Please make your way to the briefing room.\"';\nvar speech2 = 'Would anybody like to use a day time ability or item? Please declare so now. After everyone who wanted to has declared \\\r\ntheir ability or item, click the button below.';\nvar speech3 = 'Discuss anything you would like, starting now';\nvar speeches = [speech1, speech2, speech3];\nvar buttonText1 = '';\nvar buttonText2 = 'Continue';\nvar buttonText3 = 'End Discussion';\nvar buttonTexts = [buttonText1, buttonText2, buttonText3];","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/DayTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","CountdownTimer","NavigationBar","DayTimePage","navigation","appContext","step","setStep","timerVisible","setTimerVisible","buttonVisible","setButtonVisible","timerKey","setTimerKey","speak","speeches","onDone","setTimeout","sequence","flex","alignItems","justifyContent","backgroundColor","dayNumber","labelTexts","ShowTimer","flexDirection","ShowButton","width","height","buttonTexts","stop","push","callback","toString","labelText1","labelText2","labelText3","speech1","speech2","speech3","buttonText1","buttonText2","buttonText3"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight } from 'react-native'\r\nimport { AppContext } from '../../App';\r\nimport CountdownTimer from '../components/CountdownTimer'\r\nimport NavigationBar from '../components/NavigationBar'\r\n\r\nexport default function DayTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  const [step, setStep] = useState(0)\r\n  const [timerVisible, setTimerVisible] = useState(false)\r\n  const [buttonVisible, setButtonVisible] = useState(false)\r\n  const [timerKey, setTimerKey] = useState(0)\r\n  if (step === 0) {\r\n    Speech.speak(speeches[0], {onDone: () => {\r\n      setTimeout(() => {sequence(step, setStep, navigation, setTimerVisible, setButtonVisible)}, 2 * 1000)\r\n    }})\r\n  }\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'yellow' }}>\r\n        <Text>Day Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{labelTexts[step]}</Text>\r\n          {ShowTimer(timerKey, timerVisible, () => {setButtonVisible(true)})}\r\n        </View>\r\n        <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white', alignItems: 'center' }}>\r\n          {ShowButton(buttonVisible, setButtonVisible, timerKey, setTimerKey)}\r\n          <TouchableHighlight style={{ width: buttonVisible == true ? '50%' : '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { sequence(step, setStep, navigation, setTimerVisible, setButtonVisible)}}>\r\n            <Text>{buttonTexts[step]}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='MorningTimePage' nextPage='NightTimePage'></NavigationBar>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction sequence(step:number, setStep:React.Dispatch<any>, navigation:any, setTimerVisible:React.Dispatch<any>, setButtonVisible:React.Dispatch<any>) {\r\n  Speech.stop()\r\n  step += 1\r\n  Speech.speak(speeches[step])\r\n  switch (step) {\r\n    case 2:\r\n      setTimerVisible(true)\r\n      break\r\n    case 3:\r\n      navigation.push('NightTimePage')\r\n      break\r\n  }\r\n  setStep(step)\r\n}\r\n\r\nfunction ShowTimer(timerKey:number, timerVisible:boolean, callback?:() => void) {\r\n  if (timerVisible === true) {\r\n    return (\r\n      <View style={{alignItems: 'center', justifyContent: 'center'}}>\r\n        <CountdownTimer timerKey={timerKey.toString()} duration={10} callback={() => {\r\n          Speech.speak('Time is up.')\r\n          if (callback) { callback() }\r\n          }}></CountdownTimer>\r\n      </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n}\r\n\r\nfunction ShowButton(buttonVisible:boolean, setButtonVisible:React.Dispatch<any>, timerKey:number, setTimerKey:React.Dispatch<any>) {\r\n  if (buttonVisible === true) {\r\n    return (\r\n      <TouchableHighlight style={{ width: '50%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n        onPress={() => { \r\n          setButtonVisible(false)\r\n          setTimerKey(timerKey + 1)\r\n        }}>\r\n        <Text>Add 3 minutes</Text>\r\n      </TouchableHighlight>\r\n    )\r\n  } else {\r\n    return (\r\n      <></>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst labelText1 = ''\r\nconst labelText2 = 'Item or Ability?'\r\nconst labelText3 = ''\r\nconst labelTexts = [labelText1, labelText2, labelText3]\r\n\r\nconst speech1 = '\"Mm, ahem, this is a school announcement. It is now the day time. Please make your way to the briefing room.\"'\r\nconst speech2 = 'Would anybody like to use a day time ability or item? Please declare so now. After everyone who wanted to has declared \\\r\ntheir ability or item, click the button below.'\r\nconst speech3 = 'Discuss anything you would like, starting now'\r\nconst speeches = [speech1, speech2, speech3]\r\n\r\nconst buttonText1 = ''\r\nconst buttonText2 = 'Continue' \r\nconst buttonText3 = 'End Discussion'\r\nconst buttonTexts = [buttonText1, buttonText2, buttonText3]"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kenha\\\\source\\\\repos\\\\Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App\\\\app\\\\pages\\\\NightTime.tsx\";\nimport { useNavigation } from '@react-navigation/native';\nimport * as Speech from 'expo-speech';\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { AppContext } from \"../../App\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport PlayersScreen from \"../components/PlayersScreen\";\nimport { nightTimeButtonTexts, nightTimeLabelTexts, speechSchoolAnnouncement2, speechSchoolAnnouncement1, speechToBlackenedAwake, speechToBlackenedSleep, speechToMonomi, speechToTraitorsAwake, speechToTraitorsSleep, speechToEveryoneSleep } from \"../data/NightTimeDialogue\";\nvar modalType = '';\nvar playerIndex = 0;\nexport default function NightTimePage() {\n  var navigation = useNavigation();\n  var appContext = useContext(AppContext);\n  appContext.dayNumber = 0;\n  appContext.playersInfo.forEach(function (playerInfo) {\n    playerInfo.colorScheme = 'white';\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sequence = _useState2[0],\n      setSequence = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  sequenceAction(sequence, setSequence, modalVisible, setModalVisible, appContext, navigation);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Night Time of Day \", appContext.dayNumber)), React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#cc0066'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, nightTimeLabelTexts(appContext.dayNumber, sequence))), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      setSequence(sequence + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, nightTimeButtonTexts(appContext.dayNumber, sequence))))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationBar, {\n    previousPage: \"ItemsPage\",\n    nextPage: \"MorningTimePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(Modal, {\n    visible: modalVisible,\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 9\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(PlayersScreen, {\n    modal: modalType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#0066ff'\n    },\n    onPress: function onPress() {\n      setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Continue\")))));\n}\n\nfunction sequenceAction(sequence, setSequence, modalVisible, setModalVisible, appContext, navigation) {\n  var speech, goToSequence;\n  return _regeneratorRuntime.async(function sequenceAction$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          Speech.stop();\n          Speech.speak(sequence.toString());\n          _context.t0 = sequence;\n          _context.next = _context.t0 === 1 ? 5 : _context.t0 === 2 ? 10 : _context.t0 === 3 ? 14 : _context.t0 === 4 ? 16 : _context.t0 === 5 ? 18 : _context.t0 === 6 ? 22 : _context.t0 === 7 ? 24 : _context.t0 === 8 ? 26 : _context.t0 === 9 ? 29 : 31;\n          break;\n\n        case 5:\n          speech = speechSchoolAnnouncement1;\n          goToSequence = 5;\n\n          if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\n            speech = speechSchoolAnnouncement2;\n            goToSequence = 2;\n          }\n\n          Speech.speak(speech, {\n            onDone: function onDone() {\n              setTimeout(function () {\n                setSequence(goToSequence);\n              }, 1 * 1000);\n            }\n          });\n          return _context.abrupt(\"break\", 31);\n\n        case 10:\n          modalType = 'itemCards';\n\n          if (modalVisible === false) {\n            setModalVisible(true);\n          }\n\n          setSequence(sequence + 1);\n          return _context.abrupt(\"break\", 31);\n\n        case 14:\n          if (modalVisible === false) {\n            Speech.speak(speechToEveryoneSleep, {\n              onDone: function onDone() {\n                setTimeout(function () {\n                  setSequence(sequence + 1);\n                }, 1 * 1000);\n              }\n            });\n          }\n\n          return _context.abrupt(\"break\", 31);\n\n        case 16:\n          if (modalVisible === false) {\n            asdf(appContext, setModalVisible, sequence, setSequence);\n          }\n\n          return _context.abrupt(\"break\", 31);\n\n        case 18:\n          appContext.playersInfo.forEach(function (playerInfo) {\n            if (playerInfo.role === 'Blackened') {\n              playerInfo.colorScheme = 'black';\n            } else if (playerInfo.role === 'Traitor') {\n              playerInfo.colorScheme = 'grey';\n            }\n          });\n\n          if (modalVisible === false) {\n            setModalVisible(true);\n          }\n\n          Speech.speak(speechToTraitorsAwake, {\n            onDone: function onDone() {\n              setTimeout(function () {\n                Speech.speak(speechToTraitorsSleep, {\n                  onDone: function onDone() {\n                    setTimeout(function () {\n                      setSequence(sequence + 1);\n                    }, 2 * 1000);\n                  }\n                });\n              }, 5 * 1000);\n            }\n          });\n          return _context.abrupt(\"break\", 31);\n\n        case 22:\n          if (appContext.mode === 'extreme' && appContext.playerCount > 6 && appContext.dayNumber > 0) {\n            if (modalVisible === false) {\n              setModalVisible(true);\n            }\n\n            Speech.speak(speechToMonomi, {\n              onDone: function onDone() {\n                setTimeout(function () {\n                  setSequence(sequence + 1);\n                }, 2 * 1000);\n              }\n            });\n          } else {\n            setSequence(sequence + 2);\n          }\n\n          return _context.abrupt(\"break\", 31);\n\n        case 24:\n          if (modalVisible === false) {\n            setSequence(sequence + 1);\n          }\n\n          return _context.abrupt(\"break\", 31);\n\n        case 26:\n          if (modalVisible === true) {\n            setModalVisible(false);\n          }\n\n          Speech.speak(speechToBlackenedAwake);\n          return _context.abrupt(\"break\", 31);\n\n        case 29:\n          Speech.speak(speechToBlackenedSleep, {\n            onDone: function onDone() {\n              setTimeout(function () {\n                navigation.push('MorningTimePage');\n              }, 2 * 1000);\n            }\n          });\n          return _context.abrupt(\"break\", 31);\n\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction asdf(appContext, setModalVisible, sequence, setSequence) {\n  var speech = '';\n\n  for (var i = playerIndex; i <= appContext.playerCount; i++) {\n    if (i === appContext.playerCount) {\n      setSequence(sequence + 1);\n      return;\n    }\n\n    if (appContext.playersInfo[i].useItem !== '') {\n      playerIndex = i;\n      break;\n    }\n  }\n\n  if (appContext.playersInfo[playerIndex].useItem === 'Glasses') {\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are on the side of hope or despair.';\n  } else if (appContext.playersInfo[playerIndex].useItem === \"Someone's Graduation Album\") {\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a traitor or not a traitor.';\n  } else if (appContext.playersInfo[playerIndex].useItem === \"Silent Receiver\") {\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a spotless or not a spotless.';\n  }\n\n  Speech.speak(speech, {\n    onDone: function onDone() {\n      return setModalVisible(true);\n    }\n  });\n  playerIndex += 1;\n}","map":{"version":3,"sources":["C:/Users/kenha/source/repos/Danganronpa-Chou-Koukou-Kyuu-No-Jinrou-App/app/pages/NightTime.tsx"],"names":["useNavigation","Speech","React","useContext","useState","AppContext","NavigationBar","PlayersScreen","nightTimeButtonTexts","nightTimeLabelTexts","speechSchoolAnnouncement2","speechSchoolAnnouncement1","speechToBlackenedAwake","speechToBlackenedSleep","speechToMonomi","speechToTraitorsAwake","speechToTraitorsSleep","speechToEveryoneSleep","modalType","playerIndex","NightTimePage","navigation","appContext","dayNumber","playersInfo","forEach","playerInfo","colorScheme","sequence","setSequence","modalVisible","setModalVisible","sequenceAction","flex","alignItems","justifyContent","backgroundColor","flexDirection","width","height","stop","speak","toString","speech","goToSequence","mode","onDone","setTimeout","asdf","role","playerCount","push","i","useItem","name"],"mappings":"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","sourcesContent":["import { useNavigation } from '@react-navigation/native'\r\nimport * as Speech from 'expo-speech'\r\nimport React, { useContext, useState } from 'react'\r\nimport { View, Text, TouchableHighlight, Modal } from 'react-native'\r\nimport { AppContext } from '../../App'\r\nimport NavigationBar from '../components/NavigationBar'\r\nimport PlayersScreen from '../components/PlayersScreen'\r\nimport { nightTimeButtonTexts, nightTimeLabelTexts, speechSchoolAnnouncement2, speechSchoolAnnouncement1, speechToBlackenedAwake, speechToBlackenedSleep, speechToMonomi, speechToTraitorsAwake, speechToTraitorsSleep, speechToEveryoneSleep } from '../data/NightTimeDialogue'\r\nimport { AppContextType } from '../types/types'\r\n\r\n// let modalVisible:boolean = false\r\nlet modalType:string = ''\r\nlet playerIndex = 0\r\n\r\nexport default function NightTimePage() {\r\n  const navigation = useNavigation()\r\n  const appContext = useContext(AppContext)\r\n  appContext.dayNumber = 0\r\n  appContext.playersInfo.forEach(playerInfo => { playerInfo.colorScheme = 'white' })\r\n  const [sequence, setSequence] = useState(0)\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  sequenceAction(sequence, setSequence, modalVisible, setModalVisible, appContext, navigation)\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: 'lightblue' }}>\r\n        <Text>Night Time of Day {appContext.dayNumber}</Text>\r\n      </View>\r\n      <View style={{ flex: 9 }}>\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#cc0066' }}>\r\n          <Text>{nightTimeLabelTexts(appContext.dayNumber, sequence)}</Text>\r\n        </View>\r\n        <View style={{ flex: 1, flexDirection: 'row', backgroundColor: 'white' }}>\r\n          <TouchableHighlight style={{ width: '100%', height: '100%', alignItems: 'center', justifyContent: 'center' }} \r\n            onPress={() => { setSequence(sequence + 1) }}>\r\n            <Text>{nightTimeButtonTexts(appContext.dayNumber, sequence)}</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 1 }}>\r\n        <NavigationBar previousPage='ItemsPage' nextPage='MorningTimePage'></NavigationBar>\r\n      </View>\r\n      <Modal visible={modalVisible} style={{ flex: 1 }}>\r\n        <View style={{ flex: 9 }}>\r\n          <PlayersScreen modal={modalType}></PlayersScreen>\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <TouchableHighlight style={{ flex: 1, alignItems: 'center', justifyContent: 'center', backgroundColor: '#0066ff' }} \r\n            onPress={() => { setModalVisible(false) }}>\r\n            <Text>Continue</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  )\r\n}\r\n\r\nasync function sequenceAction(sequence:number, setSequence:React.Dispatch<any>, modalVisible:boolean, setModalVisible:React.Dispatch<any>, appContext:AppContextType, navigation:any) {\r\n  Speech.stop()\r\n  Speech.speak(sequence.toString())\r\n  switch (sequence) {\r\n    case 1: // School announcement\r\n      let speech = speechSchoolAnnouncement1\r\n      let goToSequence = 5\r\n      if (appContext.mode === 'extreme' && appContext.dayNumber > 0) {\r\n        speech = speechSchoolAnnouncement2\r\n        goToSequence = 2\r\n      }\r\n      Speech.speak(speech, {onDone: () => { setTimeout(() => { setSequence(goToSequence) }, 1 * 1000) }})\r\n      break\r\n    case 2: // Declare abilities and items\r\n      modalType = 'itemCards'\r\n      if (modalVisible === false) { setModalVisible(true) }\r\n      setSequence(sequence + 1)\r\n      break\r\n    case 3: // Wait until modal is closed then move on\r\n      if (modalVisible === false) { \r\n        Speech.speak(speechToEveryoneSleep, {onDone: () => { setTimeout(() => { setSequence(sequence + 1) }, 1 * 1000) }})\r\n      }\r\n      break\r\n    case 4: // Wake each person for abilities and items\r\n      if (modalVisible === false) {\r\n        asdf(appContext, setModalVisible, sequence, setSequence)\r\n      }\r\n      break\r\n    case 5: // Traitors wake\r\n      appContext.playersInfo.forEach(playerInfo => {\r\n        if (playerInfo.role === 'Blackened') { playerInfo.colorScheme = 'black' }\r\n        else if (playerInfo.role === 'Traitor') { playerInfo.colorScheme = 'grey' }\r\n      })\r\n      if (modalVisible === false) { setModalVisible(true) }\r\n      Speech.speak(speechToTraitorsAwake, {onDone: () => {\r\n        setTimeout(() => {\r\n          Speech.speak(speechToTraitorsSleep, {onDone: () => {\r\n            setTimeout(() => { setSequence(sequence + 1) }, 2 * 1000) \r\n          }})\r\n        }, 5 * 1000) \r\n      }})\r\n      break\r\n    case 6: // Monomi protect\r\n      if (appContext.mode === 'extreme' && appContext.playerCount > 6 && appContext.dayNumber > 0) { // TODO: check if Monomi is still alive\r\n        if (modalVisible === false) { setModalVisible(true) }\r\n        Speech.speak(speechToMonomi, {onDone: () => { setTimeout(() => { setSequence(sequence + 1) }, 2 * 1000)}})\r\n      } else {\r\n        setSequence(sequence + 2)\r\n      }\r\n      break\r\n    case 7: // wait until modal is closed then move on   TODO: maybe Monomi isn't in the group\r\n      if (modalVisible === false) {\r\n        setSequence(sequence + 1)\r\n      }\r\n      break\r\n    case 8: // Blackened attack\r\n      if (modalVisible === true) { setModalVisible(false) }\r\n      Speech.speak(speechToBlackenedAwake)\r\n      break\r\n    case 9: // Navigate to morning\r\n      Speech.speak(speechToBlackenedSleep, {onDone: () => {\r\n        setTimeout(() => { navigation.push('MorningTimePage') }, 2 * 1000) \r\n      }})\r\n      break\r\n  }\r\n}\r\n\r\nfunction asdf(appContext:AppContextType, setModalVisible:React.Dispatch<any>, sequence:number, setSequence:React.Dispatch<any>) {\r\n  let speech = ''\r\n  for (let i = playerIndex; i <= appContext.playerCount; i++) {\r\n    if (i === appContext.playerCount) {\r\n      setSequence(sequence + 1)\r\n      return\r\n    }\r\n    if (appContext.playersInfo[i].useItem !== '') {\r\n      playerIndex = i\r\n      break\r\n    }\r\n  }\r\n  if (appContext.playersInfo[playerIndex].useItem === 'Glasses') {\r\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are on the side of hope or despair.'\r\n  } else if (appContext.playersInfo[playerIndex].useItem === \"Someone's Graduation Album\") {\r\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a traitor or not a traitor.'\r\n  } else if (appContext.playersInfo[playerIndex].useItem === \"Silent Receiver\") {\r\n    speech = appContext.playersInfo[playerIndex].name + ', wake up. Click the player you would like to investigate whether they \\\r\n    are a spotless or not a spotless.'\r\n  }\r\n  Speech.speak(speech, {onDone: () => setModalVisible(true)})\r\n  playerIndex += 1\r\n}\r\n\r\n// async function setStepAsync(step:number, setStep:React.Dispatch<any>): Promise<void> {\r\n//   return new Promise(() => { setTimeout(() => { setStep(step + 1) }, (5 * 1000))})\r\n// }\r\n// async function setStepAsync2(): Promise<void> {\r\n//   return new Promise(() => { setTimeout(() => { }, (2 * 1000))})\r\n// }\r\n// async function waitForSpeech() {\r\n//   if ( await Speech.isSpeakingAsync() === true ) {\r\n//     setTimeout( waitForSpeech(), 1000 )\r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}